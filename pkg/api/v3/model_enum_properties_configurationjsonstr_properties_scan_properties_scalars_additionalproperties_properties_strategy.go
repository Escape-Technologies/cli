/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY the model 'ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY'
type ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY string

// List of ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_SCAN_PROPERTIES_SCALARS_ADDITIONALPROPERTIES_PROPERTIES_STRATEGY
const (
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_KEY                  ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "key"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_KEY_STRICT           ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "key_strict"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_VALUE                ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "value"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_VALUE_STRICT         ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "value_strict"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_KEY_OR_VALUE         ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "key_or_value"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_KEY_OR_VALUE_STRICT  ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "key_or_value_strict"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_KEY_STRICT_OR_VALUE  ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "key_strict_or_value"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY_KEY_AND_VALUE_STRICT ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY = "key_and_value_strict"
)

// All allowed values of ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY enum
var AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGYEnumValues = []ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY{
	"key",
	"key_strict",
	"value",
	"value_strict",
	"key_or_value",
	"key_or_value_strict",
	"key_strict_or_value",
	"key_and_value_strict",
}

func (v *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY(value)
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGYEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY", value)
}

// NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGYFromValue returns a pointer to a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGYFromValue(v string) (*ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY, error) {
	ev := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY: valid values are %v", v, AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGYEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGYEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_SCAN_PROPERTIES_SCALARS_ADDITIONALPROPERTIES_PROPERTIES_STRATEGY value
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) Ptr() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY {
	return &v
}

type NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY struct {
	value *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY
	isSet bool
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) Get() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY {
	return v.value
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) Set(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY {
	return &NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESSTRATEGY) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
