/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateDastGraphqlProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDastGraphqlProfileRequest{}

// CreateDastGraphqlProfileRequest struct for CreateDastGraphqlProfileRequest
type CreateDastGraphqlProfileRequest struct {
	// The asset ID for the profile
	AssetId string `json:"assetId"`
	// The configuration as JSON string
	Configuration *string `json:"configuration,omitempty"`
	// The cron string
	Cron *string `json:"cron,omitempty"`
	// The name of the profile
	Name string `json:"name"`
	// The proxy ID for the profile
	ProxyId *string `json:"proxyId,omitempty"`
	// The asset ID of the schema used to scan the profile
	SchemaId string `json:"schemaId"`
	// The tags IDs for the profile
	TagsIds []string `json:"tagsIds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateDastGraphqlProfileRequest CreateDastGraphqlProfileRequest

// NewCreateDastGraphqlProfileRequest instantiates a new CreateDastGraphqlProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDastGraphqlProfileRequest(assetId string, name string, schemaId string) *CreateDastGraphqlProfileRequest {
	this := CreateDastGraphqlProfileRequest{}
	this.AssetId = assetId
	this.Name = name
	this.SchemaId = schemaId
	return &this
}

// NewCreateDastGraphqlProfileRequestWithDefaults instantiates a new CreateDastGraphqlProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDastGraphqlProfileRequestWithDefaults() *CreateDastGraphqlProfileRequest {
	this := CreateDastGraphqlProfileRequest{}
	return &this
}

// GetAssetId returns the AssetId field value
func (o *CreateDastGraphqlProfileRequest) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CreateDastGraphqlProfileRequest) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CreateDastGraphqlProfileRequest) SetAssetId(v string) {
	o.AssetId = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *CreateDastGraphqlProfileRequest) GetConfiguration() string {
	if o == nil || IsNil(o.Configuration) {
		var ret string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDastGraphqlProfileRequest) GetConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *CreateDastGraphqlProfileRequest) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given string and assigns it to the Configuration field.
func (o *CreateDastGraphqlProfileRequest) SetConfiguration(v string) {
	o.Configuration = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *CreateDastGraphqlProfileRequest) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDastGraphqlProfileRequest) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *CreateDastGraphqlProfileRequest) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *CreateDastGraphqlProfileRequest) SetCron(v string) {
	o.Cron = &v
}

// GetName returns the Name field value
func (o *CreateDastGraphqlProfileRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateDastGraphqlProfileRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateDastGraphqlProfileRequest) SetName(v string) {
	o.Name = v
}

// GetProxyId returns the ProxyId field value if set, zero value otherwise.
func (o *CreateDastGraphqlProfileRequest) GetProxyId() string {
	if o == nil || IsNil(o.ProxyId) {
		var ret string
		return ret
	}
	return *o.ProxyId
}

// GetProxyIdOk returns a tuple with the ProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDastGraphqlProfileRequest) GetProxyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyId) {
		return nil, false
	}
	return o.ProxyId, true
}

// HasProxyId returns a boolean if a field has been set.
func (o *CreateDastGraphqlProfileRequest) HasProxyId() bool {
	if o != nil && !IsNil(o.ProxyId) {
		return true
	}

	return false
}

// SetProxyId gets a reference to the given string and assigns it to the ProxyId field.
func (o *CreateDastGraphqlProfileRequest) SetProxyId(v string) {
	o.ProxyId = &v
}

// GetSchemaId returns the SchemaId field value
func (o *CreateDastGraphqlProfileRequest) GetSchemaId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SchemaId
}

// GetSchemaIdOk returns a tuple with the SchemaId field value
// and a boolean to check if the value has been set.
func (o *CreateDastGraphqlProfileRequest) GetSchemaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemaId, true
}

// SetSchemaId sets field value
func (o *CreateDastGraphqlProfileRequest) SetSchemaId(v string) {
	o.SchemaId = v
}

// GetTagsIds returns the TagsIds field value if set, zero value otherwise.
func (o *CreateDastGraphqlProfileRequest) GetTagsIds() []string {
	if o == nil || IsNil(o.TagsIds) {
		var ret []string
		return ret
	}
	return o.TagsIds
}

// GetTagsIdsOk returns a tuple with the TagsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDastGraphqlProfileRequest) GetTagsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagsIds) {
		return nil, false
	}
	return o.TagsIds, true
}

// HasTagsIds returns a boolean if a field has been set.
func (o *CreateDastGraphqlProfileRequest) HasTagsIds() bool {
	if o != nil && !IsNil(o.TagsIds) {
		return true
	}

	return false
}

// SetTagsIds gets a reference to the given []string and assigns it to the TagsIds field.
func (o *CreateDastGraphqlProfileRequest) SetTagsIds(v []string) {
	o.TagsIds = v
}

func (o CreateDastGraphqlProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDastGraphqlProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assetId"] = o.AssetId
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.ProxyId) {
		toSerialize["proxyId"] = o.ProxyId
	}
	toSerialize["schemaId"] = o.SchemaId
	if !IsNil(o.TagsIds) {
		toSerialize["tagsIds"] = o.TagsIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateDastGraphqlProfileRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assetId",
		"name",
		"schemaId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDastGraphqlProfileRequest := _CreateDastGraphqlProfileRequest{}

	err = json.Unmarshal(data, &varCreateDastGraphqlProfileRequest)

	if err != nil {
		return err
	}

	*o = CreateDastGraphqlProfileRequest(varCreateDastGraphqlProfileRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "assetId")
		delete(additionalProperties, "configuration")
		delete(additionalProperties, "cron")
		delete(additionalProperties, "name")
		delete(additionalProperties, "proxyId")
		delete(additionalProperties, "schemaId")
		delete(additionalProperties, "tagsIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateDastGraphqlProfileRequest struct {
	value *CreateDastGraphqlProfileRequest
	isSet bool
}

func (v NullableCreateDastGraphqlProfileRequest) Get() *CreateDastGraphqlProfileRequest {
	return v.value
}

func (v *NullableCreateDastGraphqlProfileRequest) Set(val *CreateDastGraphqlProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDastGraphqlProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDastGraphqlProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDastGraphqlProfileRequest(val *CreateDastGraphqlProfileRequest) *NullableCreateDastGraphqlProfileRequest {
	return &NullableCreateDastGraphqlProfileRequest{value: val, isSet: true}
}

func (v NullableCreateDastGraphqlProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDastGraphqlProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


