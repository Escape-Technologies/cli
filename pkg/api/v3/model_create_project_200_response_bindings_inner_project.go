/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CreateProject200ResponseBindingsInnerProject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProject200ResponseBindingsInnerProject{}

// CreateProject200ResponseBindingsInnerProject struct for CreateProject200ResponseBindingsInnerProject
type CreateProject200ResponseBindingsInnerProject struct {
	// The id of the project
	Id string `json:"id"`
	// The name of the project
	Name string `json:"name"`
	// The date and time the project was created
	CreatedAt time.Time `json:"createdAt"`
	AdditionalProperties map[string]interface{}
}

type _CreateProject200ResponseBindingsInnerProject CreateProject200ResponseBindingsInnerProject

// NewCreateProject200ResponseBindingsInnerProject instantiates a new CreateProject200ResponseBindingsInnerProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProject200ResponseBindingsInnerProject(id string, name string, createdAt time.Time) *CreateProject200ResponseBindingsInnerProject {
	this := CreateProject200ResponseBindingsInnerProject{}
	this.Id = id
	this.Name = name
	this.CreatedAt = createdAt
	return &this
}

// NewCreateProject200ResponseBindingsInnerProjectWithDefaults instantiates a new CreateProject200ResponseBindingsInnerProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProject200ResponseBindingsInnerProjectWithDefaults() *CreateProject200ResponseBindingsInnerProject {
	this := CreateProject200ResponseBindingsInnerProject{}
	return &this
}

// GetId returns the Id field value
func (o *CreateProject200ResponseBindingsInnerProject) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInnerProject) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateProject200ResponseBindingsInnerProject) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CreateProject200ResponseBindingsInnerProject) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInnerProject) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateProject200ResponseBindingsInnerProject) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateProject200ResponseBindingsInnerProject) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInnerProject) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateProject200ResponseBindingsInnerProject) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o CreateProject200ResponseBindingsInnerProject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProject200ResponseBindingsInnerProject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["createdAt"] = o.CreatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateProject200ResponseBindingsInnerProject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"createdAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProject200ResponseBindingsInnerProject := _CreateProject200ResponseBindingsInnerProject{}

	err = json.Unmarshal(data, &varCreateProject200ResponseBindingsInnerProject)

	if err != nil {
		return err
	}

	*o = CreateProject200ResponseBindingsInnerProject(varCreateProject200ResponseBindingsInnerProject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "createdAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateProject200ResponseBindingsInnerProject struct {
	value *CreateProject200ResponseBindingsInnerProject
	isSet bool
}

func (v NullableCreateProject200ResponseBindingsInnerProject) Get() *CreateProject200ResponseBindingsInnerProject {
	return v.value
}

func (v *NullableCreateProject200ResponseBindingsInnerProject) Set(val *CreateProject200ResponseBindingsInnerProject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProject200ResponseBindingsInnerProject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProject200ResponseBindingsInnerProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProject200ResponseBindingsInnerProject(val *CreateProject200ResponseBindingsInnerProject) *NullableCreateProject200ResponseBindingsInnerProject {
	return &NullableCreateProject200ResponseBindingsInnerProject{value: val, isSet: true}
}

func (v NullableCreateProject200ResponseBindingsInnerProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProject200ResponseBindingsInnerProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


