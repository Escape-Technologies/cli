/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)


// CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner struct for CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner
type CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner struct {
	ArrayOfAny *[]interface{}
	MapmapOfStringAny *map[string]interface{}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ArrayOfAny
	err = json.Unmarshal(data, &dst.ArrayOfAny);
	if err == nil {
		jsonArrayOfAny, _ := json.Marshal(dst.ArrayOfAny)
		if string(jsonArrayOfAny) == "{}" { // empty struct
			dst.ArrayOfAny = nil
		} else {
			return nil // data stored in dst.ArrayOfAny, return on the first match
		}
	} else {
		dst.ArrayOfAny = nil
	}

	// try to unmarshal JSON data into MapmapOfStringAny
	err = json.Unmarshal(data, &dst.MapmapOfStringAny);
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			return nil // data stored in dst.MapmapOfStringAny, return on the first match
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) MarshalJSON() ([]byte, error) {
	if src.ArrayOfAny != nil {
		return json.Marshal(&src.ArrayOfAny)
	}

	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner struct {
	value *CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner
	isSet bool
}

func (v NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) Get() *CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner {
	return v.value
}

func (v *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) Set(val *CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner(val *CustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner {
	return &NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner{value: val, isSet: true}
}

func (v NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf11InInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


