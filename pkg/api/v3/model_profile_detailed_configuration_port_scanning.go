/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationPortScanning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationPortScanning{}

// ProfileDetailedConfigurationPortScanning struct for ProfileDetailedConfigurationPortScanning
type ProfileDetailedConfigurationPortScanning struct {
	Ports []float32 `json:"ports,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationPortScanning ProfileDetailedConfigurationPortScanning

// NewProfileDetailedConfigurationPortScanning instantiates a new ProfileDetailedConfigurationPortScanning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationPortScanning() *ProfileDetailedConfigurationPortScanning {
	this := ProfileDetailedConfigurationPortScanning{}
	return &this
}

// NewProfileDetailedConfigurationPortScanningWithDefaults instantiates a new ProfileDetailedConfigurationPortScanning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationPortScanningWithDefaults() *ProfileDetailedConfigurationPortScanning {
	this := ProfileDetailedConfigurationPortScanning{}
	return &this
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationPortScanning) GetPorts() []float32 {
	if o == nil || IsNil(o.Ports) {
		var ret []float32
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationPortScanning) GetPortsOk() ([]float32, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationPortScanning) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []float32 and assigns it to the Ports field.
func (o *ProfileDetailedConfigurationPortScanning) SetPorts(v []float32) {
	o.Ports = v
}

func (o ProfileDetailedConfigurationPortScanning) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationPortScanning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationPortScanning) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationPortScanning := _ProfileDetailedConfigurationPortScanning{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationPortScanning)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationPortScanning(varProfileDetailedConfigurationPortScanning)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ports")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationPortScanning struct {
	value *ProfileDetailedConfigurationPortScanning
	isSet bool
}

func (v NullableProfileDetailedConfigurationPortScanning) Get() *ProfileDetailedConfigurationPortScanning {
	return v.value
}

func (v *NullableProfileDetailedConfigurationPortScanning) Set(val *ProfileDetailedConfigurationPortScanning) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationPortScanning) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationPortScanning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationPortScanning(val *ProfileDetailedConfigurationPortScanning) *NullableProfileDetailedConfigurationPortScanning {
	return &NullableProfileDetailedConfigurationPortScanning{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationPortScanning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationPortScanning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


