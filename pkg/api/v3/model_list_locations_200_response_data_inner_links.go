/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ListLocations200ResponseDataInnerLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLocations200ResponseDataInnerLinks{}

// ListLocations200ResponseDataInnerLinks struct for ListLocations200ResponseDataInnerLinks
type ListLocations200ResponseDataInnerLinks struct {
	// The URL of the location overview.
	LocationOverview string `json:"locationOverview"`
	AdditionalProperties map[string]interface{}
}

type _ListLocations200ResponseDataInnerLinks ListLocations200ResponseDataInnerLinks

// NewListLocations200ResponseDataInnerLinks instantiates a new ListLocations200ResponseDataInnerLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLocations200ResponseDataInnerLinks(locationOverview string) *ListLocations200ResponseDataInnerLinks {
	this := ListLocations200ResponseDataInnerLinks{}
	this.LocationOverview = locationOverview
	return &this
}

// NewListLocations200ResponseDataInnerLinksWithDefaults instantiates a new ListLocations200ResponseDataInnerLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLocations200ResponseDataInnerLinksWithDefaults() *ListLocations200ResponseDataInnerLinks {
	this := ListLocations200ResponseDataInnerLinks{}
	return &this
}

// GetLocationOverview returns the LocationOverview field value
func (o *ListLocations200ResponseDataInnerLinks) GetLocationOverview() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocationOverview
}

// GetLocationOverviewOk returns a tuple with the LocationOverview field value
// and a boolean to check if the value has been set.
func (o *ListLocations200ResponseDataInnerLinks) GetLocationOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationOverview, true
}

// SetLocationOverview sets field value
func (o *ListLocations200ResponseDataInnerLinks) SetLocationOverview(v string) {
	o.LocationOverview = v
}

func (o ListLocations200ResponseDataInnerLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLocations200ResponseDataInnerLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locationOverview"] = o.LocationOverview

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListLocations200ResponseDataInnerLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locationOverview",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListLocations200ResponseDataInnerLinks := _ListLocations200ResponseDataInnerLinks{}

	err = json.Unmarshal(data, &varListLocations200ResponseDataInnerLinks)

	if err != nil {
		return err
	}

	*o = ListLocations200ResponseDataInnerLinks(varListLocations200ResponseDataInnerLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "locationOverview")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListLocations200ResponseDataInnerLinks struct {
	value *ListLocations200ResponseDataInnerLinks
	isSet bool
}

func (v NullableListLocations200ResponseDataInnerLinks) Get() *ListLocations200ResponseDataInnerLinks {
	return v.value
}

func (v *NullableListLocations200ResponseDataInnerLinks) Set(val *ListLocations200ResponseDataInnerLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableListLocations200ResponseDataInnerLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableListLocations200ResponseDataInnerLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLocations200ResponseDataInnerLinks(val *ListLocations200ResponseDataInnerLinks) *NullableListLocations200ResponseDataInnerLinks {
	return &NullableListLocations200ResponseDataInnerLinks{value: val, isSet: true}
}

func (v NullableListLocations200ResponseDataInnerLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLocations200ResponseDataInnerLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


