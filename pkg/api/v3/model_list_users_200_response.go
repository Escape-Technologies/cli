/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ListUsers200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUsers200Response{}

// ListUsers200Response struct for ListUsers200Response
type ListUsers200Response struct {
	// The id of the user
	Id string `json:"id"`
	// The email of the user
	Email string `json:"email"`
	// The date and time the user was created
	CreatedAt time.Time `json:"createdAt"`
	// The date and time the user was activated
	ActivatedAt *time.Time `json:"activatedAt,omitempty"`
	// The profile picture link of the user
	ProfilePictureLink *string `json:"profilePictureLink,omitempty"`
	// Whether the user is a support account
	SupportAccount bool `json:"supportAccount"`
	// The bindings of the user
	Bindings []ListProjects200ResponseDataInnerBindingsInner `json:"bindings"`
	AdditionalProperties map[string]interface{}
}

type _ListUsers200Response ListUsers200Response

// NewListUsers200Response instantiates a new ListUsers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUsers200Response(id string, email string, createdAt time.Time, supportAccount bool, bindings []ListProjects200ResponseDataInnerBindingsInner) *ListUsers200Response {
	this := ListUsers200Response{}
	this.Id = id
	this.Email = email
	this.CreatedAt = createdAt
	this.SupportAccount = supportAccount
	this.Bindings = bindings
	return &this
}

// NewListUsers200ResponseWithDefaults instantiates a new ListUsers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUsers200ResponseWithDefaults() *ListUsers200Response {
	this := ListUsers200Response{}
	return &this
}

// GetId returns the Id field value
func (o *ListUsers200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListUsers200Response) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *ListUsers200Response) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ListUsers200Response) SetEmail(v string) {
	o.Email = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ListUsers200Response) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ListUsers200Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetActivatedAt returns the ActivatedAt field value if set, zero value otherwise.
func (o *ListUsers200Response) GetActivatedAt() time.Time {
	if o == nil || IsNil(o.ActivatedAt) {
		var ret time.Time
		return ret
	}
	return *o.ActivatedAt
}

// GetActivatedAtOk returns a tuple with the ActivatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetActivatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActivatedAt) {
		return nil, false
	}
	return o.ActivatedAt, true
}

// HasActivatedAt returns a boolean if a field has been set.
func (o *ListUsers200Response) HasActivatedAt() bool {
	if o != nil && !IsNil(o.ActivatedAt) {
		return true
	}

	return false
}

// SetActivatedAt gets a reference to the given time.Time and assigns it to the ActivatedAt field.
func (o *ListUsers200Response) SetActivatedAt(v time.Time) {
	o.ActivatedAt = &v
}

// GetProfilePictureLink returns the ProfilePictureLink field value if set, zero value otherwise.
func (o *ListUsers200Response) GetProfilePictureLink() string {
	if o == nil || IsNil(o.ProfilePictureLink) {
		var ret string
		return ret
	}
	return *o.ProfilePictureLink
}

// GetProfilePictureLinkOk returns a tuple with the ProfilePictureLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetProfilePictureLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ProfilePictureLink) {
		return nil, false
	}
	return o.ProfilePictureLink, true
}

// HasProfilePictureLink returns a boolean if a field has been set.
func (o *ListUsers200Response) HasProfilePictureLink() bool {
	if o != nil && !IsNil(o.ProfilePictureLink) {
		return true
	}

	return false
}

// SetProfilePictureLink gets a reference to the given string and assigns it to the ProfilePictureLink field.
func (o *ListUsers200Response) SetProfilePictureLink(v string) {
	o.ProfilePictureLink = &v
}

// GetSupportAccount returns the SupportAccount field value
func (o *ListUsers200Response) GetSupportAccount() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SupportAccount
}

// GetSupportAccountOk returns a tuple with the SupportAccount field value
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetSupportAccountOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportAccount, true
}

// SetSupportAccount sets field value
func (o *ListUsers200Response) SetSupportAccount(v bool) {
	o.SupportAccount = v
}

// GetBindings returns the Bindings field value
func (o *ListUsers200Response) GetBindings() []ListProjects200ResponseDataInnerBindingsInner {
	if o == nil {
		var ret []ListProjects200ResponseDataInnerBindingsInner
		return ret
	}

	return o.Bindings
}

// GetBindingsOk returns a tuple with the Bindings field value
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetBindingsOk() ([]ListProjects200ResponseDataInnerBindingsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bindings, true
}

// SetBindings sets field value
func (o *ListUsers200Response) SetBindings(v []ListProjects200ResponseDataInnerBindingsInner) {
	o.Bindings = v
}

func (o ListUsers200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUsers200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["email"] = o.Email
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.ActivatedAt) {
		toSerialize["activatedAt"] = o.ActivatedAt
	}
	if !IsNil(o.ProfilePictureLink) {
		toSerialize["profilePictureLink"] = o.ProfilePictureLink
	}
	toSerialize["supportAccount"] = o.SupportAccount
	toSerialize["bindings"] = o.Bindings

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListUsers200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"email",
		"createdAt",
		"supportAccount",
		"bindings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListUsers200Response := _ListUsers200Response{}

	err = json.Unmarshal(data, &varListUsers200Response)

	if err != nil {
		return err
	}

	*o = ListUsers200Response(varListUsers200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "email")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "activatedAt")
		delete(additionalProperties, "profilePictureLink")
		delete(additionalProperties, "supportAccount")
		delete(additionalProperties, "bindings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListUsers200Response struct {
	value *ListUsers200Response
	isSet bool
}

func (v NullableListUsers200Response) Get() *ListUsers200Response {
	return v.value
}

func (v *NullableListUsers200Response) Set(val *ListUsers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListUsers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListUsers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUsers200Response(val *ListUsers200Response) *NullableListUsers200Response {
	return &NullableListUsers200Response{value: val, isSet: true}
}

func (v NullableListUsers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUsers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


