/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 The stage of the event
type Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 string

// List of Enum_34c4bb5e862eb0ecedb41ea70fd4e2a4
const (
	ENUM34C4BB5E862EB0ECEDB41EA70FD4E2A4_CONFIGURATION Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 = "CONFIGURATION"
	ENUM34C4BB5E862EB0ECEDB41EA70FD4E2A4_EXECUTION Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 = "EXECUTION"
)

// All allowed values of Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 enum
var AllowedEnum34c4bb5e862eb0ecedb41ea70fd4e2a4EnumValues = []Enum34c4bb5e862eb0ecedb41ea70fd4e2a4{
	"CONFIGURATION",
	"EXECUTION",
}

func (v *Enum34c4bb5e862eb0ecedb41ea70fd4e2a4) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum34c4bb5e862eb0ecedb41ea70fd4e2a4(value)
	for _, existing := range AllowedEnum34c4bb5e862eb0ecedb41ea70fd4e2a4EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum34c4bb5e862eb0ecedb41ea70fd4e2a4", value)
}

// NewEnum34c4bb5e862eb0ecedb41ea70fd4e2a4FromValue returns a pointer to a valid Enum34c4bb5e862eb0ecedb41ea70fd4e2a4
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum34c4bb5e862eb0ecedb41ea70fd4e2a4FromValue(v string) (*Enum34c4bb5e862eb0ecedb41ea70fd4e2a4, error) {
	ev := Enum34c4bb5e862eb0ecedb41ea70fd4e2a4(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum34c4bb5e862eb0ecedb41ea70fd4e2a4: valid values are %v", v, AllowedEnum34c4bb5e862eb0ecedb41ea70fd4e2a4EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum34c4bb5e862eb0ecedb41ea70fd4e2a4) IsValid() bool {
	for _, existing := range AllowedEnum34c4bb5e862eb0ecedb41ea70fd4e2a4EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_34c4bb5e862eb0ecedb41ea70fd4e2a4 value
func (v Enum34c4bb5e862eb0ecedb41ea70fd4e2a4) Ptr() *Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 {
	return &v
}

type NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4 struct {
	value *Enum34c4bb5e862eb0ecedb41ea70fd4e2a4
	isSet bool
}

func (v NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4) Get() *Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 {
	return v.value
}

func (v *NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4) Set(val *Enum34c4bb5e862eb0ecedb41ea70fd4e2a4) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4(val *Enum34c4bb5e862eb0ecedb41ea70fd4e2a4) *NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4 {
	return &NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4{value: val, isSet: true}
}

func (v NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum34c4bb5e862eb0ecedb41ea70fd4e2a4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

