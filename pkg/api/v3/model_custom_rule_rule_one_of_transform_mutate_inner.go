/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CustomRuleRuleOneOfTransformMutateInner - struct for CustomRuleRuleOneOfTransformMutateInner
type CustomRuleRuleOneOfTransformMutateInner struct {
	CustomRuleRuleOneOfTransformMutateInnerOneOf *CustomRuleRuleOneOfTransformMutateInnerOneOf
	CustomRuleRuleOneOfTransformMutateInnerOneOf1 *CustomRuleRuleOneOfTransformMutateInnerOneOf1
	CustomRuleRuleOneOfTransformMutateInnerOneOf2 *CustomRuleRuleOneOfTransformMutateInnerOneOf2
	CustomRuleRuleOneOfTransformMutateInnerOneOf3 *CustomRuleRuleOneOfTransformMutateInnerOneOf3
	CustomRuleRuleOneOfTransformMutateInnerOneOf4 *CustomRuleRuleOneOfTransformMutateInnerOneOf4
	CustomRuleRuleOneOfTransformMutateInnerOneOf5 *CustomRuleRuleOneOfTransformMutateInnerOneOf5
	CustomRuleRuleOneOfTransformMutateInnerOneOf6 *CustomRuleRuleOneOfTransformMutateInnerOneOf6
	CustomRuleRuleOneOfTransformMutateInnerOneOf7 *CustomRuleRuleOneOfTransformMutateInnerOneOf7
}

// CustomRuleRuleOneOfTransformMutateInnerOneOfAsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOfAsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf: v,
	}
}

// CustomRuleRuleOneOfTransformMutateInnerOneOf1AsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf1 wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOf1AsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf1) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf1: v,
	}
}

// CustomRuleRuleOneOfTransformMutateInnerOneOf2AsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf2 wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOf2AsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf2) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf2: v,
	}
}

// CustomRuleRuleOneOfTransformMutateInnerOneOf3AsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf3 wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOf3AsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf3) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf3: v,
	}
}

// CustomRuleRuleOneOfTransformMutateInnerOneOf4AsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf4 wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOf4AsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf4) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf4: v,
	}
}

// CustomRuleRuleOneOfTransformMutateInnerOneOf5AsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf5 wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOf5AsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf5) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf5: v,
	}
}

// CustomRuleRuleOneOfTransformMutateInnerOneOf6AsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf6 wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOf6AsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf6) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf6: v,
	}
}

// CustomRuleRuleOneOfTransformMutateInnerOneOf7AsCustomRuleRuleOneOfTransformMutateInner is a convenience function that returns CustomRuleRuleOneOfTransformMutateInnerOneOf7 wrapped in CustomRuleRuleOneOfTransformMutateInner
func CustomRuleRuleOneOfTransformMutateInnerOneOf7AsCustomRuleRuleOneOfTransformMutateInner(v *CustomRuleRuleOneOfTransformMutateInnerOneOf7) CustomRuleRuleOneOfTransformMutateInner {
	return CustomRuleRuleOneOfTransformMutateInner{
		CustomRuleRuleOneOfTransformMutateInnerOneOf7: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CustomRuleRuleOneOfTransformMutateInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf1)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf1, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf1)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf1) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf1); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf1 = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf2
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf2)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf2, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf2)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf2) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf2 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf2); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf2 = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf3
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf3)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf3, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf3)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf3) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf3 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf3); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf3 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf3 = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf4
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf4)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf4, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf4)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf4) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf4 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf4); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf4 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf4 = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf5
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf5)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf5, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf5)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf5) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf5 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf5); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf5 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf5 = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf6
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf6)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf6, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf6)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf6) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf6 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf6); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf6 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf6 = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfTransformMutateInnerOneOf7
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfTransformMutateInnerOneOf7)
	if err == nil {
		jsonCustomRuleRuleOneOfTransformMutateInnerOneOf7, _ := json.Marshal(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf7)
		if string(jsonCustomRuleRuleOneOfTransformMutateInnerOneOf7) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfTransformMutateInnerOneOf7 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfTransformMutateInnerOneOf7); err != nil {
				dst.CustomRuleRuleOneOfTransformMutateInnerOneOf7 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf7 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf = nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf1 = nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf2 = nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf3 = nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf4 = nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf5 = nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf6 = nil
		dst.CustomRuleRuleOneOfTransformMutateInnerOneOf7 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CustomRuleRuleOneOfTransformMutateInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CustomRuleRuleOneOfTransformMutateInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CustomRuleRuleOneOfTransformMutateInner) MarshalJSON() ([]byte, error) {
	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf)
	}

	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf1 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf1)
	}

	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf2 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf2)
	}

	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf3 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf3)
	}

	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf4 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf4)
	}

	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf5 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf5)
	}

	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf6 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf6)
	}

	if src.CustomRuleRuleOneOfTransformMutateInnerOneOf7 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfTransformMutateInnerOneOf7)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CustomRuleRuleOneOfTransformMutateInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf1 != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf1
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf2 != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf2
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf3 != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf3
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf4 != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf4
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf5 != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf5
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf6 != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf6
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf7 != nil {
		return obj.CustomRuleRuleOneOfTransformMutateInnerOneOf7
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CustomRuleRuleOneOfTransformMutateInner) GetActualInstanceValue() (interface{}) {
	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf1 != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf1
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf2 != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf2
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf3 != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf3
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf4 != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf4
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf5 != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf5
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf6 != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf6
	}

	if obj.CustomRuleRuleOneOfTransformMutateInnerOneOf7 != nil {
		return *obj.CustomRuleRuleOneOfTransformMutateInnerOneOf7
	}

	// all schemas are nil
	return nil
}

type NullableCustomRuleRuleOneOfTransformMutateInner struct {
	value *CustomRuleRuleOneOfTransformMutateInner
	isSet bool
}

func (v NullableCustomRuleRuleOneOfTransformMutateInner) Get() *CustomRuleRuleOneOfTransformMutateInner {
	return v.value
}

func (v *NullableCustomRuleRuleOneOfTransformMutateInner) Set(val *CustomRuleRuleOneOfTransformMutateInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRuleRuleOneOfTransformMutateInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRuleRuleOneOfTransformMutateInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRuleRuleOneOfTransformMutateInner(val *CustomRuleRuleOneOfTransformMutateInner) *NullableCustomRuleRuleOneOfTransformMutateInner {
	return &NullableCustomRuleRuleOneOfTransformMutateInner{value: val, isSet: true}
}

func (v NullableCustomRuleRuleOneOfTransformMutateInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRuleRuleOneOfTransformMutateInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


