/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationAuthentication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationAuthentication{}

// ProfileDetailedConfigurationAuthentication struct for ProfileDetailedConfigurationAuthentication
type ProfileDetailedConfigurationAuthentication struct {
	Lifetime *float32 `json:"lifetime,omitempty"`
	Schema *string `json:"$schema,omitempty"`
	Procedures []ProfileDetailedConfigurationAuthenticationProceduresInner `json:"procedures,omitempty"`
	Presets []ProfileDetailedConfigurationAuthenticationPresetsInner `json:"presets,omitempty"`
	Users []ProfileDetailedConfigurationAuthenticationUsersInner `json:"users,omitempty"`
	Proxy *string `json:"proxy,omitempty"`
	Validation *bool `json:"validation,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationAuthentication ProfileDetailedConfigurationAuthentication

// NewProfileDetailedConfigurationAuthentication instantiates a new ProfileDetailedConfigurationAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationAuthentication() *ProfileDetailedConfigurationAuthentication {
	this := ProfileDetailedConfigurationAuthentication{}
	return &this
}

// NewProfileDetailedConfigurationAuthenticationWithDefaults instantiates a new ProfileDetailedConfigurationAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationAuthenticationWithDefaults() *ProfileDetailedConfigurationAuthentication {
	this := ProfileDetailedConfigurationAuthentication{}
	return &this
}

// GetLifetime returns the Lifetime field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthentication) GetLifetime() float32 {
	if o == nil || IsNil(o.Lifetime) {
		var ret float32
		return ret
	}
	return *o.Lifetime
}

// GetLifetimeOk returns a tuple with the Lifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthentication) GetLifetimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Lifetime) {
		return nil, false
	}
	return o.Lifetime, true
}

// HasLifetime returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthentication) HasLifetime() bool {
	if o != nil && !IsNil(o.Lifetime) {
		return true
	}

	return false
}

// SetLifetime gets a reference to the given float32 and assigns it to the Lifetime field.
func (o *ProfileDetailedConfigurationAuthentication) SetLifetime(v float32) {
	o.Lifetime = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthentication) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthentication) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthentication) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *ProfileDetailedConfigurationAuthentication) SetSchema(v string) {
	o.Schema = &v
}

// GetProcedures returns the Procedures field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthentication) GetProcedures() []ProfileDetailedConfigurationAuthenticationProceduresInner {
	if o == nil || IsNil(o.Procedures) {
		var ret []ProfileDetailedConfigurationAuthenticationProceduresInner
		return ret
	}
	return o.Procedures
}

// GetProceduresOk returns a tuple with the Procedures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthentication) GetProceduresOk() ([]ProfileDetailedConfigurationAuthenticationProceduresInner, bool) {
	if o == nil || IsNil(o.Procedures) {
		return nil, false
	}
	return o.Procedures, true
}

// HasProcedures returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthentication) HasProcedures() bool {
	if o != nil && !IsNil(o.Procedures) {
		return true
	}

	return false
}

// SetProcedures gets a reference to the given []ProfileDetailedConfigurationAuthenticationProceduresInner and assigns it to the Procedures field.
func (o *ProfileDetailedConfigurationAuthentication) SetProcedures(v []ProfileDetailedConfigurationAuthenticationProceduresInner) {
	o.Procedures = v
}

// GetPresets returns the Presets field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthentication) GetPresets() []ProfileDetailedConfigurationAuthenticationPresetsInner {
	if o == nil || IsNil(o.Presets) {
		var ret []ProfileDetailedConfigurationAuthenticationPresetsInner
		return ret
	}
	return o.Presets
}

// GetPresetsOk returns a tuple with the Presets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthentication) GetPresetsOk() ([]ProfileDetailedConfigurationAuthenticationPresetsInner, bool) {
	if o == nil || IsNil(o.Presets) {
		return nil, false
	}
	return o.Presets, true
}

// HasPresets returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthentication) HasPresets() bool {
	if o != nil && !IsNil(o.Presets) {
		return true
	}

	return false
}

// SetPresets gets a reference to the given []ProfileDetailedConfigurationAuthenticationPresetsInner and assigns it to the Presets field.
func (o *ProfileDetailedConfigurationAuthentication) SetPresets(v []ProfileDetailedConfigurationAuthenticationPresetsInner) {
	o.Presets = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthentication) GetUsers() []ProfileDetailedConfigurationAuthenticationUsersInner {
	if o == nil || IsNil(o.Users) {
		var ret []ProfileDetailedConfigurationAuthenticationUsersInner
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthentication) GetUsersOk() ([]ProfileDetailedConfigurationAuthenticationUsersInner, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthentication) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []ProfileDetailedConfigurationAuthenticationUsersInner and assigns it to the Users field.
func (o *ProfileDetailedConfigurationAuthentication) SetUsers(v []ProfileDetailedConfigurationAuthenticationUsersInner) {
	o.Users = v
}

// GetProxy returns the Proxy field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthentication) GetProxy() string {
	if o == nil || IsNil(o.Proxy) {
		var ret string
		return ret
	}
	return *o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthentication) GetProxyOk() (*string, bool) {
	if o == nil || IsNil(o.Proxy) {
		return nil, false
	}
	return o.Proxy, true
}

// HasProxy returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthentication) HasProxy() bool {
	if o != nil && !IsNil(o.Proxy) {
		return true
	}

	return false
}

// SetProxy gets a reference to the given string and assigns it to the Proxy field.
func (o *ProfileDetailedConfigurationAuthentication) SetProxy(v string) {
	o.Proxy = &v
}

// GetValidation returns the Validation field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthentication) GetValidation() bool {
	if o == nil || IsNil(o.Validation) {
		var ret bool
		return ret
	}
	return *o.Validation
}

// GetValidationOk returns a tuple with the Validation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthentication) GetValidationOk() (*bool, bool) {
	if o == nil || IsNil(o.Validation) {
		return nil, false
	}
	return o.Validation, true
}

// HasValidation returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthentication) HasValidation() bool {
	if o != nil && !IsNil(o.Validation) {
		return true
	}

	return false
}

// SetValidation gets a reference to the given bool and assigns it to the Validation field.
func (o *ProfileDetailedConfigurationAuthentication) SetValidation(v bool) {
	o.Validation = &v
}

func (o ProfileDetailedConfigurationAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationAuthentication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lifetime) {
		toSerialize["lifetime"] = o.Lifetime
	}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.Procedures) {
		toSerialize["procedures"] = o.Procedures
	}
	if !IsNil(o.Presets) {
		toSerialize["presets"] = o.Presets
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if !IsNil(o.Proxy) {
		toSerialize["proxy"] = o.Proxy
	}
	if !IsNil(o.Validation) {
		toSerialize["validation"] = o.Validation
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationAuthentication) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationAuthentication := _ProfileDetailedConfigurationAuthentication{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationAuthentication)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationAuthentication(varProfileDetailedConfigurationAuthentication)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "lifetime")
		delete(additionalProperties, "$schema")
		delete(additionalProperties, "procedures")
		delete(additionalProperties, "presets")
		delete(additionalProperties, "users")
		delete(additionalProperties, "proxy")
		delete(additionalProperties, "validation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationAuthentication struct {
	value *ProfileDetailedConfigurationAuthentication
	isSet bool
}

func (v NullableProfileDetailedConfigurationAuthentication) Get() *ProfileDetailedConfigurationAuthentication {
	return v.value
}

func (v *NullableProfileDetailedConfigurationAuthentication) Set(val *ProfileDetailedConfigurationAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationAuthentication(val *ProfileDetailedConfigurationAuthentication) *NullableProfileDetailedConfigurationAuthentication {
	return &NullableProfileDetailedConfigurationAuthentication{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


