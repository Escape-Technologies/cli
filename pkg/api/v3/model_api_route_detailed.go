/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ApiRouteDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRouteDetailed{}

// ApiRouteDetailed Detailed information about an api route
type ApiRouteDetailed struct {
	// Whether the api route is blacklisted
	Blacklisted bool `json:"blacklisted"`
	// The date and time the api route was created
	CreatedAt string `json:"createdAt"`
	// The display name of the api route
	DisplayName string `json:"displayName"`
	// The id of the api route
	Id string `json:"id"`
	// The name of the api route
	Name string `json:"name"`
	// The operation of the api route
	Operation string `json:"operation"`
	// The parameters of the api route
	Parameters map[string]string `json:"parameters,omitempty"`
	// The request count of the api route
	RequestCount float32 `json:"requestCount"`
	// The return type of the api route
	ReturnType *string `json:"returnType,omitempty"`
	Source ENUMPROPERTIESATTACHMENTSITEMSPROPERTIESTARGETPROPERTIESAPIROUTEPROPERTIESSOURCE `json:"source"`
	AdditionalProperties map[string]interface{}
}

type _ApiRouteDetailed ApiRouteDetailed

// NewApiRouteDetailed instantiates a new ApiRouteDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRouteDetailed(blacklisted bool, createdAt string, displayName string, id string, name string, operation string, requestCount float32, source ENUMPROPERTIESATTACHMENTSITEMSPROPERTIESTARGETPROPERTIESAPIROUTEPROPERTIESSOURCE) *ApiRouteDetailed {
	this := ApiRouteDetailed{}
	this.Blacklisted = blacklisted
	this.CreatedAt = createdAt
	this.DisplayName = displayName
	this.Id = id
	this.Name = name
	this.Operation = operation
	this.RequestCount = requestCount
	this.Source = source
	return &this
}

// NewApiRouteDetailedWithDefaults instantiates a new ApiRouteDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRouteDetailedWithDefaults() *ApiRouteDetailed {
	this := ApiRouteDetailed{}
	return &this
}

// GetBlacklisted returns the Blacklisted field value
func (o *ApiRouteDetailed) GetBlacklisted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Blacklisted
}

// GetBlacklistedOk returns a tuple with the Blacklisted field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetBlacklistedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blacklisted, true
}

// SetBlacklisted sets field value
func (o *ApiRouteDetailed) SetBlacklisted(v bool) {
	o.Blacklisted = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApiRouteDetailed) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApiRouteDetailed) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDisplayName returns the DisplayName field value
func (o *ApiRouteDetailed) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ApiRouteDetailed) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetId returns the Id field value
func (o *ApiRouteDetailed) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiRouteDetailed) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ApiRouteDetailed) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiRouteDetailed) SetName(v string) {
	o.Name = v
}

// GetOperation returns the Operation field value
func (o *ApiRouteDetailed) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *ApiRouteDetailed) SetOperation(v string) {
	o.Operation = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ApiRouteDetailed) GetParameters() map[string]string {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]string
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetParametersOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]string{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ApiRouteDetailed) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *ApiRouteDetailed) SetParameters(v map[string]string) {
	o.Parameters = v
}

// GetRequestCount returns the RequestCount field value
func (o *ApiRouteDetailed) GetRequestCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RequestCount
}

// GetRequestCountOk returns a tuple with the RequestCount field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetRequestCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestCount, true
}

// SetRequestCount sets field value
func (o *ApiRouteDetailed) SetRequestCount(v float32) {
	o.RequestCount = v
}

// GetReturnType returns the ReturnType field value if set, zero value otherwise.
func (o *ApiRouteDetailed) GetReturnType() string {
	if o == nil || IsNil(o.ReturnType) {
		var ret string
		return ret
	}
	return *o.ReturnType
}

// GetReturnTypeOk returns a tuple with the ReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetReturnTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnType) {
		return nil, false
	}
	return o.ReturnType, true
}

// HasReturnType returns a boolean if a field has been set.
func (o *ApiRouteDetailed) HasReturnType() bool {
	if o != nil && !IsNil(o.ReturnType) {
		return true
	}

	return false
}

// SetReturnType gets a reference to the given string and assigns it to the ReturnType field.
func (o *ApiRouteDetailed) SetReturnType(v string) {
	o.ReturnType = &v
}

// GetSource returns the Source field value
func (o *ApiRouteDetailed) GetSource() ENUMPROPERTIESATTACHMENTSITEMSPROPERTIESTARGETPROPERTIESAPIROUTEPROPERTIESSOURCE {
	if o == nil {
		var ret ENUMPROPERTIESATTACHMENTSITEMSPROPERTIESTARGETPROPERTIESAPIROUTEPROPERTIESSOURCE
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *ApiRouteDetailed) GetSourceOk() (*ENUMPROPERTIESATTACHMENTSITEMSPROPERTIESTARGETPROPERTIESAPIROUTEPROPERTIESSOURCE, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *ApiRouteDetailed) SetSource(v ENUMPROPERTIESATTACHMENTSITEMSPROPERTIESTARGETPROPERTIESAPIROUTEPROPERTIESSOURCE) {
	o.Source = v
}

func (o ApiRouteDetailed) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRouteDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["blacklisted"] = o.Blacklisted
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["displayName"] = o.DisplayName
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["operation"] = o.Operation
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	toSerialize["requestCount"] = o.RequestCount
	if !IsNil(o.ReturnType) {
		toSerialize["returnType"] = o.ReturnType
	}
	toSerialize["source"] = o.Source

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiRouteDetailed) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"blacklisted",
		"createdAt",
		"displayName",
		"id",
		"name",
		"operation",
		"requestCount",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRouteDetailed := _ApiRouteDetailed{}

	err = json.Unmarshal(data, &varApiRouteDetailed)

	if err != nil {
		return err
	}

	*o = ApiRouteDetailed(varApiRouteDetailed)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "blacklisted")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "operation")
		delete(additionalProperties, "parameters")
		delete(additionalProperties, "requestCount")
		delete(additionalProperties, "returnType")
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiRouteDetailed struct {
	value *ApiRouteDetailed
	isSet bool
}

func (v NullableApiRouteDetailed) Get() *ApiRouteDetailed {
	return v.value
}

func (v *NullableApiRouteDetailed) Set(val *ApiRouteDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRouteDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRouteDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRouteDetailed(val *ApiRouteDetailed) *NullableApiRouteDetailed {
	return &NullableApiRouteDetailed{value: val, isSet: true}
}

func (v NullableApiRouteDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRouteDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
