/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE the model 'ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE'
type ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE string

// List of ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_SCAN_PROPERTIES_API_TYPE
const (
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE_API_TYPE_GRAPHQL ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE = "API_TYPE_GRAPHQL"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE_API_TYPE_REST ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE = "API_TYPE_REST"
)

// All allowed values of ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE enum
var AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPEEnumValues = []ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE{
	"API_TYPE_GRAPHQL",
	"API_TYPE_REST",
}

func (v *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE(value)
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPEEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE", value)
}

// NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPEFromValue returns a pointer to a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPEFromValue(v string) (*ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE, error) {
	ev := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE: valid values are %v", v, AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPEEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPEEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_SCAN_PROPERTIES_API_TYPE value
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) Ptr() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE {
	return &v
}

type NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE struct {
	value *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE
	isSet bool
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) Get() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE {
	return v.value
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) Set(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE {
	return &NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESSCANPROPERTIESAPITYPE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

