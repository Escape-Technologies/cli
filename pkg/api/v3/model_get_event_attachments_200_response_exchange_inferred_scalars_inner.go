/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the GetEventAttachments200ResponseExchangeInferredScalarsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEventAttachments200ResponseExchangeInferredScalarsInner{}

// GetEventAttachments200ResponseExchangeInferredScalarsInner struct for GetEventAttachments200ResponseExchangeInferredScalarsInner
type GetEventAttachments200ResponseExchangeInferredScalarsInner struct {
	Confidence float32 `json:"confidence"`
	Kind string `json:"kind"`
	Name string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _GetEventAttachments200ResponseExchangeInferredScalarsInner GetEventAttachments200ResponseExchangeInferredScalarsInner

// NewGetEventAttachments200ResponseExchangeInferredScalarsInner instantiates a new GetEventAttachments200ResponseExchangeInferredScalarsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventAttachments200ResponseExchangeInferredScalarsInner(confidence float32, kind string, name string) *GetEventAttachments200ResponseExchangeInferredScalarsInner {
	this := GetEventAttachments200ResponseExchangeInferredScalarsInner{}
	this.Confidence = confidence
	this.Kind = kind
	this.Name = name
	return &this
}

// NewGetEventAttachments200ResponseExchangeInferredScalarsInnerWithDefaults instantiates a new GetEventAttachments200ResponseExchangeInferredScalarsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventAttachments200ResponseExchangeInferredScalarsInnerWithDefaults() *GetEventAttachments200ResponseExchangeInferredScalarsInner {
	this := GetEventAttachments200ResponseExchangeInferredScalarsInner{}
	return &this
}

// GetConfidence returns the Confidence field value
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) GetConfidence() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) GetConfidenceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Confidence, true
}

// SetConfidence sets field value
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) SetConfidence(v float32) {
	o.Confidence = v
}

// GetKind returns the Kind field value
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) SetKind(v string) {
	o.Kind = v
}

// GetName returns the Name field value
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) SetName(v string) {
	o.Name = v
}

func (o GetEventAttachments200ResponseExchangeInferredScalarsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEventAttachments200ResponseExchangeInferredScalarsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["confidence"] = o.Confidence
	toSerialize["kind"] = o.Kind
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetEventAttachments200ResponseExchangeInferredScalarsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"confidence",
		"kind",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEventAttachments200ResponseExchangeInferredScalarsInner := _GetEventAttachments200ResponseExchangeInferredScalarsInner{}

	err = json.Unmarshal(data, &varGetEventAttachments200ResponseExchangeInferredScalarsInner)

	if err != nil {
		return err
	}

	*o = GetEventAttachments200ResponseExchangeInferredScalarsInner(varGetEventAttachments200ResponseExchangeInferredScalarsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "confidence")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetEventAttachments200ResponseExchangeInferredScalarsInner struct {
	value *GetEventAttachments200ResponseExchangeInferredScalarsInner
	isSet bool
}

func (v NullableGetEventAttachments200ResponseExchangeInferredScalarsInner) Get() *GetEventAttachments200ResponseExchangeInferredScalarsInner {
	return v.value
}

func (v *NullableGetEventAttachments200ResponseExchangeInferredScalarsInner) Set(val *GetEventAttachments200ResponseExchangeInferredScalarsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventAttachments200ResponseExchangeInferredScalarsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventAttachments200ResponseExchangeInferredScalarsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventAttachments200ResponseExchangeInferredScalarsInner(val *GetEventAttachments200ResponseExchangeInferredScalarsInner) *NullableGetEventAttachments200ResponseExchangeInferredScalarsInner {
	return &NullableGetEventAttachments200ResponseExchangeInferredScalarsInner{value: val, isSet: true}
}

func (v NullableGetEventAttachments200ResponseExchangeInferredScalarsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventAttachments200ResponseExchangeInferredScalarsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


