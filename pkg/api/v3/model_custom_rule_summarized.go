/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomRuleSummarized type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomRuleSummarized{}

// CustomRuleSummarized Summarized information about a custom rule
type CustomRuleSummarized struct {
	// The id of the rule
	Id string `json:"id"`
	// The name of the rule
	Name string `json:"name"`
	// The severity of the rule
	Severity string `json:"severity"`
	// The creation date of the rule
	CreatedAt string `json:"createdAt"`
	// The last update date of the rule
	UpdatedAt string `json:"updatedAt"`
	AdditionalProperties map[string]interface{}
}

type _CustomRuleSummarized CustomRuleSummarized

// NewCustomRuleSummarized instantiates a new CustomRuleSummarized object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomRuleSummarized(id string, name string, severity string, createdAt string, updatedAt string) *CustomRuleSummarized {
	this := CustomRuleSummarized{}
	this.Id = id
	this.Name = name
	this.Severity = severity
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewCustomRuleSummarizedWithDefaults instantiates a new CustomRuleSummarized object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomRuleSummarizedWithDefaults() *CustomRuleSummarized {
	this := CustomRuleSummarized{}
	return &this
}

// GetId returns the Id field value
func (o *CustomRuleSummarized) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomRuleSummarized) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomRuleSummarized) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CustomRuleSummarized) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomRuleSummarized) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomRuleSummarized) SetName(v string) {
	o.Name = v
}

// GetSeverity returns the Severity field value
func (o *CustomRuleSummarized) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *CustomRuleSummarized) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *CustomRuleSummarized) SetSeverity(v string) {
	o.Severity = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CustomRuleSummarized) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomRuleSummarized) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CustomRuleSummarized) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CustomRuleSummarized) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomRuleSummarized) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CustomRuleSummarized) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o CustomRuleSummarized) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomRuleSummarized) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["severity"] = o.Severity
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomRuleSummarized) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"severity",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomRuleSummarized := _CustomRuleSummarized{}

	err = json.Unmarshal(data, &varCustomRuleSummarized)

	if err != nil {
		return err
	}

	*o = CustomRuleSummarized(varCustomRuleSummarized)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomRuleSummarized struct {
	value *CustomRuleSummarized
	isSet bool
}

func (v NullableCustomRuleSummarized) Get() *CustomRuleSummarized {
	return v.value
}

func (v *NullableCustomRuleSummarized) Set(val *CustomRuleSummarized) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRuleSummarized) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRuleSummarized) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRuleSummarized(val *CustomRuleSummarized) *NullableCustomRuleSummarized {
	return &NullableCustomRuleSummarized{value: val, isSet: true}
}

func (v NullableCustomRuleSummarized) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRuleSummarized) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


