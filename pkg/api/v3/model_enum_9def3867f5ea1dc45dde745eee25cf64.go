/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum9def3867f5ea1dc45dde745eee25cf64 the model 'Enum9def3867f5ea1dc45dde745eee25cf64'
type Enum9def3867f5ea1dc45dde745eee25cf64 string

// List of Enum_9def3867f5ea1dc45dde745eee25cf64
const (
	ENUM9DEF3867F5EA1DC45DDE745EEE25CF64_CREATE Enum9def3867f5ea1dc45dde745eee25cf64 = "CREATE"
	ENUM9DEF3867F5EA1DC45DDE745EEE25CF64_READ Enum9def3867f5ea1dc45dde745eee25cf64 = "READ"
	ENUM9DEF3867F5EA1DC45DDE745EEE25CF64_UPDATE Enum9def3867f5ea1dc45dde745eee25cf64 = "UPDATE"
	ENUM9DEF3867F5EA1DC45DDE745EEE25CF64_DELETE Enum9def3867f5ea1dc45dde745eee25cf64 = "DELETE"
)

// All allowed values of Enum9def3867f5ea1dc45dde745eee25cf64 enum
var AllowedEnum9def3867f5ea1dc45dde745eee25cf64EnumValues = []Enum9def3867f5ea1dc45dde745eee25cf64{
	"CREATE",
	"READ",
	"UPDATE",
	"DELETE",
}

func (v *Enum9def3867f5ea1dc45dde745eee25cf64) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum9def3867f5ea1dc45dde745eee25cf64(value)
	for _, existing := range AllowedEnum9def3867f5ea1dc45dde745eee25cf64EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum9def3867f5ea1dc45dde745eee25cf64", value)
}

// NewEnum9def3867f5ea1dc45dde745eee25cf64FromValue returns a pointer to a valid Enum9def3867f5ea1dc45dde745eee25cf64
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum9def3867f5ea1dc45dde745eee25cf64FromValue(v string) (*Enum9def3867f5ea1dc45dde745eee25cf64, error) {
	ev := Enum9def3867f5ea1dc45dde745eee25cf64(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum9def3867f5ea1dc45dde745eee25cf64: valid values are %v", v, AllowedEnum9def3867f5ea1dc45dde745eee25cf64EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum9def3867f5ea1dc45dde745eee25cf64) IsValid() bool {
	for _, existing := range AllowedEnum9def3867f5ea1dc45dde745eee25cf64EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_9def3867f5ea1dc45dde745eee25cf64 value
func (v Enum9def3867f5ea1dc45dde745eee25cf64) Ptr() *Enum9def3867f5ea1dc45dde745eee25cf64 {
	return &v
}

type NullableEnum9def3867f5ea1dc45dde745eee25cf64 struct {
	value *Enum9def3867f5ea1dc45dde745eee25cf64
	isSet bool
}

func (v NullableEnum9def3867f5ea1dc45dde745eee25cf64) Get() *Enum9def3867f5ea1dc45dde745eee25cf64 {
	return v.value
}

func (v *NullableEnum9def3867f5ea1dc45dde745eee25cf64) Set(val *Enum9def3867f5ea1dc45dde745eee25cf64) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum9def3867f5ea1dc45dde745eee25cf64) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum9def3867f5ea1dc45dde745eee25cf64) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum9def3867f5ea1dc45dde745eee25cf64(val *Enum9def3867f5ea1dc45dde745eee25cf64) *NullableEnum9def3867f5ea1dc45dde745eee25cf64 {
	return &NullableEnum9def3867f5ea1dc45dde745eee25cf64{value: val, isSet: true}
}

func (v NullableEnum9def3867f5ea1dc45dde745eee25cf64) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum9def3867f5ea1dc45dde745eee25cf64) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

