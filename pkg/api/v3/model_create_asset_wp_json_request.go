/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAssetWPJSONRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetWPJSONRequest{}

// CreateAssetWPJSONRequest struct for CreateAssetWPJSONRequest
type CreateAssetWPJSONRequest struct {
	AssetClass string `json:"asset_class"`
	AssetType string `json:"asset_type"`
	Name *string `json:"name,omitempty"`
	S3Key string `json:"s3_key"`
	Generated bool `json:"generated"`
	Url *string `json:"url,omitempty"`
	ReachableVia []string `json:"reachable_via,omitempty"`
	Endpoints []CreateAssetDNSRequestPathsInsightsInner `json:"endpoints,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAssetWPJSONRequest CreateAssetWPJSONRequest

// NewCreateAssetWPJSONRequest instantiates a new CreateAssetWPJSONRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetWPJSONRequest(assetClass string, assetType string, s3Key string, generated bool) *CreateAssetWPJSONRequest {
	this := CreateAssetWPJSONRequest{}
	this.AssetClass = assetClass
	this.AssetType = assetType
	this.S3Key = s3Key
	this.Generated = generated
	return &this
}

// NewCreateAssetWPJSONRequestWithDefaults instantiates a new CreateAssetWPJSONRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetWPJSONRequestWithDefaults() *CreateAssetWPJSONRequest {
	this := CreateAssetWPJSONRequest{}
	return &this
}

// GetAssetClass returns the AssetClass field value
func (o *CreateAssetWPJSONRequest) GetAssetClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetAssetClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetClass, true
}

// SetAssetClass sets field value
func (o *CreateAssetWPJSONRequest) SetAssetClass(v string) {
	o.AssetClass = v
}

// GetAssetType returns the AssetType field value
func (o *CreateAssetWPJSONRequest) GetAssetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetAssetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *CreateAssetWPJSONRequest) SetAssetType(v string) {
	o.AssetType = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateAssetWPJSONRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateAssetWPJSONRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateAssetWPJSONRequest) SetName(v string) {
	o.Name = &v
}

// GetS3Key returns the S3Key field value
func (o *CreateAssetWPJSONRequest) GetS3Key() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.S3Key
}

// GetS3KeyOk returns a tuple with the S3Key field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetS3KeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.S3Key, true
}

// SetS3Key sets field value
func (o *CreateAssetWPJSONRequest) SetS3Key(v string) {
	o.S3Key = v
}

// GetGenerated returns the Generated field value
func (o *CreateAssetWPJSONRequest) GetGenerated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Generated
}

// GetGeneratedOk returns a tuple with the Generated field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetGeneratedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Generated, true
}

// SetGenerated sets field value
func (o *CreateAssetWPJSONRequest) SetGenerated(v bool) {
	o.Generated = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CreateAssetWPJSONRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CreateAssetWPJSONRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CreateAssetWPJSONRequest) SetUrl(v string) {
	o.Url = &v
}

// GetReachableVia returns the ReachableVia field value if set, zero value otherwise.
func (o *CreateAssetWPJSONRequest) GetReachableVia() []string {
	if o == nil || IsNil(o.ReachableVia) {
		var ret []string
		return ret
	}
	return o.ReachableVia
}

// GetReachableViaOk returns a tuple with the ReachableVia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetReachableViaOk() ([]string, bool) {
	if o == nil || IsNil(o.ReachableVia) {
		return nil, false
	}
	return o.ReachableVia, true
}

// HasReachableVia returns a boolean if a field has been set.
func (o *CreateAssetWPJSONRequest) HasReachableVia() bool {
	if o != nil && !IsNil(o.ReachableVia) {
		return true
	}

	return false
}

// SetReachableVia gets a reference to the given []string and assigns it to the ReachableVia field.
func (o *CreateAssetWPJSONRequest) SetReachableVia(v []string) {
	o.ReachableVia = v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *CreateAssetWPJSONRequest) GetEndpoints() []CreateAssetDNSRequestPathsInsightsInner {
	if o == nil || IsNil(o.Endpoints) {
		var ret []CreateAssetDNSRequestPathsInsightsInner
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWPJSONRequest) GetEndpointsOk() ([]CreateAssetDNSRequestPathsInsightsInner, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *CreateAssetWPJSONRequest) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []CreateAssetDNSRequestPathsInsightsInner and assigns it to the Endpoints field.
func (o *CreateAssetWPJSONRequest) SetEndpoints(v []CreateAssetDNSRequestPathsInsightsInner) {
	o.Endpoints = v
}

func (o CreateAssetWPJSONRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetWPJSONRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_class"] = o.AssetClass
	toSerialize["asset_type"] = o.AssetType
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["s3_key"] = o.S3Key
	toSerialize["generated"] = o.Generated
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.ReachableVia) {
		toSerialize["reachable_via"] = o.ReachableVia
	}
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAssetWPJSONRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_class",
		"asset_type",
		"s3_key",
		"generated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetWPJSONRequest := _CreateAssetWPJSONRequest{}

	err = json.Unmarshal(data, &varCreateAssetWPJSONRequest)

	if err != nil {
		return err
	}

	*o = CreateAssetWPJSONRequest(varCreateAssetWPJSONRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asset_class")
		delete(additionalProperties, "asset_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "s3_key")
		delete(additionalProperties, "generated")
		delete(additionalProperties, "url")
		delete(additionalProperties, "reachable_via")
		delete(additionalProperties, "endpoints")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAssetWPJSONRequest struct {
	value *CreateAssetWPJSONRequest
	isSet bool
}

func (v NullableCreateAssetWPJSONRequest) Get() *CreateAssetWPJSONRequest {
	return v.value
}

func (v *NullableCreateAssetWPJSONRequest) Set(val *CreateAssetWPJSONRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetWPJSONRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetWPJSONRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetWPJSONRequest(val *CreateAssetWPJSONRequest) *NullableCreateAssetWPJSONRequest {
	return &NullableCreateAssetWPJSONRequest{value: val, isSet: true}
}

func (v NullableCreateAssetWPJSONRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetWPJSONRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


