/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ExchangeDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExchangeDetailed{}

// ExchangeDetailed Detailed information about an exchange
type ExchangeDetailed struct {
	// The date and time the exchange was created
	CreatedAt string `json:"createdAt"`
	// The curl of the exchange
	Curl string `json:"curl"`
	// The duration of the exchange
	Duration float32 `json:"duration"`
	// The id of the exchange
	Id string `json:"id"`
	// The inferred scalars of the exchange
	InferredScalars []InferredScalarDetailed `json:"inferredScalars"`
	// The response body of the exchange
	ResponseBody string `json:"responseBody"`
	// The response headers of the exchange
	ResponseHeaders []HttpHeaderDetailed `json:"responseHeaders"`
	// The response status code of the exchange
	ResponseStatusCode float32 `json:"responseStatusCode"`
	// The url of the exchange
	Url string `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _ExchangeDetailed ExchangeDetailed

// NewExchangeDetailed instantiates a new ExchangeDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeDetailed(createdAt string, curl string, duration float32, id string, inferredScalars []InferredScalarDetailed, responseBody string, responseHeaders []HttpHeaderDetailed, responseStatusCode float32, url string) *ExchangeDetailed {
	this := ExchangeDetailed{}
	this.CreatedAt = createdAt
	this.Curl = curl
	this.Duration = duration
	this.Id = id
	this.InferredScalars = inferredScalars
	this.ResponseBody = responseBody
	this.ResponseHeaders = responseHeaders
	this.ResponseStatusCode = responseStatusCode
	this.Url = url
	return &this
}

// NewExchangeDetailedWithDefaults instantiates a new ExchangeDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeDetailedWithDefaults() *ExchangeDetailed {
	this := ExchangeDetailed{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ExchangeDetailed) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ExchangeDetailed) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCurl returns the Curl field value
func (o *ExchangeDetailed) GetCurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Curl
}

// GetCurlOk returns a tuple with the Curl field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetCurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Curl, true
}

// SetCurl sets field value
func (o *ExchangeDetailed) SetCurl(v string) {
	o.Curl = v
}

// GetDuration returns the Duration field value
func (o *ExchangeDetailed) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *ExchangeDetailed) SetDuration(v float32) {
	o.Duration = v
}

// GetId returns the Id field value
func (o *ExchangeDetailed) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExchangeDetailed) SetId(v string) {
	o.Id = v
}

// GetInferredScalars returns the InferredScalars field value
func (o *ExchangeDetailed) GetInferredScalars() []InferredScalarDetailed {
	if o == nil {
		var ret []InferredScalarDetailed
		return ret
	}

	return o.InferredScalars
}

// GetInferredScalarsOk returns a tuple with the InferredScalars field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetInferredScalarsOk() ([]InferredScalarDetailed, bool) {
	if o == nil {
		return nil, false
	}
	return o.InferredScalars, true
}

// SetInferredScalars sets field value
func (o *ExchangeDetailed) SetInferredScalars(v []InferredScalarDetailed) {
	o.InferredScalars = v
}

// GetResponseBody returns the ResponseBody field value
func (o *ExchangeDetailed) GetResponseBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetResponseBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseBody, true
}

// SetResponseBody sets field value
func (o *ExchangeDetailed) SetResponseBody(v string) {
	o.ResponseBody = v
}

// GetResponseHeaders returns the ResponseHeaders field value
func (o *ExchangeDetailed) GetResponseHeaders() []HttpHeaderDetailed {
	if o == nil {
		var ret []HttpHeaderDetailed
		return ret
	}

	return o.ResponseHeaders
}

// GetResponseHeadersOk returns a tuple with the ResponseHeaders field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetResponseHeadersOk() ([]HttpHeaderDetailed, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseHeaders, true
}

// SetResponseHeaders sets field value
func (o *ExchangeDetailed) SetResponseHeaders(v []HttpHeaderDetailed) {
	o.ResponseHeaders = v
}

// GetResponseStatusCode returns the ResponseStatusCode field value
func (o *ExchangeDetailed) GetResponseStatusCode() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetResponseStatusCodeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseStatusCode, true
}

// SetResponseStatusCode sets field value
func (o *ExchangeDetailed) SetResponseStatusCode(v float32) {
	o.ResponseStatusCode = v
}

// GetUrl returns the Url field value
func (o *ExchangeDetailed) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ExchangeDetailed) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ExchangeDetailed) SetUrl(v string) {
	o.Url = v
}

func (o ExchangeDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExchangeDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["curl"] = o.Curl
	toSerialize["duration"] = o.Duration
	toSerialize["id"] = o.Id
	toSerialize["inferredScalars"] = o.InferredScalars
	toSerialize["responseBody"] = o.ResponseBody
	toSerialize["responseHeaders"] = o.ResponseHeaders
	toSerialize["responseStatusCode"] = o.ResponseStatusCode
	toSerialize["url"] = o.Url

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExchangeDetailed) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"curl",
		"duration",
		"id",
		"inferredScalars",
		"responseBody",
		"responseHeaders",
		"responseStatusCode",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExchangeDetailed := _ExchangeDetailed{}

	err = json.Unmarshal(data, &varExchangeDetailed)

	if err != nil {
		return err
	}

	*o = ExchangeDetailed(varExchangeDetailed)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "curl")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "id")
		delete(additionalProperties, "inferredScalars")
		delete(additionalProperties, "responseBody")
		delete(additionalProperties, "responseHeaders")
		delete(additionalProperties, "responseStatusCode")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExchangeDetailed struct {
	value *ExchangeDetailed
	isSet bool
}

func (v NullableExchangeDetailed) Get() *ExchangeDetailed {
	return v.value
}

func (v *NullableExchangeDetailed) Set(val *ExchangeDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeDetailed(val *ExchangeDetailed) *NullableExchangeDetailed {
	return &NullableExchangeDetailed{value: val, isSet: true}
}

func (v NullableExchangeDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


