/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ListProfiles200ResponseDataInnerAssetHostPortsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProfiles200ResponseDataInnerAssetHostPortsInner{}

// ListProfiles200ResponseDataInnerAssetHostPortsInner struct for ListProfiles200ResponseDataInnerAssetHostPortsInner
type ListProfiles200ResponseDataInnerAssetHostPortsInner struct {
	Port float32 `json:"port"`
	AdditionalProperties map[string]interface{}
}

type _ListProfiles200ResponseDataInnerAssetHostPortsInner ListProfiles200ResponseDataInnerAssetHostPortsInner

// NewListProfiles200ResponseDataInnerAssetHostPortsInner instantiates a new ListProfiles200ResponseDataInnerAssetHostPortsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProfiles200ResponseDataInnerAssetHostPortsInner(port float32) *ListProfiles200ResponseDataInnerAssetHostPortsInner {
	this := ListProfiles200ResponseDataInnerAssetHostPortsInner{}
	this.Port = port
	return &this
}

// NewListProfiles200ResponseDataInnerAssetHostPortsInnerWithDefaults instantiates a new ListProfiles200ResponseDataInnerAssetHostPortsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProfiles200ResponseDataInnerAssetHostPortsInnerWithDefaults() *ListProfiles200ResponseDataInnerAssetHostPortsInner {
	this := ListProfiles200ResponseDataInnerAssetHostPortsInner{}
	return &this
}

// GetPort returns the Port field value
func (o *ListProfiles200ResponseDataInnerAssetHostPortsInner) GetPort() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *ListProfiles200ResponseDataInnerAssetHostPortsInner) GetPortOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *ListProfiles200ResponseDataInnerAssetHostPortsInner) SetPort(v float32) {
	o.Port = v
}

func (o ListProfiles200ResponseDataInnerAssetHostPortsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProfiles200ResponseDataInnerAssetHostPortsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["port"] = o.Port

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListProfiles200ResponseDataInnerAssetHostPortsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListProfiles200ResponseDataInnerAssetHostPortsInner := _ListProfiles200ResponseDataInnerAssetHostPortsInner{}

	err = json.Unmarshal(data, &varListProfiles200ResponseDataInnerAssetHostPortsInner)

	if err != nil {
		return err
	}

	*o = ListProfiles200ResponseDataInnerAssetHostPortsInner(varListProfiles200ResponseDataInnerAssetHostPortsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListProfiles200ResponseDataInnerAssetHostPortsInner struct {
	value *ListProfiles200ResponseDataInnerAssetHostPortsInner
	isSet bool
}

func (v NullableListProfiles200ResponseDataInnerAssetHostPortsInner) Get() *ListProfiles200ResponseDataInnerAssetHostPortsInner {
	return v.value
}

func (v *NullableListProfiles200ResponseDataInnerAssetHostPortsInner) Set(val *ListProfiles200ResponseDataInnerAssetHostPortsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListProfiles200ResponseDataInnerAssetHostPortsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListProfiles200ResponseDataInnerAssetHostPortsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProfiles200ResponseDataInnerAssetHostPortsInner(val *ListProfiles200ResponseDataInnerAssetHostPortsInner) *NullableListProfiles200ResponseDataInnerAssetHostPortsInner {
	return &NullableListProfiles200ResponseDataInnerAssetHostPortsInner{value: val, isSet: true}
}

func (v NullableListProfiles200ResponseDataInnerAssetHostPortsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProfiles200ResponseDataInnerAssetHostPortsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


