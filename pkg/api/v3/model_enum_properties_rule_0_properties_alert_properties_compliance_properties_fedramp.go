/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP the model 'ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP'
type ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP string

// List of ENUM_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_COMPLIANCE_PROPERTIES_FEDRAMP
const (
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_14 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-14"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_17 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-17"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_2 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-2"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_22 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-22"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_3 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-3"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_4 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-4"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_6 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-6"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_AC_7 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "AC-7"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_CM_2 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "CM-2"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_CM_3 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "CM-3"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_IA_5 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "IA-5"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SA_11 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SA-11"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_12 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-12"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_13 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-13"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_17 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-17"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_18 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-18"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_20 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-20"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_28 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-28"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_5 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-5"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_7 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-7"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SC_8 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SC-8"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SI_10 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SI-10"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SI_11 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SI-11"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SI_2 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SI-2"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SI_3 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SI-3"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SI_4 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SI-4"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP_SI_7 ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP = "SI-7"
)

// All allowed values of ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP enum
var AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMPEnumValues = []ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP{
	"AC-14",
	"AC-17",
	"AC-2",
	"AC-22",
	"AC-3",
	"AC-4",
	"AC-6",
	"AC-7",
	"CM-2",
	"CM-3",
	"IA-5",
	"SA-11",
	"SC-12",
	"SC-13",
	"SC-17",
	"SC-18",
	"SC-20",
	"SC-28",
	"SC-5",
	"SC-7",
	"SC-8",
	"SI-10",
	"SI-11",
	"SI-2",
	"SI-3",
	"SI-4",
	"SI-7",
}

func (v *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP(value)
	for _, existing := range AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMPEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP", value)
}

// NewENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMPFromValue returns a pointer to a valid ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMPFromValue(v string) (*ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP, error) {
	ev := ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP: valid values are %v", v, AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMPEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMPEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_COMPLIANCE_PROPERTIES_FEDRAMP value
func (v ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) Ptr() *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP {
	return &v
}

type NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP struct {
	value *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP
	isSet bool
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) Get() *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP {
	return v.value
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) Set(val *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP(val *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP {
	return &NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESFEDRAMP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

