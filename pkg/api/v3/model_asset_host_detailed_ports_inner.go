/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the AssetHostDetailedPortsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetHostDetailedPortsInner{}

// AssetHostDetailedPortsInner struct for AssetHostDetailedPortsInner
type AssetHostDetailedPortsInner struct {
	Port float32 `json:"port"`
	AdditionalProperties map[string]interface{}
}

type _AssetHostDetailedPortsInner AssetHostDetailedPortsInner

// NewAssetHostDetailedPortsInner instantiates a new AssetHostDetailedPortsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetHostDetailedPortsInner(port float32) *AssetHostDetailedPortsInner {
	this := AssetHostDetailedPortsInner{}
	this.Port = port
	return &this
}

// NewAssetHostDetailedPortsInnerWithDefaults instantiates a new AssetHostDetailedPortsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetHostDetailedPortsInnerWithDefaults() *AssetHostDetailedPortsInner {
	this := AssetHostDetailedPortsInner{}
	return &this
}

// GetPort returns the Port field value
func (o *AssetHostDetailedPortsInner) GetPort() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *AssetHostDetailedPortsInner) GetPortOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *AssetHostDetailedPortsInner) SetPort(v float32) {
	o.Port = v
}

func (o AssetHostDetailedPortsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetHostDetailedPortsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["port"] = o.Port

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetHostDetailedPortsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssetHostDetailedPortsInner := _AssetHostDetailedPortsInner{}

	err = json.Unmarshal(data, &varAssetHostDetailedPortsInner)

	if err != nil {
		return err
	}

	*o = AssetHostDetailedPortsInner(varAssetHostDetailedPortsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetHostDetailedPortsInner struct {
	value *AssetHostDetailedPortsInner
	isSet bool
}

func (v NullableAssetHostDetailedPortsInner) Get() *AssetHostDetailedPortsInner {
	return v.value
}

func (v *NullableAssetHostDetailedPortsInner) Set(val *AssetHostDetailedPortsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetHostDetailedPortsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetHostDetailedPortsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetHostDetailedPortsInner(val *AssetHostDetailedPortsInner) *NullableAssetHostDetailedPortsInner {
	return &NullableAssetHostDetailedPortsInner{value: val, isSet: true}
}

func (v NullableAssetHostDetailedPortsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetHostDetailedPortsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


