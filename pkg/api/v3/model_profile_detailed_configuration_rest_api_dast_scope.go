/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationRestApiDastScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationRestApiDastScope{}

// ProfileDetailedConfigurationRestApiDastScope struct for ProfileDetailedConfigurationRestApiDastScope
type ProfileDetailedConfigurationRestApiDastScope struct {
	Blocklist []ProfileDetailedConfigurationRestApiDastBlocklistInner `json:"blocklist,omitempty"`
	Allowlist []ProfileDetailedConfigurationRestApiDastBlocklistInner `json:"allowlist,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationRestApiDastScope ProfileDetailedConfigurationRestApiDastScope

// NewProfileDetailedConfigurationRestApiDastScope instantiates a new ProfileDetailedConfigurationRestApiDastScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationRestApiDastScope() *ProfileDetailedConfigurationRestApiDastScope {
	this := ProfileDetailedConfigurationRestApiDastScope{}
	return &this
}

// NewProfileDetailedConfigurationRestApiDastScopeWithDefaults instantiates a new ProfileDetailedConfigurationRestApiDastScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationRestApiDastScopeWithDefaults() *ProfileDetailedConfigurationRestApiDastScope {
	this := ProfileDetailedConfigurationRestApiDastScope{}
	return &this
}

// GetBlocklist returns the Blocklist field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationRestApiDastScope) GetBlocklist() []ProfileDetailedConfigurationRestApiDastBlocklistInner {
	if o == nil || IsNil(o.Blocklist) {
		var ret []ProfileDetailedConfigurationRestApiDastBlocklistInner
		return ret
	}
	return o.Blocklist
}

// GetBlocklistOk returns a tuple with the Blocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationRestApiDastScope) GetBlocklistOk() ([]ProfileDetailedConfigurationRestApiDastBlocklistInner, bool) {
	if o == nil || IsNil(o.Blocklist) {
		return nil, false
	}
	return o.Blocklist, true
}

// HasBlocklist returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationRestApiDastScope) HasBlocklist() bool {
	if o != nil && !IsNil(o.Blocklist) {
		return true
	}

	return false
}

// SetBlocklist gets a reference to the given []ProfileDetailedConfigurationRestApiDastBlocklistInner and assigns it to the Blocklist field.
func (o *ProfileDetailedConfigurationRestApiDastScope) SetBlocklist(v []ProfileDetailedConfigurationRestApiDastBlocklistInner) {
	o.Blocklist = v
}

// GetAllowlist returns the Allowlist field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationRestApiDastScope) GetAllowlist() []ProfileDetailedConfigurationRestApiDastBlocklistInner {
	if o == nil || IsNil(o.Allowlist) {
		var ret []ProfileDetailedConfigurationRestApiDastBlocklistInner
		return ret
	}
	return o.Allowlist
}

// GetAllowlistOk returns a tuple with the Allowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationRestApiDastScope) GetAllowlistOk() ([]ProfileDetailedConfigurationRestApiDastBlocklistInner, bool) {
	if o == nil || IsNil(o.Allowlist) {
		return nil, false
	}
	return o.Allowlist, true
}

// HasAllowlist returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationRestApiDastScope) HasAllowlist() bool {
	if o != nil && !IsNil(o.Allowlist) {
		return true
	}

	return false
}

// SetAllowlist gets a reference to the given []ProfileDetailedConfigurationRestApiDastBlocklistInner and assigns it to the Allowlist field.
func (o *ProfileDetailedConfigurationRestApiDastScope) SetAllowlist(v []ProfileDetailedConfigurationRestApiDastBlocklistInner) {
	o.Allowlist = v
}

func (o ProfileDetailedConfigurationRestApiDastScope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationRestApiDastScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Blocklist) {
		toSerialize["blocklist"] = o.Blocklist
	}
	if !IsNil(o.Allowlist) {
		toSerialize["allowlist"] = o.Allowlist
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationRestApiDastScope) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationRestApiDastScope := _ProfileDetailedConfigurationRestApiDastScope{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationRestApiDastScope)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationRestApiDastScope(varProfileDetailedConfigurationRestApiDastScope)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "blocklist")
		delete(additionalProperties, "allowlist")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationRestApiDastScope struct {
	value *ProfileDetailedConfigurationRestApiDastScope
	isSet bool
}

func (v NullableProfileDetailedConfigurationRestApiDastScope) Get() *ProfileDetailedConfigurationRestApiDastScope {
	return v.value
}

func (v *NullableProfileDetailedConfigurationRestApiDastScope) Set(val *ProfileDetailedConfigurationRestApiDastScope) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationRestApiDastScope) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationRestApiDastScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationRestApiDastScope(val *ProfileDetailedConfigurationRestApiDastScope) *NullableProfileDetailedConfigurationRestApiDastScope {
	return &NullableProfileDetailedConfigurationRestApiDastScope{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationRestApiDastScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationRestApiDastScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


