/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum54a7b523dcbb5e56a2afe6ee9c245568 the model 'Enum54a7b523dcbb5e56a2afe6ee9c245568'
type Enum54a7b523dcbb5e56a2afe6ee9c245568 string

// List of Enum_54a7b523dcbb5e56a2afe6ee9c245568
const (
	ENUM54A7B523DCBB5E56A2AFE6EE9C245568_GET Enum54a7b523dcbb5e56a2afe6ee9c245568 = "GET"
	ENUM54A7B523DCBB5E56A2AFE6EE9C245568_POST Enum54a7b523dcbb5e56a2afe6ee9c245568 = "POST"
	ENUM54A7B523DCBB5E56A2AFE6EE9C245568_PUT Enum54a7b523dcbb5e56a2afe6ee9c245568 = "PUT"
	ENUM54A7B523DCBB5E56A2AFE6EE9C245568_PATCH Enum54a7b523dcbb5e56a2afe6ee9c245568 = "PATCH"
	ENUM54A7B523DCBB5E56A2AFE6EE9C245568_DELETE Enum54a7b523dcbb5e56a2afe6ee9c245568 = "DELETE"
)

// All allowed values of Enum54a7b523dcbb5e56a2afe6ee9c245568 enum
var AllowedEnum54a7b523dcbb5e56a2afe6ee9c245568EnumValues = []Enum54a7b523dcbb5e56a2afe6ee9c245568{
	"GET",
	"POST",
	"PUT",
	"PATCH",
	"DELETE",
}

func (v *Enum54a7b523dcbb5e56a2afe6ee9c245568) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum54a7b523dcbb5e56a2afe6ee9c245568(value)
	for _, existing := range AllowedEnum54a7b523dcbb5e56a2afe6ee9c245568EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum54a7b523dcbb5e56a2afe6ee9c245568", value)
}

// NewEnum54a7b523dcbb5e56a2afe6ee9c245568FromValue returns a pointer to a valid Enum54a7b523dcbb5e56a2afe6ee9c245568
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum54a7b523dcbb5e56a2afe6ee9c245568FromValue(v string) (*Enum54a7b523dcbb5e56a2afe6ee9c245568, error) {
	ev := Enum54a7b523dcbb5e56a2afe6ee9c245568(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum54a7b523dcbb5e56a2afe6ee9c245568: valid values are %v", v, AllowedEnum54a7b523dcbb5e56a2afe6ee9c245568EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum54a7b523dcbb5e56a2afe6ee9c245568) IsValid() bool {
	for _, existing := range AllowedEnum54a7b523dcbb5e56a2afe6ee9c245568EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_54a7b523dcbb5e56a2afe6ee9c245568 value
func (v Enum54a7b523dcbb5e56a2afe6ee9c245568) Ptr() *Enum54a7b523dcbb5e56a2afe6ee9c245568 {
	return &v
}

type NullableEnum54a7b523dcbb5e56a2afe6ee9c245568 struct {
	value *Enum54a7b523dcbb5e56a2afe6ee9c245568
	isSet bool
}

func (v NullableEnum54a7b523dcbb5e56a2afe6ee9c245568) Get() *Enum54a7b523dcbb5e56a2afe6ee9c245568 {
	return v.value
}

func (v *NullableEnum54a7b523dcbb5e56a2afe6ee9c245568) Set(val *Enum54a7b523dcbb5e56a2afe6ee9c245568) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum54a7b523dcbb5e56a2afe6ee9c245568) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum54a7b523dcbb5e56a2afe6ee9c245568) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum54a7b523dcbb5e56a2afe6ee9c245568(val *Enum54a7b523dcbb5e56a2afe6ee9c245568) *NullableEnum54a7b523dcbb5e56a2afe6ee9c245568 {
	return &NullableEnum54a7b523dcbb5e56a2afe6ee9c245568{value: val, isSet: true}
}

func (v NullableEnum54a7b523dcbb5e56a2afe6ee9c245568) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum54a7b523dcbb5e56a2afe6ee9c245568) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

