/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY the model 'ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY'
type ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY string

// List of ENUM_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_SEVERITY
const (
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY_HIGH ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY = "HIGH"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY_INFO ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY = "INFO"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY_LOW ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY = "LOW"
	ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY_MEDIUM ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY = "MEDIUM"
)

// All allowed values of ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY enum
var AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITYEnumValues = []ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY{
	"HIGH",
	"INFO",
	"LOW",
	"MEDIUM",
}

func (v *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY(value)
	for _, existing := range AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITYEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY", value)
}

// NewENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITYFromValue returns a pointer to a valid ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITYFromValue(v string) (*ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY, error) {
	ev := ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY: valid values are %v", v, AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITYEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITYEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_SEVERITY value
func (v ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) Ptr() *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY {
	return &v
}

type NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY struct {
	value *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY
	isSet bool
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) Get() *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY {
	return v.value
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) Set(val *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY(val *ENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY {
	return &NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESALERTPROPERTIESSEVERITY) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

