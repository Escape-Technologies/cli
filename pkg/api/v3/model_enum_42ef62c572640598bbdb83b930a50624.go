/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum42ef62c572640598bbdb83b930a50624 the model 'Enum42ef62c572640598bbdb83b930a50624'
type Enum42ef62c572640598bbdb83b930a50624 string

// List of Enum_42ef62c572640598bbdb83b930a50624
const (
	ENUM42EF62C572640598BBDB83B930A50624_API_SERVICE Enum42ef62c572640598bbdb83b930a50624 = "API_SERVICE"
	ENUM42EF62C572640598BBDB83B930A50624_CDN Enum42ef62c572640598bbdb83b930a50624 = "CDN"
	ENUM42EF62C572640598BBDB83B930A50624_CLOUD_HOSTING Enum42ef62c572640598bbdb83b930a50624 = "CLOUD_HOSTING"
	ENUM42EF62C572640598BBDB83B930A50624_CSPM Enum42ef62c572640598bbdb83b930a50624 = "CSPM"
	ENUM42EF62C572640598BBDB83B930A50624_DEV_TOOLS Enum42ef62c572640598bbdb83b930a50624 = "DEV_TOOLS"
	ENUM42EF62C572640598BBDB83B930A50624_FRONTEND Enum42ef62c572640598bbdb83b930a50624 = "FRONTEND"
	ENUM42EF62C572640598BBDB83B930A50624_HOST Enum42ef62c572640598bbdb83b930a50624 = "HOST"
	ENUM42EF62C572640598BBDB83B930A50624_REPOSITORY Enum42ef62c572640598bbdb83b930a50624 = "REPOSITORY"
	ENUM42EF62C572640598BBDB83B930A50624_SOURCE_CODE_MANAGEMENT Enum42ef62c572640598bbdb83b930a50624 = "SOURCE_CODE_MANAGEMENT"
)

// All allowed values of Enum42ef62c572640598bbdb83b930a50624 enum
var AllowedEnum42ef62c572640598bbdb83b930a50624EnumValues = []Enum42ef62c572640598bbdb83b930a50624{
	"API_SERVICE",
	"CDN",
	"CLOUD_HOSTING",
	"CSPM",
	"DEV_TOOLS",
	"FRONTEND",
	"HOST",
	"REPOSITORY",
	"SOURCE_CODE_MANAGEMENT",
}

func (v *Enum42ef62c572640598bbdb83b930a50624) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum42ef62c572640598bbdb83b930a50624(value)
	for _, existing := range AllowedEnum42ef62c572640598bbdb83b930a50624EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum42ef62c572640598bbdb83b930a50624", value)
}

// NewEnum42ef62c572640598bbdb83b930a50624FromValue returns a pointer to a valid Enum42ef62c572640598bbdb83b930a50624
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum42ef62c572640598bbdb83b930a50624FromValue(v string) (*Enum42ef62c572640598bbdb83b930a50624, error) {
	ev := Enum42ef62c572640598bbdb83b930a50624(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum42ef62c572640598bbdb83b930a50624: valid values are %v", v, AllowedEnum42ef62c572640598bbdb83b930a50624EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum42ef62c572640598bbdb83b930a50624) IsValid() bool {
	for _, existing := range AllowedEnum42ef62c572640598bbdb83b930a50624EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_42ef62c572640598bbdb83b930a50624 value
func (v Enum42ef62c572640598bbdb83b930a50624) Ptr() *Enum42ef62c572640598bbdb83b930a50624 {
	return &v
}

type NullableEnum42ef62c572640598bbdb83b930a50624 struct {
	value *Enum42ef62c572640598bbdb83b930a50624
	isSet bool
}

func (v NullableEnum42ef62c572640598bbdb83b930a50624) Get() *Enum42ef62c572640598bbdb83b930a50624 {
	return v.value
}

func (v *NullableEnum42ef62c572640598bbdb83b930a50624) Set(val *Enum42ef62c572640598bbdb83b930a50624) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum42ef62c572640598bbdb83b930a50624) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum42ef62c572640598bbdb83b930a50624) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum42ef62c572640598bbdb83b930a50624(val *Enum42ef62c572640598bbdb83b930a50624) *NullableEnum42ef62c572640598bbdb83b930a50624 {
	return &NullableEnum42ef62c572640598bbdb83b930a50624{value: val, isSet: true}
}

func (v NullableEnum42ef62c572640598bbdb83b930a50624) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum42ef62c572640598bbdb83b930a50624) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

