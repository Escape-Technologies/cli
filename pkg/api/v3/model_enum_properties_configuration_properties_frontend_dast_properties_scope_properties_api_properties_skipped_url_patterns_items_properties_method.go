/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD the model 'ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD'
type ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD string

// List of ENUM_PROPERTIES_CONFIGURATION_PROPERTIES_FRONTEND_DAST_PROPERTIES_SCOPE_PROPERTIES_API_PROPERTIES_SKIPPED_URL_PATTERNS_ITEMS_PROPERTIES_METHOD
const (
	ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD_DELETE ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD = "DELETE"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD_GET ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD = "GET"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD_PATCH ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD = "PATCH"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD_POST ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD = "POST"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD_PUT ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD = "PUT"
)

// All allowed values of ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD enum
var AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHODEnumValues = []ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD{
	"DELETE",
	"GET",
	"PATCH",
	"POST",
	"PUT",
}

func (v *ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD(value)
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHODEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD", value)
}

// NewENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHODFromValue returns a pointer to a valid ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHODFromValue(v string) (*ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD, error) {
	ev := ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD: valid values are %v", v, AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHODEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHODEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONFIGURATION_PROPERTIES_FRONTEND_DAST_PROPERTIES_SCOPE_PROPERTIES_API_PROPERTIES_SKIPPED_URL_PATTERNS_ITEMS_PROPERTIES_METHOD value
func (v ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) Ptr() *ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD {
	return &v
}

type NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD struct {
	value *ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD
	isSet bool
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) Get() *ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD {
	return v.value
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) Set(val *ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD(val *ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD {
	return &NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESSCOPEPROPERTIESAPIPROPERTIESSKIPPEDURLPATTERNSITEMSPROPERTIESMETHOD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

