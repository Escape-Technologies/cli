/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ScanDetailedLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScanDetailedLinks{}

// ScanDetailedLinks struct for ScanDetailedLinks
type ScanDetailedLinks struct {
	// URL to view the scan issues in the platform
	ScanIssues string `json:"scanIssues"`
	AdditionalProperties map[string]interface{}
}

type _ScanDetailedLinks ScanDetailedLinks

// NewScanDetailedLinks instantiates a new ScanDetailedLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScanDetailedLinks(scanIssues string) *ScanDetailedLinks {
	this := ScanDetailedLinks{}
	this.ScanIssues = scanIssues
	return &this
}

// NewScanDetailedLinksWithDefaults instantiates a new ScanDetailedLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanDetailedLinksWithDefaults() *ScanDetailedLinks {
	this := ScanDetailedLinks{}
	return &this
}

// GetScanIssues returns the ScanIssues field value
func (o *ScanDetailedLinks) GetScanIssues() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScanIssues
}

// GetScanIssuesOk returns a tuple with the ScanIssues field value
// and a boolean to check if the value has been set.
func (o *ScanDetailedLinks) GetScanIssuesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScanIssues, true
}

// SetScanIssues sets field value
func (o *ScanDetailedLinks) SetScanIssues(v string) {
	o.ScanIssues = v
}

func (o ScanDetailedLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScanDetailedLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["scanIssues"] = o.ScanIssues

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScanDetailedLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scanIssues",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varScanDetailedLinks := _ScanDetailedLinks{}

	err = json.Unmarshal(data, &varScanDetailedLinks)

	if err != nil {
		return err
	}

	*o = ScanDetailedLinks(varScanDetailedLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "scanIssues")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScanDetailedLinks struct {
	value *ScanDetailedLinks
	isSet bool
}

func (v NullableScanDetailedLinks) Get() *ScanDetailedLinks {
	return v.value
}

func (v *NullableScanDetailedLinks) Set(val *ScanDetailedLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableScanDetailedLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableScanDetailedLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScanDetailedLinks(val *ScanDetailedLinks) *NullableScanDetailedLinks {
	return &NullableScanDetailedLinks{value: val, isSet: true}
}

func (v NullableScanDetailedLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScanDetailedLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


