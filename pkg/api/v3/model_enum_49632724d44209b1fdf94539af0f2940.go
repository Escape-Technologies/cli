/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum49632724d44209b1fdf94539af0f2940 the model 'Enum49632724d44209b1fdf94539af0f2940'
type Enum49632724d44209b1fdf94539af0f2940 string

// List of Enum_49632724d44209b1fdf94539af0f2940
const (
	ENUM49632724D44209B1FDF94539AF0F2940_PRIVATE Enum49632724d44209b1fdf94539af0f2940 = "PRIVATE"
	ENUM49632724D44209B1FDF94539AF0F2940_INTERNAL Enum49632724d44209b1fdf94539af0f2940 = "INTERNAL"
	ENUM49632724D44209B1FDF94539AF0F2940_PUBLIC Enum49632724d44209b1fdf94539af0f2940 = "PUBLIC"
)

// All allowed values of Enum49632724d44209b1fdf94539af0f2940 enum
var AllowedEnum49632724d44209b1fdf94539af0f2940EnumValues = []Enum49632724d44209b1fdf94539af0f2940{
	"PRIVATE",
	"INTERNAL",
	"PUBLIC",
}

func (v *Enum49632724d44209b1fdf94539af0f2940) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum49632724d44209b1fdf94539af0f2940(value)
	for _, existing := range AllowedEnum49632724d44209b1fdf94539af0f2940EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum49632724d44209b1fdf94539af0f2940", value)
}

// NewEnum49632724d44209b1fdf94539af0f2940FromValue returns a pointer to a valid Enum49632724d44209b1fdf94539af0f2940
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum49632724d44209b1fdf94539af0f2940FromValue(v string) (*Enum49632724d44209b1fdf94539af0f2940, error) {
	ev := Enum49632724d44209b1fdf94539af0f2940(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum49632724d44209b1fdf94539af0f2940: valid values are %v", v, AllowedEnum49632724d44209b1fdf94539af0f2940EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum49632724d44209b1fdf94539af0f2940) IsValid() bool {
	for _, existing := range AllowedEnum49632724d44209b1fdf94539af0f2940EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_49632724d44209b1fdf94539af0f2940 value
func (v Enum49632724d44209b1fdf94539af0f2940) Ptr() *Enum49632724d44209b1fdf94539af0f2940 {
	return &v
}

type NullableEnum49632724d44209b1fdf94539af0f2940 struct {
	value *Enum49632724d44209b1fdf94539af0f2940
	isSet bool
}

func (v NullableEnum49632724d44209b1fdf94539af0f2940) Get() *Enum49632724d44209b1fdf94539af0f2940 {
	return v.value
}

func (v *NullableEnum49632724d44209b1fdf94539af0f2940) Set(val *Enum49632724d44209b1fdf94539af0f2940) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum49632724d44209b1fdf94539af0f2940) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum49632724d44209b1fdf94539af0f2940) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum49632724d44209b1fdf94539af0f2940(val *Enum49632724d44209b1fdf94539af0f2940) *NullableEnum49632724d44209b1fdf94539af0f2940 {
	return &NullableEnum49632724d44209b1fdf94539af0f2940{value: val, isSet: true}
}

func (v NullableEnum49632724d44209b1fdf94539af0f2940) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum49632724d44209b1fdf94539af0f2940) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

