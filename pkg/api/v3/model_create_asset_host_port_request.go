/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAssetHOSTPORTRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetHOSTPORTRequest{}

// CreateAssetHOSTPORTRequest struct for CreateAssetHOSTPORTRequest
type CreateAssetHOSTPORTRequest struct {
	AssetClass string `json:"asset_class"`
	AssetType string `json:"asset_type"`
	Address string `json:"address"`
	Port float32 `json:"port"`
	Protocols []ENUMPROPERTIESOPENPORTSITEMSPROPERTIESPROTOCOLSITEMS `json:"protocols"`
	LocationIds []string `json:"location_ids,omitempty"`
	PathsInsights []CreateAssetDNSRequestPathsInsightsInner `json:"paths_insights,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAssetHOSTPORTRequest CreateAssetHOSTPORTRequest

// NewCreateAssetHOSTPORTRequest instantiates a new CreateAssetHOSTPORTRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetHOSTPORTRequest(assetClass string, assetType string, address string, port float32, protocols []ENUMPROPERTIESOPENPORTSITEMSPROPERTIESPROTOCOLSITEMS) *CreateAssetHOSTPORTRequest {
	this := CreateAssetHOSTPORTRequest{}
	this.AssetClass = assetClass
	this.AssetType = assetType
	this.Address = address
	this.Port = port
	this.Protocols = protocols
	return &this
}

// NewCreateAssetHOSTPORTRequestWithDefaults instantiates a new CreateAssetHOSTPORTRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetHOSTPORTRequestWithDefaults() *CreateAssetHOSTPORTRequest {
	this := CreateAssetHOSTPORTRequest{}
	return &this
}

// GetAssetClass returns the AssetClass field value
func (o *CreateAssetHOSTPORTRequest) GetAssetClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value
// and a boolean to check if the value has been set.
func (o *CreateAssetHOSTPORTRequest) GetAssetClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetClass, true
}

// SetAssetClass sets field value
func (o *CreateAssetHOSTPORTRequest) SetAssetClass(v string) {
	o.AssetClass = v
}

// GetAssetType returns the AssetType field value
func (o *CreateAssetHOSTPORTRequest) GetAssetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *CreateAssetHOSTPORTRequest) GetAssetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *CreateAssetHOSTPORTRequest) SetAssetType(v string) {
	o.AssetType = v
}

// GetAddress returns the Address field value
func (o *CreateAssetHOSTPORTRequest) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *CreateAssetHOSTPORTRequest) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *CreateAssetHOSTPORTRequest) SetAddress(v string) {
	o.Address = v
}

// GetPort returns the Port field value
func (o *CreateAssetHOSTPORTRequest) GetPort() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *CreateAssetHOSTPORTRequest) GetPortOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *CreateAssetHOSTPORTRequest) SetPort(v float32) {
	o.Port = v
}

// GetProtocols returns the Protocols field value
func (o *CreateAssetHOSTPORTRequest) GetProtocols() []ENUMPROPERTIESOPENPORTSITEMSPROPERTIESPROTOCOLSITEMS {
	if o == nil {
		var ret []ENUMPROPERTIESOPENPORTSITEMSPROPERTIESPROTOCOLSITEMS
		return ret
	}

	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value
// and a boolean to check if the value has been set.
func (o *CreateAssetHOSTPORTRequest) GetProtocolsOk() ([]ENUMPROPERTIESOPENPORTSITEMSPROPERTIESPROTOCOLSITEMS, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocols, true
}

// SetProtocols sets field value
func (o *CreateAssetHOSTPORTRequest) SetProtocols(v []ENUMPROPERTIESOPENPORTSITEMSPROPERTIESPROTOCOLSITEMS) {
	o.Protocols = v
}

// GetLocationIds returns the LocationIds field value if set, zero value otherwise.
func (o *CreateAssetHOSTPORTRequest) GetLocationIds() []string {
	if o == nil || IsNil(o.LocationIds) {
		var ret []string
		return ret
	}
	return o.LocationIds
}

// GetLocationIdsOk returns a tuple with the LocationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetHOSTPORTRequest) GetLocationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LocationIds) {
		return nil, false
	}
	return o.LocationIds, true
}

// HasLocationIds returns a boolean if a field has been set.
func (o *CreateAssetHOSTPORTRequest) HasLocationIds() bool {
	if o != nil && !IsNil(o.LocationIds) {
		return true
	}

	return false
}

// SetLocationIds gets a reference to the given []string and assigns it to the LocationIds field.
func (o *CreateAssetHOSTPORTRequest) SetLocationIds(v []string) {
	o.LocationIds = v
}

// GetPathsInsights returns the PathsInsights field value if set, zero value otherwise.
func (o *CreateAssetHOSTPORTRequest) GetPathsInsights() []CreateAssetDNSRequestPathsInsightsInner {
	if o == nil || IsNil(o.PathsInsights) {
		var ret []CreateAssetDNSRequestPathsInsightsInner
		return ret
	}
	return o.PathsInsights
}

// GetPathsInsightsOk returns a tuple with the PathsInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetHOSTPORTRequest) GetPathsInsightsOk() ([]CreateAssetDNSRequestPathsInsightsInner, bool) {
	if o == nil || IsNil(o.PathsInsights) {
		return nil, false
	}
	return o.PathsInsights, true
}

// HasPathsInsights returns a boolean if a field has been set.
func (o *CreateAssetHOSTPORTRequest) HasPathsInsights() bool {
	if o != nil && !IsNil(o.PathsInsights) {
		return true
	}

	return false
}

// SetPathsInsights gets a reference to the given []CreateAssetDNSRequestPathsInsightsInner and assigns it to the PathsInsights field.
func (o *CreateAssetHOSTPORTRequest) SetPathsInsights(v []CreateAssetDNSRequestPathsInsightsInner) {
	o.PathsInsights = v
}

func (o CreateAssetHOSTPORTRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetHOSTPORTRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_class"] = o.AssetClass
	toSerialize["asset_type"] = o.AssetType
	toSerialize["address"] = o.Address
	toSerialize["port"] = o.Port
	toSerialize["protocols"] = o.Protocols
	if !IsNil(o.LocationIds) {
		toSerialize["location_ids"] = o.LocationIds
	}
	if !IsNil(o.PathsInsights) {
		toSerialize["paths_insights"] = o.PathsInsights
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAssetHOSTPORTRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_class",
		"asset_type",
		"address",
		"port",
		"protocols",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetHOSTPORTRequest := _CreateAssetHOSTPORTRequest{}

	err = json.Unmarshal(data, &varCreateAssetHOSTPORTRequest)

	if err != nil {
		return err
	}

	*o = CreateAssetHOSTPORTRequest(varCreateAssetHOSTPORTRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asset_class")
		delete(additionalProperties, "asset_type")
		delete(additionalProperties, "address")
		delete(additionalProperties, "port")
		delete(additionalProperties, "protocols")
		delete(additionalProperties, "location_ids")
		delete(additionalProperties, "paths_insights")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAssetHOSTPORTRequest struct {
	value *CreateAssetHOSTPORTRequest
	isSet bool
}

func (v NullableCreateAssetHOSTPORTRequest) Get() *CreateAssetHOSTPORTRequest {
	return v.value
}

func (v *NullableCreateAssetHOSTPORTRequest) Set(val *CreateAssetHOSTPORTRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetHOSTPORTRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetHOSTPORTRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetHOSTPORTRequest(val *CreateAssetHOSTPORTRequest) *NullableCreateAssetHOSTPORTRequest {
	return &NullableCreateAssetHOSTPORTRequest{value: val, isSet: true}
}

func (v NullableCreateAssetHOSTPORTRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetHOSTPORTRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


