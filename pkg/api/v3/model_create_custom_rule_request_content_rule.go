/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CreateCustomRuleRequestContentRule - struct for CreateCustomRuleRequestContentRule
type CreateCustomRuleRequestContentRule struct {
	CreateCustomRuleRequestContentRuleOneOf *CreateCustomRuleRequestContentRuleOneOf
	CreateCustomRuleRequestContentRuleOneOf1 *CreateCustomRuleRequestContentRuleOneOf1
}

// CreateCustomRuleRequestContentRuleOneOfAsCreateCustomRuleRequestContentRule is a convenience function that returns CreateCustomRuleRequestContentRuleOneOf wrapped in CreateCustomRuleRequestContentRule
func CreateCustomRuleRequestContentRuleOneOfAsCreateCustomRuleRequestContentRule(v *CreateCustomRuleRequestContentRuleOneOf) CreateCustomRuleRequestContentRule {
	return CreateCustomRuleRequestContentRule{
		CreateCustomRuleRequestContentRuleOneOf: v,
	}
}

// CreateCustomRuleRequestContentRuleOneOf1AsCreateCustomRuleRequestContentRule is a convenience function that returns CreateCustomRuleRequestContentRuleOneOf1 wrapped in CreateCustomRuleRequestContentRule
func CreateCustomRuleRequestContentRuleOneOf1AsCreateCustomRuleRequestContentRule(v *CreateCustomRuleRequestContentRuleOneOf1) CreateCustomRuleRequestContentRule {
	return CreateCustomRuleRequestContentRule{
		CreateCustomRuleRequestContentRuleOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateCustomRuleRequestContentRule) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateCustomRuleRequestContentRuleOneOf
	err = newStrictDecoder(data).Decode(&dst.CreateCustomRuleRequestContentRuleOneOf)
	if err == nil {
		jsonCreateCustomRuleRequestContentRuleOneOf, _ := json.Marshal(dst.CreateCustomRuleRequestContentRuleOneOf)
		if string(jsonCreateCustomRuleRequestContentRuleOneOf) == "{}" { // empty struct
			dst.CreateCustomRuleRequestContentRuleOneOf = nil
		} else {
			if err = validator.Validate(dst.CreateCustomRuleRequestContentRuleOneOf); err != nil {
				dst.CreateCustomRuleRequestContentRuleOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateCustomRuleRequestContentRuleOneOf = nil
	}

	// try to unmarshal data into CreateCustomRuleRequestContentRuleOneOf1
	err = newStrictDecoder(data).Decode(&dst.CreateCustomRuleRequestContentRuleOneOf1)
	if err == nil {
		jsonCreateCustomRuleRequestContentRuleOneOf1, _ := json.Marshal(dst.CreateCustomRuleRequestContentRuleOneOf1)
		if string(jsonCreateCustomRuleRequestContentRuleOneOf1) == "{}" { // empty struct
			dst.CreateCustomRuleRequestContentRuleOneOf1 = nil
		} else {
			if err = validator.Validate(dst.CreateCustomRuleRequestContentRuleOneOf1); err != nil {
				dst.CreateCustomRuleRequestContentRuleOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateCustomRuleRequestContentRuleOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateCustomRuleRequestContentRuleOneOf = nil
		dst.CreateCustomRuleRequestContentRuleOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateCustomRuleRequestContentRule)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateCustomRuleRequestContentRule)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateCustomRuleRequestContentRule) MarshalJSON() ([]byte, error) {
	if src.CreateCustomRuleRequestContentRuleOneOf != nil {
		return json.Marshal(&src.CreateCustomRuleRequestContentRuleOneOf)
	}

	if src.CreateCustomRuleRequestContentRuleOneOf1 != nil {
		return json.Marshal(&src.CreateCustomRuleRequestContentRuleOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateCustomRuleRequestContentRule) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CreateCustomRuleRequestContentRuleOneOf != nil {
		return obj.CreateCustomRuleRequestContentRuleOneOf
	}

	if obj.CreateCustomRuleRequestContentRuleOneOf1 != nil {
		return obj.CreateCustomRuleRequestContentRuleOneOf1
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CreateCustomRuleRequestContentRule) GetActualInstanceValue() (interface{}) {
	if obj.CreateCustomRuleRequestContentRuleOneOf != nil {
		return *obj.CreateCustomRuleRequestContentRuleOneOf
	}

	if obj.CreateCustomRuleRequestContentRuleOneOf1 != nil {
		return *obj.CreateCustomRuleRequestContentRuleOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableCreateCustomRuleRequestContentRule struct {
	value *CreateCustomRuleRequestContentRule
	isSet bool
}

func (v NullableCreateCustomRuleRequestContentRule) Get() *CreateCustomRuleRequestContentRule {
	return v.value
}

func (v *NullableCreateCustomRuleRequestContentRule) Set(val *CreateCustomRuleRequestContentRule) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomRuleRequestContentRule) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomRuleRequestContentRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomRuleRequestContentRule(val *CreateCustomRuleRequestContentRule) *NullableCreateCustomRuleRequestContentRule {
	return &NullableCreateCustomRuleRequestContentRule{value: val, isSet: true}
}

func (v NullableCreateCustomRuleRequestContentRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomRuleRequestContentRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


