/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum1e34ec8be86c1f2a46a6fc337f591300 the model 'Enum1e34ec8be86c1f2a46a6fc337f591300'
type Enum1e34ec8be86c1f2a46a6fc337f591300 string

// List of Enum_1e34ec8be86c1f2a46a6fc337f591300
const (
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API1_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API1:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API2_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API2:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API3_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API3:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API4_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API4:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API5_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API5:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API6_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API6:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API7_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API7:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API8_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API8:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API9_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API9:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_API10_2023 Enum1e34ec8be86c1f2a46a6fc337f591300 = "API10:2023"
	ENUM1E34EC8BE86C1F2A46A6FC337F591300_A05_2021 Enum1e34ec8be86c1f2a46a6fc337f591300 = "A05:2021"
)

// All allowed values of Enum1e34ec8be86c1f2a46a6fc337f591300 enum
var AllowedEnum1e34ec8be86c1f2a46a6fc337f591300EnumValues = []Enum1e34ec8be86c1f2a46a6fc337f591300{
	"API1:2023",
	"API2:2023",
	"API3:2023",
	"API4:2023",
	"API5:2023",
	"API6:2023",
	"API7:2023",
	"API8:2023",
	"API9:2023",
	"API10:2023",
	"A05:2021",
}

func (v *Enum1e34ec8be86c1f2a46a6fc337f591300) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum1e34ec8be86c1f2a46a6fc337f591300(value)
	for _, existing := range AllowedEnum1e34ec8be86c1f2a46a6fc337f591300EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum1e34ec8be86c1f2a46a6fc337f591300", value)
}

// NewEnum1e34ec8be86c1f2a46a6fc337f591300FromValue returns a pointer to a valid Enum1e34ec8be86c1f2a46a6fc337f591300
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum1e34ec8be86c1f2a46a6fc337f591300FromValue(v string) (*Enum1e34ec8be86c1f2a46a6fc337f591300, error) {
	ev := Enum1e34ec8be86c1f2a46a6fc337f591300(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum1e34ec8be86c1f2a46a6fc337f591300: valid values are %v", v, AllowedEnum1e34ec8be86c1f2a46a6fc337f591300EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum1e34ec8be86c1f2a46a6fc337f591300) IsValid() bool {
	for _, existing := range AllowedEnum1e34ec8be86c1f2a46a6fc337f591300EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_1e34ec8be86c1f2a46a6fc337f591300 value
func (v Enum1e34ec8be86c1f2a46a6fc337f591300) Ptr() *Enum1e34ec8be86c1f2a46a6fc337f591300 {
	return &v
}

type NullableEnum1e34ec8be86c1f2a46a6fc337f591300 struct {
	value *Enum1e34ec8be86c1f2a46a6fc337f591300
	isSet bool
}

func (v NullableEnum1e34ec8be86c1f2a46a6fc337f591300) Get() *Enum1e34ec8be86c1f2a46a6fc337f591300 {
	return v.value
}

func (v *NullableEnum1e34ec8be86c1f2a46a6fc337f591300) Set(val *Enum1e34ec8be86c1f2a46a6fc337f591300) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum1e34ec8be86c1f2a46a6fc337f591300) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum1e34ec8be86c1f2a46a6fc337f591300) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum1e34ec8be86c1f2a46a6fc337f591300(val *Enum1e34ec8be86c1f2a46a6fc337f591300) *NullableEnum1e34ec8be86c1f2a46a6fc337f591300 {
	return &NullableEnum1e34ec8be86c1f2a46a6fc337f591300{value: val, isSet: true}
}

func (v NullableEnum1e34ec8be86c1f2a46a6fc337f591300) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum1e34ec8be86c1f2a46a6fc337f591300) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

