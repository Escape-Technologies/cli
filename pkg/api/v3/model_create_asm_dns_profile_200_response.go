/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateASMDNSProfile200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateASMDNSProfile200Response{}

// CreateASMDNSProfile200Response struct for CreateASMDNSProfile200Response
type CreateASMDNSProfile200Response struct {
	Id string `json:"id"`
	Name string `json:"name"`
	ScannerKind string `json:"scannerKind"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
	Cron string `json:"cron"`
	ScheduledForDeletionAt string `json:"scheduledForDeletionAt"`
	Score float32 `json:"score"`
	Coverage float32 `json:"coverage"`
	ActiveConfiguration CreateASMDNSProfile200ResponseActiveConfiguration `json:"activeConfiguration"`
	ActiveSchema CreateASMDNSProfile200ResponseActiveSchema `json:"activeSchema"`
	Asset ListProfiles200ResponseDataInnerAsset `json:"asset"`
	LastResourceScan CreateASMDNSProfile200ResponseLastResourceScan `json:"lastResourceScan"`
	LastSuccessfulResourceScan CreateASMDNSProfile200ResponseLastResourceScan `json:"lastSuccessfulResourceScan"`
	Risks []Enum1ea54cdf1f4480ebf83fc671185f5693 `json:"risks"`
	Statistics CreateASMDNSProfile200ResponseStatistics `json:"statistics"`
	Links ListProfiles200ResponseDataInnerLinks `json:"links"`
	AdditionalProperties map[string]interface{}
}

type _CreateASMDNSProfile200Response CreateASMDNSProfile200Response

// NewCreateASMDNSProfile200Response instantiates a new CreateASMDNSProfile200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateASMDNSProfile200Response(id string, name string, scannerKind string, createdAt string, updatedAt string, cron string, scheduledForDeletionAt string, score float32, coverage float32, activeConfiguration CreateASMDNSProfile200ResponseActiveConfiguration, activeSchema CreateASMDNSProfile200ResponseActiveSchema, asset ListProfiles200ResponseDataInnerAsset, lastResourceScan CreateASMDNSProfile200ResponseLastResourceScan, lastSuccessfulResourceScan CreateASMDNSProfile200ResponseLastResourceScan, risks []Enum1ea54cdf1f4480ebf83fc671185f5693, statistics CreateASMDNSProfile200ResponseStatistics, links ListProfiles200ResponseDataInnerLinks) *CreateASMDNSProfile200Response {
	this := CreateASMDNSProfile200Response{}
	this.Id = id
	this.Name = name
	this.ScannerKind = scannerKind
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Cron = cron
	this.ScheduledForDeletionAt = scheduledForDeletionAt
	this.Score = score
	this.Coverage = coverage
	this.ActiveConfiguration = activeConfiguration
	this.ActiveSchema = activeSchema
	this.Asset = asset
	this.LastResourceScan = lastResourceScan
	this.LastSuccessfulResourceScan = lastSuccessfulResourceScan
	this.Risks = risks
	this.Statistics = statistics
	this.Links = links
	return &this
}

// NewCreateASMDNSProfile200ResponseWithDefaults instantiates a new CreateASMDNSProfile200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateASMDNSProfile200ResponseWithDefaults() *CreateASMDNSProfile200Response {
	this := CreateASMDNSProfile200Response{}
	return &this
}

// GetId returns the Id field value
func (o *CreateASMDNSProfile200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateASMDNSProfile200Response) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CreateASMDNSProfile200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateASMDNSProfile200Response) SetName(v string) {
	o.Name = v
}

// GetScannerKind returns the ScannerKind field value
func (o *CreateASMDNSProfile200Response) GetScannerKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScannerKind
}

// GetScannerKindOk returns a tuple with the ScannerKind field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetScannerKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScannerKind, true
}

// SetScannerKind sets field value
func (o *CreateASMDNSProfile200Response) SetScannerKind(v string) {
	o.ScannerKind = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateASMDNSProfile200Response) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateASMDNSProfile200Response) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CreateASMDNSProfile200Response) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CreateASMDNSProfile200Response) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetCron returns the Cron field value
func (o *CreateASMDNSProfile200Response) GetCron() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cron
}

// GetCronOk returns a tuple with the Cron field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetCronOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cron, true
}

// SetCron sets field value
func (o *CreateASMDNSProfile200Response) SetCron(v string) {
	o.Cron = v
}

// GetScheduledForDeletionAt returns the ScheduledForDeletionAt field value
func (o *CreateASMDNSProfile200Response) GetScheduledForDeletionAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScheduledForDeletionAt
}

// GetScheduledForDeletionAtOk returns a tuple with the ScheduledForDeletionAt field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetScheduledForDeletionAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduledForDeletionAt, true
}

// SetScheduledForDeletionAt sets field value
func (o *CreateASMDNSProfile200Response) SetScheduledForDeletionAt(v string) {
	o.ScheduledForDeletionAt = v
}

// GetScore returns the Score field value
func (o *CreateASMDNSProfile200Response) GetScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *CreateASMDNSProfile200Response) SetScore(v float32) {
	o.Score = v
}

// GetCoverage returns the Coverage field value
func (o *CreateASMDNSProfile200Response) GetCoverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Coverage
}

// GetCoverageOk returns a tuple with the Coverage field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetCoverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Coverage, true
}

// SetCoverage sets field value
func (o *CreateASMDNSProfile200Response) SetCoverage(v float32) {
	o.Coverage = v
}

// GetActiveConfiguration returns the ActiveConfiguration field value
func (o *CreateASMDNSProfile200Response) GetActiveConfiguration() CreateASMDNSProfile200ResponseActiveConfiguration {
	if o == nil {
		var ret CreateASMDNSProfile200ResponseActiveConfiguration
		return ret
	}

	return o.ActiveConfiguration
}

// GetActiveConfigurationOk returns a tuple with the ActiveConfiguration field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetActiveConfigurationOk() (*CreateASMDNSProfile200ResponseActiveConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveConfiguration, true
}

// SetActiveConfiguration sets field value
func (o *CreateASMDNSProfile200Response) SetActiveConfiguration(v CreateASMDNSProfile200ResponseActiveConfiguration) {
	o.ActiveConfiguration = v
}

// GetActiveSchema returns the ActiveSchema field value
func (o *CreateASMDNSProfile200Response) GetActiveSchema() CreateASMDNSProfile200ResponseActiveSchema {
	if o == nil {
		var ret CreateASMDNSProfile200ResponseActiveSchema
		return ret
	}

	return o.ActiveSchema
}

// GetActiveSchemaOk returns a tuple with the ActiveSchema field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetActiveSchemaOk() (*CreateASMDNSProfile200ResponseActiveSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveSchema, true
}

// SetActiveSchema sets field value
func (o *CreateASMDNSProfile200Response) SetActiveSchema(v CreateASMDNSProfile200ResponseActiveSchema) {
	o.ActiveSchema = v
}

// GetAsset returns the Asset field value
func (o *CreateASMDNSProfile200Response) GetAsset() ListProfiles200ResponseDataInnerAsset {
	if o == nil {
		var ret ListProfiles200ResponseDataInnerAsset
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetAssetOk() (*ListProfiles200ResponseDataInnerAsset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *CreateASMDNSProfile200Response) SetAsset(v ListProfiles200ResponseDataInnerAsset) {
	o.Asset = v
}

// GetLastResourceScan returns the LastResourceScan field value
func (o *CreateASMDNSProfile200Response) GetLastResourceScan() CreateASMDNSProfile200ResponseLastResourceScan {
	if o == nil {
		var ret CreateASMDNSProfile200ResponseLastResourceScan
		return ret
	}

	return o.LastResourceScan
}

// GetLastResourceScanOk returns a tuple with the LastResourceScan field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetLastResourceScanOk() (*CreateASMDNSProfile200ResponseLastResourceScan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastResourceScan, true
}

// SetLastResourceScan sets field value
func (o *CreateASMDNSProfile200Response) SetLastResourceScan(v CreateASMDNSProfile200ResponseLastResourceScan) {
	o.LastResourceScan = v
}

// GetLastSuccessfulResourceScan returns the LastSuccessfulResourceScan field value
func (o *CreateASMDNSProfile200Response) GetLastSuccessfulResourceScan() CreateASMDNSProfile200ResponseLastResourceScan {
	if o == nil {
		var ret CreateASMDNSProfile200ResponseLastResourceScan
		return ret
	}

	return o.LastSuccessfulResourceScan
}

// GetLastSuccessfulResourceScanOk returns a tuple with the LastSuccessfulResourceScan field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetLastSuccessfulResourceScanOk() (*CreateASMDNSProfile200ResponseLastResourceScan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSuccessfulResourceScan, true
}

// SetLastSuccessfulResourceScan sets field value
func (o *CreateASMDNSProfile200Response) SetLastSuccessfulResourceScan(v CreateASMDNSProfile200ResponseLastResourceScan) {
	o.LastSuccessfulResourceScan = v
}

// GetRisks returns the Risks field value
func (o *CreateASMDNSProfile200Response) GetRisks() []Enum1ea54cdf1f4480ebf83fc671185f5693 {
	if o == nil {
		var ret []Enum1ea54cdf1f4480ebf83fc671185f5693
		return ret
	}

	return o.Risks
}

// GetRisksOk returns a tuple with the Risks field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetRisksOk() ([]Enum1ea54cdf1f4480ebf83fc671185f5693, bool) {
	if o == nil {
		return nil, false
	}
	return o.Risks, true
}

// SetRisks sets field value
func (o *CreateASMDNSProfile200Response) SetRisks(v []Enum1ea54cdf1f4480ebf83fc671185f5693) {
	o.Risks = v
}

// GetStatistics returns the Statistics field value
func (o *CreateASMDNSProfile200Response) GetStatistics() CreateASMDNSProfile200ResponseStatistics {
	if o == nil {
		var ret CreateASMDNSProfile200ResponseStatistics
		return ret
	}

	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetStatisticsOk() (*CreateASMDNSProfile200ResponseStatistics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statistics, true
}

// SetStatistics sets field value
func (o *CreateASMDNSProfile200Response) SetStatistics(v CreateASMDNSProfile200ResponseStatistics) {
	o.Statistics = v
}

// GetLinks returns the Links field value
func (o *CreateASMDNSProfile200Response) GetLinks() ListProfiles200ResponseDataInnerLinks {
	if o == nil {
		var ret ListProfiles200ResponseDataInnerLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *CreateASMDNSProfile200Response) GetLinksOk() (*ListProfiles200ResponseDataInnerLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *CreateASMDNSProfile200Response) SetLinks(v ListProfiles200ResponseDataInnerLinks) {
	o.Links = v
}

func (o CreateASMDNSProfile200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateASMDNSProfile200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["scannerKind"] = o.ScannerKind
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["cron"] = o.Cron
	toSerialize["scheduledForDeletionAt"] = o.ScheduledForDeletionAt
	toSerialize["score"] = o.Score
	toSerialize["coverage"] = o.Coverage
	toSerialize["activeConfiguration"] = o.ActiveConfiguration
	toSerialize["activeSchema"] = o.ActiveSchema
	toSerialize["asset"] = o.Asset
	toSerialize["lastResourceScan"] = o.LastResourceScan
	toSerialize["lastSuccessfulResourceScan"] = o.LastSuccessfulResourceScan
	toSerialize["risks"] = o.Risks
	toSerialize["statistics"] = o.Statistics
	toSerialize["links"] = o.Links

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateASMDNSProfile200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"scannerKind",
		"createdAt",
		"updatedAt",
		"cron",
		"scheduledForDeletionAt",
		"score",
		"coverage",
		"activeConfiguration",
		"activeSchema",
		"asset",
		"lastResourceScan",
		"lastSuccessfulResourceScan",
		"risks",
		"statistics",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateASMDNSProfile200Response := _CreateASMDNSProfile200Response{}

	err = json.Unmarshal(data, &varCreateASMDNSProfile200Response)

	if err != nil {
		return err
	}

	*o = CreateASMDNSProfile200Response(varCreateASMDNSProfile200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "scannerKind")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "cron")
		delete(additionalProperties, "scheduledForDeletionAt")
		delete(additionalProperties, "score")
		delete(additionalProperties, "coverage")
		delete(additionalProperties, "activeConfiguration")
		delete(additionalProperties, "activeSchema")
		delete(additionalProperties, "asset")
		delete(additionalProperties, "lastResourceScan")
		delete(additionalProperties, "lastSuccessfulResourceScan")
		delete(additionalProperties, "risks")
		delete(additionalProperties, "statistics")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateASMDNSProfile200Response struct {
	value *CreateASMDNSProfile200Response
	isSet bool
}

func (v NullableCreateASMDNSProfile200Response) Get() *CreateASMDNSProfile200Response {
	return v.value
}

func (v *NullableCreateASMDNSProfile200Response) Set(val *CreateASMDNSProfile200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateASMDNSProfile200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateASMDNSProfile200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateASMDNSProfile200Response(val *CreateASMDNSProfile200Response) *NullableCreateASMDNSProfile200Response {
	return &NullableCreateASMDNSProfile200Response{value: val, isSet: true}
}

func (v NullableCreateASMDNSProfile200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateASMDNSProfile200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


