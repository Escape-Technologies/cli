/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the UpdateAssetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAssetRequest{}

// UpdateAssetRequest struct for UpdateAssetRequest
type UpdateAssetRequest struct {
	// The tag IDs of the asset
	TagIds []string `json:"tagIds,omitempty"`
	// The owners of the asset
	Owners []string `json:"owners,omitempty"`
	Framework *EnumAaccef0c05ed72dfa82b28d54c8e6410 `json:"framework,omitempty"`
	Status *Enum979d32dc69b8f72f50564e75367bcbb5 `json:"status,omitempty"`
	// The description of the asset
	Description *string `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateAssetRequest UpdateAssetRequest

// NewUpdateAssetRequest instantiates a new UpdateAssetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAssetRequest() *UpdateAssetRequest {
	this := UpdateAssetRequest{}
	return &this
}

// NewUpdateAssetRequestWithDefaults instantiates a new UpdateAssetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAssetRequestWithDefaults() *UpdateAssetRequest {
	this := UpdateAssetRequest{}
	return &this
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *UpdateAssetRequest) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetRequest) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *UpdateAssetRequest) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *UpdateAssetRequest) SetTagIds(v []string) {
	o.TagIds = v
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *UpdateAssetRequest) GetOwners() []string {
	if o == nil || IsNil(o.Owners) {
		var ret []string
		return ret
	}
	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetRequest) GetOwnersOk() ([]string, bool) {
	if o == nil || IsNil(o.Owners) {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *UpdateAssetRequest) HasOwners() bool {
	if o != nil && !IsNil(o.Owners) {
		return true
	}

	return false
}

// SetOwners gets a reference to the given []string and assigns it to the Owners field.
func (o *UpdateAssetRequest) SetOwners(v []string) {
	o.Owners = v
}

// GetFramework returns the Framework field value if set, zero value otherwise.
func (o *UpdateAssetRequest) GetFramework() EnumAaccef0c05ed72dfa82b28d54c8e6410 {
	if o == nil || IsNil(o.Framework) {
		var ret EnumAaccef0c05ed72dfa82b28d54c8e6410
		return ret
	}
	return *o.Framework
}

// GetFrameworkOk returns a tuple with the Framework field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetRequest) GetFrameworkOk() (*EnumAaccef0c05ed72dfa82b28d54c8e6410, bool) {
	if o == nil || IsNil(o.Framework) {
		return nil, false
	}
	return o.Framework, true
}

// HasFramework returns a boolean if a field has been set.
func (o *UpdateAssetRequest) HasFramework() bool {
	if o != nil && !IsNil(o.Framework) {
		return true
	}

	return false
}

// SetFramework gets a reference to the given EnumAaccef0c05ed72dfa82b28d54c8e6410 and assigns it to the Framework field.
func (o *UpdateAssetRequest) SetFramework(v EnumAaccef0c05ed72dfa82b28d54c8e6410) {
	o.Framework = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateAssetRequest) GetStatus() Enum979d32dc69b8f72f50564e75367bcbb5 {
	if o == nil || IsNil(o.Status) {
		var ret Enum979d32dc69b8f72f50564e75367bcbb5
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetRequest) GetStatusOk() (*Enum979d32dc69b8f72f50564e75367bcbb5, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateAssetRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given Enum979d32dc69b8f72f50564e75367bcbb5 and assigns it to the Status field.
func (o *UpdateAssetRequest) SetStatus(v Enum979d32dc69b8f72f50564e75367bcbb5) {
	o.Status = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateAssetRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateAssetRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateAssetRequest) SetDescription(v string) {
	o.Description = &v
}

func (o UpdateAssetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAssetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	if !IsNil(o.Owners) {
		toSerialize["owners"] = o.Owners
	}
	if !IsNil(o.Framework) {
		toSerialize["framework"] = o.Framework
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateAssetRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateAssetRequest := _UpdateAssetRequest{}

	err = json.Unmarshal(data, &varUpdateAssetRequest)

	if err != nil {
		return err
	}

	*o = UpdateAssetRequest(varUpdateAssetRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tagIds")
		delete(additionalProperties, "owners")
		delete(additionalProperties, "framework")
		delete(additionalProperties, "status")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateAssetRequest struct {
	value *UpdateAssetRequest
	isSet bool
}

func (v NullableUpdateAssetRequest) Get() *UpdateAssetRequest {
	return v.value
}

func (v *NullableUpdateAssetRequest) Set(val *UpdateAssetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAssetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAssetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAssetRequest(val *UpdateAssetRequest) *NullableUpdateAssetRequest {
	return &NullableUpdateAssetRequest{value: val, isSet: true}
}

func (v NullableUpdateAssetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAssetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


