/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum111ee63b8407108414444e681aa5aa2c the model 'Enum111ee63b8407108414444e681aa5aa2c'
type Enum111ee63b8407108414444e681aa5aa2c string

// List of Enum_111ee63b8407108414444e681aa5aa2c
const (
	ENUM111EE63B8407108414444E681AA5AA2C_FRONTEND_REACT Enum111ee63b8407108414444e681aa5aa2c = "FRONTEND_REACT"
	ENUM111EE63B8407108414444E681AA5AA2C_FRONTEND_VUE Enum111ee63b8407108414444e681aa5aa2c = "FRONTEND_VUE"
	ENUM111EE63B8407108414444E681AA5AA2C_FRONTEND_ANGULAR Enum111ee63b8407108414444e681aa5aa2c = "FRONTEND_ANGULAR"
	ENUM111EE63B8407108414444E681AA5AA2C_FRONTEND_SVELTE Enum111ee63b8407108414444e681aa5aa2c = "FRONTEND_SVELTE"
	ENUM111EE63B8407108414444E681AA5AA2C_FRONTEND_JQUERY Enum111ee63b8407108414444e681aa5aa2c = "FRONTEND_JQUERY"
	ENUM111EE63B8407108414444E681AA5AA2C_FRONTEND_JAVASCRIPT Enum111ee63b8407108414444e681aa5aa2c = "FRONTEND_JAVASCRIPT"
)

// All allowed values of Enum111ee63b8407108414444e681aa5aa2c enum
var AllowedEnum111ee63b8407108414444e681aa5aa2cEnumValues = []Enum111ee63b8407108414444e681aa5aa2c{
	"FRONTEND_REACT",
	"FRONTEND_VUE",
	"FRONTEND_ANGULAR",
	"FRONTEND_SVELTE",
	"FRONTEND_JQUERY",
	"FRONTEND_JAVASCRIPT",
}

func (v *Enum111ee63b8407108414444e681aa5aa2c) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum111ee63b8407108414444e681aa5aa2c(value)
	for _, existing := range AllowedEnum111ee63b8407108414444e681aa5aa2cEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum111ee63b8407108414444e681aa5aa2c", value)
}

// NewEnum111ee63b8407108414444e681aa5aa2cFromValue returns a pointer to a valid Enum111ee63b8407108414444e681aa5aa2c
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum111ee63b8407108414444e681aa5aa2cFromValue(v string) (*Enum111ee63b8407108414444e681aa5aa2c, error) {
	ev := Enum111ee63b8407108414444e681aa5aa2c(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum111ee63b8407108414444e681aa5aa2c: valid values are %v", v, AllowedEnum111ee63b8407108414444e681aa5aa2cEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum111ee63b8407108414444e681aa5aa2c) IsValid() bool {
	for _, existing := range AllowedEnum111ee63b8407108414444e681aa5aa2cEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_111ee63b8407108414444e681aa5aa2c value
func (v Enum111ee63b8407108414444e681aa5aa2c) Ptr() *Enum111ee63b8407108414444e681aa5aa2c {
	return &v
}

type NullableEnum111ee63b8407108414444e681aa5aa2c struct {
	value *Enum111ee63b8407108414444e681aa5aa2c
	isSet bool
}

func (v NullableEnum111ee63b8407108414444e681aa5aa2c) Get() *Enum111ee63b8407108414444e681aa5aa2c {
	return v.value
}

func (v *NullableEnum111ee63b8407108414444e681aa5aa2c) Set(val *Enum111ee63b8407108414444e681aa5aa2c) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum111ee63b8407108414444e681aa5aa2c) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum111ee63b8407108414444e681aa5aa2c) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum111ee63b8407108414444e681aa5aa2c(val *Enum111ee63b8407108414444e681aa5aa2c) *NullableEnum111ee63b8407108414444e681aa5aa2c {
	return &NullableEnum111ee63b8407108414444e681aa5aa2c{value: val, isSet: true}
}

func (v NullableEnum111ee63b8407108414444e681aa5aa2c) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum111ee63b8407108414444e681aa5aa2c) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

