/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum461e4d210f1062ae8e63863a9180f177 the model 'Enum461e4d210f1062ae8e63863a9180f177'
type Enum461e4d210f1062ae8e63863a9180f177 string

// List of Enum_461e4d210f1062ae8e63863a9180f177
const (
	ENUM461E4D210F1062AE8E63863A9180F177_AKAMAI Enum461e4d210f1062ae8e63863a9180f177 = "AKAMAI"
	ENUM461E4D210F1062AE8E63863A9180F177_ALIBABA Enum461e4d210f1062ae8e63863a9180f177 = "ALIBABA"
	ENUM461E4D210F1062AE8E63863A9180F177_AWS Enum461e4d210f1062ae8e63863a9180f177 = "AWS"
	ENUM461E4D210F1062AE8E63863A9180F177_AZURE Enum461e4d210f1062ae8e63863a9180f177 = "AZURE"
	ENUM461E4D210F1062AE8E63863A9180F177_CLOUDFLARE Enum461e4d210f1062ae8e63863a9180f177 = "CLOUDFLARE"
	ENUM461E4D210F1062AE8E63863A9180F177_DIGITALOCEAN Enum461e4d210f1062ae8e63863a9180f177 = "DIGITALOCEAN"
	ENUM461E4D210F1062AE8E63863A9180F177_FASTLY Enum461e4d210f1062ae8e63863a9180f177 = "FASTLY"
	ENUM461E4D210F1062AE8E63863A9180F177_GCP Enum461e4d210f1062ae8e63863a9180f177 = "GCP"
	ENUM461E4D210F1062AE8E63863A9180F177_GRAVITEE Enum461e4d210f1062ae8e63863a9180f177 = "GRAVITEE"
	ENUM461E4D210F1062AE8E63863A9180F177_HEROKU Enum461e4d210f1062ae8e63863a9180f177 = "HEROKU"
	ENUM461E4D210F1062AE8E63863A9180F177_IBM Enum461e4d210f1062ae8e63863a9180f177 = "IBM"
	ENUM461E4D210F1062AE8E63863A9180F177_LINODE Enum461e4d210f1062ae8e63863a9180f177 = "LINODE"
	ENUM461E4D210F1062AE8E63863A9180F177_ORACLE Enum461e4d210f1062ae8e63863a9180f177 = "ORACLE"
	ENUM461E4D210F1062AE8E63863A9180F177_OVH Enum461e4d210f1062ae8e63863a9180f177 = "OVH"
	ENUM461E4D210F1062AE8E63863A9180F177_SCALEWAY Enum461e4d210f1062ae8e63863a9180f177 = "SCALEWAY"
	ENUM461E4D210F1062AE8E63863A9180F177_TENCENT Enum461e4d210f1062ae8e63863a9180f177 = "TENCENT"
	ENUM461E4D210F1062AE8E63863A9180F177_UCLOUD Enum461e4d210f1062ae8e63863a9180f177 = "UCLOUD"
	ENUM461E4D210F1062AE8E63863A9180F177_VERCEL Enum461e4d210f1062ae8e63863a9180f177 = "VERCEL"
	ENUM461E4D210F1062AE8E63863A9180F177_UNKNOWN Enum461e4d210f1062ae8e63863a9180f177 = "UNKNOWN"
)

// All allowed values of Enum461e4d210f1062ae8e63863a9180f177 enum
var AllowedEnum461e4d210f1062ae8e63863a9180f177EnumValues = []Enum461e4d210f1062ae8e63863a9180f177{
	"AKAMAI",
	"ALIBABA",
	"AWS",
	"AZURE",
	"CLOUDFLARE",
	"DIGITALOCEAN",
	"FASTLY",
	"GCP",
	"GRAVITEE",
	"HEROKU",
	"IBM",
	"LINODE",
	"ORACLE",
	"OVH",
	"SCALEWAY",
	"TENCENT",
	"UCLOUD",
	"VERCEL",
	"UNKNOWN",
}

func (v *Enum461e4d210f1062ae8e63863a9180f177) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum461e4d210f1062ae8e63863a9180f177(value)
	for _, existing := range AllowedEnum461e4d210f1062ae8e63863a9180f177EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum461e4d210f1062ae8e63863a9180f177", value)
}

// NewEnum461e4d210f1062ae8e63863a9180f177FromValue returns a pointer to a valid Enum461e4d210f1062ae8e63863a9180f177
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum461e4d210f1062ae8e63863a9180f177FromValue(v string) (*Enum461e4d210f1062ae8e63863a9180f177, error) {
	ev := Enum461e4d210f1062ae8e63863a9180f177(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum461e4d210f1062ae8e63863a9180f177: valid values are %v", v, AllowedEnum461e4d210f1062ae8e63863a9180f177EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum461e4d210f1062ae8e63863a9180f177) IsValid() bool {
	for _, existing := range AllowedEnum461e4d210f1062ae8e63863a9180f177EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_461e4d210f1062ae8e63863a9180f177 value
func (v Enum461e4d210f1062ae8e63863a9180f177) Ptr() *Enum461e4d210f1062ae8e63863a9180f177 {
	return &v
}

type NullableEnum461e4d210f1062ae8e63863a9180f177 struct {
	value *Enum461e4d210f1062ae8e63863a9180f177
	isSet bool
}

func (v NullableEnum461e4d210f1062ae8e63863a9180f177) Get() *Enum461e4d210f1062ae8e63863a9180f177 {
	return v.value
}

func (v *NullableEnum461e4d210f1062ae8e63863a9180f177) Set(val *Enum461e4d210f1062ae8e63863a9180f177) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum461e4d210f1062ae8e63863a9180f177) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum461e4d210f1062ae8e63863a9180f177) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum461e4d210f1062ae8e63863a9180f177(val *Enum461e4d210f1062ae8e63863a9180f177) *NullableEnum461e4d210f1062ae8e63863a9180f177 {
	return &NullableEnum461e4d210f1062ae8e63863a9180f177{value: val, isSet: true}
}

func (v NullableEnum461e4d210f1062ae8e63863a9180f177) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum461e4d210f1062ae8e63863a9180f177) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

