/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the AssetFrontendDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetFrontendDetailed{}

// AssetFrontendDetailed Detailed information about an asset frontend
type AssetFrontendDetailed struct {
	Type string `json:"type"`
	Url string `json:"url"`
	Framework *string `json:"framework,omitempty"`
	APIFramework *string `json:"APIFramework,omitempty"`
	AuthProtocol *string `json:"authProtocol,omitempty"`
	AuthTechnology *string `json:"authTechnology,omitempty"`
	CloudProvider *string `json:"cloudProvider,omitempty"`
	WafProvider *string `json:"wafProvider,omitempty"`
	Environment *string `json:"environment,omitempty"`
	Ips []string `json:"ips"`
	Tls bool `json:"tls"`
	AdditionalProperties map[string]interface{}
}

type _AssetFrontendDetailed AssetFrontendDetailed

// NewAssetFrontendDetailed instantiates a new AssetFrontendDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetFrontendDetailed(type_ string, url string, ips []string, tls bool) *AssetFrontendDetailed {
	this := AssetFrontendDetailed{}
	this.Type = type_
	this.Url = url
	this.Ips = ips
	this.Tls = tls
	return &this
}

// NewAssetFrontendDetailedWithDefaults instantiates a new AssetFrontendDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetFrontendDetailedWithDefaults() *AssetFrontendDetailed {
	this := AssetFrontendDetailed{}
	return &this
}

// GetType returns the Type field value
func (o *AssetFrontendDetailed) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AssetFrontendDetailed) SetType(v string) {
	o.Type = v
}

// GetUrl returns the Url field value
func (o *AssetFrontendDetailed) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AssetFrontendDetailed) SetUrl(v string) {
	o.Url = v
}

// GetFramework returns the Framework field value if set, zero value otherwise.
func (o *AssetFrontendDetailed) GetFramework() string {
	if o == nil || IsNil(o.Framework) {
		var ret string
		return ret
	}
	return *o.Framework
}

// GetFrameworkOk returns a tuple with the Framework field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetFrameworkOk() (*string, bool) {
	if o == nil || IsNil(o.Framework) {
		return nil, false
	}
	return o.Framework, true
}

// HasFramework returns a boolean if a field has been set.
func (o *AssetFrontendDetailed) HasFramework() bool {
	if o != nil && !IsNil(o.Framework) {
		return true
	}

	return false
}

// SetFramework gets a reference to the given string and assigns it to the Framework field.
func (o *AssetFrontendDetailed) SetFramework(v string) {
	o.Framework = &v
}

// GetAPIFramework returns the APIFramework field value if set, zero value otherwise.
func (o *AssetFrontendDetailed) GetAPIFramework() string {
	if o == nil || IsNil(o.APIFramework) {
		var ret string
		return ret
	}
	return *o.APIFramework
}

// GetAPIFrameworkOk returns a tuple with the APIFramework field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetAPIFrameworkOk() (*string, bool) {
	if o == nil || IsNil(o.APIFramework) {
		return nil, false
	}
	return o.APIFramework, true
}

// HasAPIFramework returns a boolean if a field has been set.
func (o *AssetFrontendDetailed) HasAPIFramework() bool {
	if o != nil && !IsNil(o.APIFramework) {
		return true
	}

	return false
}

// SetAPIFramework gets a reference to the given string and assigns it to the APIFramework field.
func (o *AssetFrontendDetailed) SetAPIFramework(v string) {
	o.APIFramework = &v
}

// GetAuthProtocol returns the AuthProtocol field value if set, zero value otherwise.
func (o *AssetFrontendDetailed) GetAuthProtocol() string {
	if o == nil || IsNil(o.AuthProtocol) {
		var ret string
		return ret
	}
	return *o.AuthProtocol
}

// GetAuthProtocolOk returns a tuple with the AuthProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetAuthProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.AuthProtocol) {
		return nil, false
	}
	return o.AuthProtocol, true
}

// HasAuthProtocol returns a boolean if a field has been set.
func (o *AssetFrontendDetailed) HasAuthProtocol() bool {
	if o != nil && !IsNil(o.AuthProtocol) {
		return true
	}

	return false
}

// SetAuthProtocol gets a reference to the given string and assigns it to the AuthProtocol field.
func (o *AssetFrontendDetailed) SetAuthProtocol(v string) {
	o.AuthProtocol = &v
}

// GetAuthTechnology returns the AuthTechnology field value if set, zero value otherwise.
func (o *AssetFrontendDetailed) GetAuthTechnology() string {
	if o == nil || IsNil(o.AuthTechnology) {
		var ret string
		return ret
	}
	return *o.AuthTechnology
}

// GetAuthTechnologyOk returns a tuple with the AuthTechnology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetAuthTechnologyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthTechnology) {
		return nil, false
	}
	return o.AuthTechnology, true
}

// HasAuthTechnology returns a boolean if a field has been set.
func (o *AssetFrontendDetailed) HasAuthTechnology() bool {
	if o != nil && !IsNil(o.AuthTechnology) {
		return true
	}

	return false
}

// SetAuthTechnology gets a reference to the given string and assigns it to the AuthTechnology field.
func (o *AssetFrontendDetailed) SetAuthTechnology(v string) {
	o.AuthTechnology = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *AssetFrontendDetailed) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *AssetFrontendDetailed) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *AssetFrontendDetailed) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetWafProvider returns the WafProvider field value if set, zero value otherwise.
func (o *AssetFrontendDetailed) GetWafProvider() string {
	if o == nil || IsNil(o.WafProvider) {
		var ret string
		return ret
	}
	return *o.WafProvider
}

// GetWafProviderOk returns a tuple with the WafProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetWafProviderOk() (*string, bool) {
	if o == nil || IsNil(o.WafProvider) {
		return nil, false
	}
	return o.WafProvider, true
}

// HasWafProvider returns a boolean if a field has been set.
func (o *AssetFrontendDetailed) HasWafProvider() bool {
	if o != nil && !IsNil(o.WafProvider) {
		return true
	}

	return false
}

// SetWafProvider gets a reference to the given string and assigns it to the WafProvider field.
func (o *AssetFrontendDetailed) SetWafProvider(v string) {
	o.WafProvider = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AssetFrontendDetailed) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AssetFrontendDetailed) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *AssetFrontendDetailed) SetEnvironment(v string) {
	o.Environment = &v
}

// GetIps returns the Ips field value
func (o *AssetFrontendDetailed) GetIps() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetIpsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ips, true
}

// SetIps sets field value
func (o *AssetFrontendDetailed) SetIps(v []string) {
	o.Ips = v
}

// GetTls returns the Tls field value
func (o *AssetFrontendDetailed) GetTls() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Tls
}

// GetTlsOk returns a tuple with the Tls field value
// and a boolean to check if the value has been set.
func (o *AssetFrontendDetailed) GetTlsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tls, true
}

// SetTls sets field value
func (o *AssetFrontendDetailed) SetTls(v bool) {
	o.Tls = v
}

func (o AssetFrontendDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetFrontendDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["url"] = o.Url
	if !IsNil(o.Framework) {
		toSerialize["framework"] = o.Framework
	}
	if !IsNil(o.APIFramework) {
		toSerialize["APIFramework"] = o.APIFramework
	}
	if !IsNil(o.AuthProtocol) {
		toSerialize["authProtocol"] = o.AuthProtocol
	}
	if !IsNil(o.AuthTechnology) {
		toSerialize["authTechnology"] = o.AuthTechnology
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if !IsNil(o.WafProvider) {
		toSerialize["wafProvider"] = o.WafProvider
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	toSerialize["ips"] = o.Ips
	toSerialize["tls"] = o.Tls

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetFrontendDetailed) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"url",
		"ips",
		"tls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssetFrontendDetailed := _AssetFrontendDetailed{}

	err = json.Unmarshal(data, &varAssetFrontendDetailed)

	if err != nil {
		return err
	}

	*o = AssetFrontendDetailed(varAssetFrontendDetailed)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "url")
		delete(additionalProperties, "framework")
		delete(additionalProperties, "APIFramework")
		delete(additionalProperties, "authProtocol")
		delete(additionalProperties, "authTechnology")
		delete(additionalProperties, "cloudProvider")
		delete(additionalProperties, "wafProvider")
		delete(additionalProperties, "environment")
		delete(additionalProperties, "ips")
		delete(additionalProperties, "tls")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetFrontendDetailed struct {
	value *AssetFrontendDetailed
	isSet bool
}

func (v NullableAssetFrontendDetailed) Get() *AssetFrontendDetailed {
	return v.value
}

func (v *NullableAssetFrontendDetailed) Set(val *AssetFrontendDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetFrontendDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetFrontendDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetFrontendDetailed(val *AssetFrontendDetailed) *NullableAssetFrontendDetailed {
	return &NullableAssetFrontendDetailed{value: val, isSet: true}
}

func (v NullableAssetFrontendDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetFrontendDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


