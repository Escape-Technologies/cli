/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER the model 'ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER'
type ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER string

// List of ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_INTERNAL_PROPERTIES_FRONTEND_CRAWLING_STATE_BUILDER
const (
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER_MULTI_MODAL_OPENAI                ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER = "multi_modal_openai"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER_URL_ACTION_STATE_IDENTIFIER       ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER = "url_action_state_identifier"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER_URL_STATE_IDENTIFIER              ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER = "url_state_identifier"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER_MULTI_MODAL_CLUSTERING_IDENTIFIER ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER = "multi_modal_clustering_identifier"
)

// All allowed values of ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER enum
var AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDEREnumValues = []ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER{
	"multi_modal_openai",
	"url_action_state_identifier",
	"url_state_identifier",
	"multi_modal_clustering_identifier",
}

func (v *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER(value)
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDEREnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER", value)
}

// NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDERFromValue returns a pointer to a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDERFromValue(v string) (*ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER, error) {
	ev := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER: valid values are %v", v, AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDEREnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDEREnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_INTERNAL_PROPERTIES_FRONTEND_CRAWLING_STATE_BUILDER value
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) Ptr() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER {
	return &v
}

type NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER struct {
	value *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER
	isSet bool
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) Get() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER {
	return v.value
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) Set(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER {
	return &NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESINTERNALPROPERTIESFRONTENDCRAWLINGSTATEBUILDER) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
