/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationExperimental type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationExperimental{}

// ProfileDetailedConfigurationExperimental struct for ProfileDetailedConfigurationExperimental
type ProfileDetailedConfigurationExperimental struct {
	EnableWebappSurfaceScan *bool `json:"enable_webapp_surface_scan,omitempty"`
	EnableWebappExtractor *bool `json:"enable_webapp_extractor,omitempty"`
	EnableAsmNucleiChecks *bool `json:"enable_asm_nuclei_checks,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationExperimental ProfileDetailedConfigurationExperimental

// NewProfileDetailedConfigurationExperimental instantiates a new ProfileDetailedConfigurationExperimental object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationExperimental() *ProfileDetailedConfigurationExperimental {
	this := ProfileDetailedConfigurationExperimental{}
	return &this
}

// NewProfileDetailedConfigurationExperimentalWithDefaults instantiates a new ProfileDetailedConfigurationExperimental object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationExperimentalWithDefaults() *ProfileDetailedConfigurationExperimental {
	this := ProfileDetailedConfigurationExperimental{}
	return &this
}

// GetEnableWebappSurfaceScan returns the EnableWebappSurfaceScan field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationExperimental) GetEnableWebappSurfaceScan() bool {
	if o == nil || IsNil(o.EnableWebappSurfaceScan) {
		var ret bool
		return ret
	}
	return *o.EnableWebappSurfaceScan
}

// GetEnableWebappSurfaceScanOk returns a tuple with the EnableWebappSurfaceScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationExperimental) GetEnableWebappSurfaceScanOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableWebappSurfaceScan) {
		return nil, false
	}
	return o.EnableWebappSurfaceScan, true
}

// HasEnableWebappSurfaceScan returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationExperimental) HasEnableWebappSurfaceScan() bool {
	if o != nil && !IsNil(o.EnableWebappSurfaceScan) {
		return true
	}

	return false
}

// SetEnableWebappSurfaceScan gets a reference to the given bool and assigns it to the EnableWebappSurfaceScan field.
func (o *ProfileDetailedConfigurationExperimental) SetEnableWebappSurfaceScan(v bool) {
	o.EnableWebappSurfaceScan = &v
}

// GetEnableWebappExtractor returns the EnableWebappExtractor field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationExperimental) GetEnableWebappExtractor() bool {
	if o == nil || IsNil(o.EnableWebappExtractor) {
		var ret bool
		return ret
	}
	return *o.EnableWebappExtractor
}

// GetEnableWebappExtractorOk returns a tuple with the EnableWebappExtractor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationExperimental) GetEnableWebappExtractorOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableWebappExtractor) {
		return nil, false
	}
	return o.EnableWebappExtractor, true
}

// HasEnableWebappExtractor returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationExperimental) HasEnableWebappExtractor() bool {
	if o != nil && !IsNil(o.EnableWebappExtractor) {
		return true
	}

	return false
}

// SetEnableWebappExtractor gets a reference to the given bool and assigns it to the EnableWebappExtractor field.
func (o *ProfileDetailedConfigurationExperimental) SetEnableWebappExtractor(v bool) {
	o.EnableWebappExtractor = &v
}

// GetEnableAsmNucleiChecks returns the EnableAsmNucleiChecks field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationExperimental) GetEnableAsmNucleiChecks() bool {
	if o == nil || IsNil(o.EnableAsmNucleiChecks) {
		var ret bool
		return ret
	}
	return *o.EnableAsmNucleiChecks
}

// GetEnableAsmNucleiChecksOk returns a tuple with the EnableAsmNucleiChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationExperimental) GetEnableAsmNucleiChecksOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAsmNucleiChecks) {
		return nil, false
	}
	return o.EnableAsmNucleiChecks, true
}

// HasEnableAsmNucleiChecks returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationExperimental) HasEnableAsmNucleiChecks() bool {
	if o != nil && !IsNil(o.EnableAsmNucleiChecks) {
		return true
	}

	return false
}

// SetEnableAsmNucleiChecks gets a reference to the given bool and assigns it to the EnableAsmNucleiChecks field.
func (o *ProfileDetailedConfigurationExperimental) SetEnableAsmNucleiChecks(v bool) {
	o.EnableAsmNucleiChecks = &v
}

func (o ProfileDetailedConfigurationExperimental) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationExperimental) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableWebappSurfaceScan) {
		toSerialize["enable_webapp_surface_scan"] = o.EnableWebappSurfaceScan
	}
	if !IsNil(o.EnableWebappExtractor) {
		toSerialize["enable_webapp_extractor"] = o.EnableWebappExtractor
	}
	if !IsNil(o.EnableAsmNucleiChecks) {
		toSerialize["enable_asm_nuclei_checks"] = o.EnableAsmNucleiChecks
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationExperimental) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationExperimental := _ProfileDetailedConfigurationExperimental{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationExperimental)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationExperimental(varProfileDetailedConfigurationExperimental)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable_webapp_surface_scan")
		delete(additionalProperties, "enable_webapp_extractor")
		delete(additionalProperties, "enable_asm_nuclei_checks")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationExperimental struct {
	value *ProfileDetailedConfigurationExperimental
	isSet bool
}

func (v NullableProfileDetailedConfigurationExperimental) Get() *ProfileDetailedConfigurationExperimental {
	return v.value
}

func (v *NullableProfileDetailedConfigurationExperimental) Set(val *ProfileDetailedConfigurationExperimental) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationExperimental) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationExperimental) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationExperimental(val *ProfileDetailedConfigurationExperimental) *NullableProfileDetailedConfigurationExperimental {
	return &NullableProfileDetailedConfigurationExperimental{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationExperimental) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationExperimental) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


