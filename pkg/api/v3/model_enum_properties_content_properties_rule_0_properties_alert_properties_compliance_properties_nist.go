/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST the model 'ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST'
type ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST string

// List of ENUM_PROPERTIES_CONTENT_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_COMPLIANCE_PROPERTIES_NIST
const (
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_123 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-123"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_161 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-161"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_190 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-190"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_207 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-207"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_40 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-40"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_41 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-41"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_44 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-44"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_52 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-52"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_53 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-53"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_63_B ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-63B"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_81_2 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-81-2"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_92 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-92"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST_SP800_95 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST = "SP800-95"
)

// All allowed values of ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST enum
var AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNISTEnumValues = []ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST{
	"SP800-123",
	"SP800-161",
	"SP800-190",
	"SP800-207",
	"SP800-40",
	"SP800-41",
	"SP800-44",
	"SP800-52",
	"SP800-53",
	"SP800-63B",
	"SP800-81-2",
	"SP800-92",
	"SP800-95",
}

func (v *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST(value)
	for _, existing := range AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNISTEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST", value)
}

// NewENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNISTFromValue returns a pointer to a valid ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNISTFromValue(v string) (*ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST, error) {
	ev := ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST: valid values are %v", v, AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNISTEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNISTEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONTENT_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_COMPLIANCE_PROPERTIES_NIST value
func (v ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) Ptr() *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST {
	return &v
}

type NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST struct {
	value *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST
	isSet bool
}

func (v NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) Get() *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST {
	return v.value
}

func (v *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) Set(val *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST(val *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST {
	return &NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESNIST) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

