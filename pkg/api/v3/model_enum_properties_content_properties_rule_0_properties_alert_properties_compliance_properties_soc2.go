/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 the model 'ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2'
type ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 string

// List of ENUM_PROPERTIES_CONTENT_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_COMPLIANCE_PROPERTIES_SOC2
const (
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2_CC1 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 = "CC1"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2_CC2 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 = "CC2"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2_CC4 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 = "CC4"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2_CC5 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 = "CC5"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2_CC6 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 = "CC6"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2_CC7 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 = "CC7"
	ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2_CC9 ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 = "CC9"
)

// All allowed values of ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 enum
var AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2EnumValues = []ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2{
	"CC1",
	"CC2",
	"CC4",
	"CC5",
	"CC6",
	"CC7",
	"CC9",
}

func (v *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2(value)
	for _, existing := range AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2", value)
}

// NewENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2FromValue returns a pointer to a valid ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2FromValue(v string) (*ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2, error) {
	ev := ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2: valid values are %v", v, AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONTENT_PROPERTIES_RULE_0_PROPERTIES_ALERT_PROPERTIES_COMPLIANCE_PROPERTIES_SOC2 value
func (v ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) Ptr() *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 {
	return &v
}

type NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 struct {
	value *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2
	isSet bool
}

func (v NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) Get() *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 {
	return v.value
}

func (v *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) Set(val *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2(val *ENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2 {
	return &NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONTENTPROPERTIESRULE0PROPERTIESALERTPROPERTIESCOMPLIANCEPROPERTIESSOC2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

