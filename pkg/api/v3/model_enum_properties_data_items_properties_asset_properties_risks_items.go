/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS the model 'ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS'
type ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS string

// List of ENUM_PROPERTIES_DATA_ITEMS_PROPERTIES_ASSET_PROPERTIES_RISKS_ITEMS
const (
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS_CRITICAL_FINDING ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS = "CRITICAL_FINDING"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS_EXPOSED ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS = "EXPOSED"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS_OPEN_SCHEMA ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS = "OPEN_SCHEMA"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS_PROD_ONLY_MODE ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS = "PROD_ONLY_MODE"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS_SENSITIVE_DATA ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS = "SENSITIVE_DATA"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS_UNAUTHENTICATED ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS = "UNAUTHENTICATED"
)

// All allowed values of ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS enum
var AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMSEnumValues = []ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS{
	"CRITICAL_FINDING",
	"EXPOSED",
	"OPEN_SCHEMA",
	"PROD_ONLY_MODE",
	"SENSITIVE_DATA",
	"UNAUTHENTICATED",
}

func (v *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS(value)
	for _, existing := range AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMSEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS", value)
}

// NewENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMSFromValue returns a pointer to a valid ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMSFromValue(v string) (*ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS, error) {
	ev := ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS: valid values are %v", v, AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMSEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMSEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_DATA_ITEMS_PROPERTIES_ASSET_PROPERTIES_RISKS_ITEMS value
func (v ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) Ptr() *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS {
	return &v
}

type NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS struct {
	value *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS
	isSet bool
}

func (v NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) Get() *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS {
	return v.value
}

func (v *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) Set(val *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS(val *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS {
	return &NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

