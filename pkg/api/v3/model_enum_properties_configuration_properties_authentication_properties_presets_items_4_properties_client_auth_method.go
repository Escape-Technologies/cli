/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD the model 'ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD'
type ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD string

// List of ENUM_PROPERTIES_CONFIGURATION_PROPERTIES_AUTHENTICATION_PROPERTIES_PRESETS_ITEMS_4_PROPERTIES_CLIENT_AUTH_METHOD
const (
	ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD_CLIENT_SECRET_BASIC ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD = "client_secret_basic"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD_CLIENT_SECRET_POST ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD = "client_secret_post"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD_NONE ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD = "none"
)

// All allowed values of ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD enum
var AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHODEnumValues = []ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD{
	"client_secret_basic",
	"client_secret_post",
	"none",
}

func (v *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD(value)
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHODEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD", value)
}

// NewENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHODFromValue returns a pointer to a valid ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHODFromValue(v string) (*ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD, error) {
	ev := ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD: valid values are %v", v, AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHODEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHODEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONFIGURATION_PROPERTIES_AUTHENTICATION_PROPERTIES_PRESETS_ITEMS_4_PROPERTIES_CLIENT_AUTH_METHOD value
func (v ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) Ptr() *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD {
	return &v
}

type NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD struct {
	value *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD
	isSet bool
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) Get() *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD {
	return v.value
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) Set(val *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD(val *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD {
	return &NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPRESETSITEMS4PROPERTIESCLIENTAUTHMETHOD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

