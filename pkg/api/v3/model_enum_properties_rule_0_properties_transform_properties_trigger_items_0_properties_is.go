/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS the model 'ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS'
type ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS string

// List of ENUM_PROPERTIES_RULE_0_PROPERTIES_TRANSFORM_PROPERTIES_TRIGGER_ITEMS_0_PROPERTIES_IS
const (
	ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS_GRAPHQL ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS = "GRAPHQL"
	ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS_REST ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS = "REST"
)

// All allowed values of ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS enum
var AllowedENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESISEnumValues = []ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS{
	"GRAPHQL",
	"REST",
}

func (v *ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS(value)
	for _, existing := range AllowedENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESISEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS", value)
}

// NewENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESISFromValue returns a pointer to a valid ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESISFromValue(v string) (*ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS, error) {
	ev := ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS: valid values are %v", v, AllowedENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESISEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESISEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_RULE_0_PROPERTIES_TRANSFORM_PROPERTIES_TRIGGER_ITEMS_0_PROPERTIES_IS value
func (v ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) Ptr() *ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS {
	return &v
}

type NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS struct {
	value *ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS
	isSet bool
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) Get() *ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS {
	return v.value
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) Set(val *ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS(val *ENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) *NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS {
	return &NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESRULE0PROPERTIESTRANSFORMPROPERTIESTRIGGERITEMS0PROPERTIESIS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

