/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ListProjects200ResponseDataInnerBindingsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProjects200ResponseDataInnerBindingsInner{}

// ListProjects200ResponseDataInnerBindingsInner struct for ListProjects200ResponseDataInnerBindingsInner
type ListProjects200ResponseDataInnerBindingsInner struct {
	// The id of the role binding
	Id string `json:"id"`
	// The date and time the role binding was created
	CreatedAt time.Time `json:"createdAt"`
	// The id of the role bound by the role binding
	RoleId string `json:"roleId"`
	// The id of the project bound by the role binding
	ProjectId *string `json:"projectId,omitempty"`
	// The id of the user bound by the role binding
	UserId string `json:"userId"`
	AdditionalProperties map[string]interface{}
}

type _ListProjects200ResponseDataInnerBindingsInner ListProjects200ResponseDataInnerBindingsInner

// NewListProjects200ResponseDataInnerBindingsInner instantiates a new ListProjects200ResponseDataInnerBindingsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProjects200ResponseDataInnerBindingsInner(id string, createdAt time.Time, roleId string, userId string) *ListProjects200ResponseDataInnerBindingsInner {
	this := ListProjects200ResponseDataInnerBindingsInner{}
	this.Id = id
	this.CreatedAt = createdAt
	this.RoleId = roleId
	this.UserId = userId
	return &this
}

// NewListProjects200ResponseDataInnerBindingsInnerWithDefaults instantiates a new ListProjects200ResponseDataInnerBindingsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProjects200ResponseDataInnerBindingsInnerWithDefaults() *ListProjects200ResponseDataInnerBindingsInner {
	this := ListProjects200ResponseDataInnerBindingsInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListProjects200ResponseDataInnerBindingsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListProjects200ResponseDataInnerBindingsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListProjects200ResponseDataInnerBindingsInner) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ListProjects200ResponseDataInnerBindingsInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ListProjects200ResponseDataInnerBindingsInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ListProjects200ResponseDataInnerBindingsInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetRoleId returns the RoleId field value
func (o *ListProjects200ResponseDataInnerBindingsInner) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *ListProjects200ResponseDataInnerBindingsInner) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *ListProjects200ResponseDataInnerBindingsInner) SetRoleId(v string) {
	o.RoleId = v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ListProjects200ResponseDataInnerBindingsInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjects200ResponseDataInnerBindingsInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ListProjects200ResponseDataInnerBindingsInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ListProjects200ResponseDataInnerBindingsInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetUserId returns the UserId field value
func (o *ListProjects200ResponseDataInnerBindingsInner) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ListProjects200ResponseDataInnerBindingsInner) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ListProjects200ResponseDataInnerBindingsInner) SetUserId(v string) {
	o.UserId = v
}

func (o ListProjects200ResponseDataInnerBindingsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProjects200ResponseDataInnerBindingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["roleId"] = o.RoleId
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	toSerialize["userId"] = o.UserId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListProjects200ResponseDataInnerBindingsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
		"roleId",
		"userId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListProjects200ResponseDataInnerBindingsInner := _ListProjects200ResponseDataInnerBindingsInner{}

	err = json.Unmarshal(data, &varListProjects200ResponseDataInnerBindingsInner)

	if err != nil {
		return err
	}

	*o = ListProjects200ResponseDataInnerBindingsInner(varListProjects200ResponseDataInnerBindingsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "roleId")
		delete(additionalProperties, "projectId")
		delete(additionalProperties, "userId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListProjects200ResponseDataInnerBindingsInner struct {
	value *ListProjects200ResponseDataInnerBindingsInner
	isSet bool
}

func (v NullableListProjects200ResponseDataInnerBindingsInner) Get() *ListProjects200ResponseDataInnerBindingsInner {
	return v.value
}

func (v *NullableListProjects200ResponseDataInnerBindingsInner) Set(val *ListProjects200ResponseDataInnerBindingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListProjects200ResponseDataInnerBindingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListProjects200ResponseDataInnerBindingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProjects200ResponseDataInnerBindingsInner(val *ListProjects200ResponseDataInnerBindingsInner) *NullableListProjects200ResponseDataInnerBindingsInner {
	return &NullableListProjects200ResponseDataInnerBindingsInner{value: val, isSet: true}
}

func (v NullableListProjects200ResponseDataInnerBindingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProjects200ResponseDataInnerBindingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


