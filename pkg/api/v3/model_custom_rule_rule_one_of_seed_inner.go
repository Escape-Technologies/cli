/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CustomRuleRuleOneOfSeedInner - struct for CustomRuleRuleOneOfSeedInner
type CustomRuleRuleOneOfSeedInner struct {
	CustomRuleRuleOneOfSeedInnerOneOf *CustomRuleRuleOneOfSeedInnerOneOf
	CustomRuleRuleOneOfSeedInnerOneOf1 *CustomRuleRuleOneOfSeedInnerOneOf1
	CustomRuleRuleOneOfSeedInnerOneOf2 *CustomRuleRuleOneOfSeedInnerOneOf2
}

// CustomRuleRuleOneOfSeedInnerOneOfAsCustomRuleRuleOneOfSeedInner is a convenience function that returns CustomRuleRuleOneOfSeedInnerOneOf wrapped in CustomRuleRuleOneOfSeedInner
func CustomRuleRuleOneOfSeedInnerOneOfAsCustomRuleRuleOneOfSeedInner(v *CustomRuleRuleOneOfSeedInnerOneOf) CustomRuleRuleOneOfSeedInner {
	return CustomRuleRuleOneOfSeedInner{
		CustomRuleRuleOneOfSeedInnerOneOf: v,
	}
}

// CustomRuleRuleOneOfSeedInnerOneOf1AsCustomRuleRuleOneOfSeedInner is a convenience function that returns CustomRuleRuleOneOfSeedInnerOneOf1 wrapped in CustomRuleRuleOneOfSeedInner
func CustomRuleRuleOneOfSeedInnerOneOf1AsCustomRuleRuleOneOfSeedInner(v *CustomRuleRuleOneOfSeedInnerOneOf1) CustomRuleRuleOneOfSeedInner {
	return CustomRuleRuleOneOfSeedInner{
		CustomRuleRuleOneOfSeedInnerOneOf1: v,
	}
}

// CustomRuleRuleOneOfSeedInnerOneOf2AsCustomRuleRuleOneOfSeedInner is a convenience function that returns CustomRuleRuleOneOfSeedInnerOneOf2 wrapped in CustomRuleRuleOneOfSeedInner
func CustomRuleRuleOneOfSeedInnerOneOf2AsCustomRuleRuleOneOfSeedInner(v *CustomRuleRuleOneOfSeedInnerOneOf2) CustomRuleRuleOneOfSeedInner {
	return CustomRuleRuleOneOfSeedInner{
		CustomRuleRuleOneOfSeedInnerOneOf2: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CustomRuleRuleOneOfSeedInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CustomRuleRuleOneOfSeedInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfSeedInnerOneOf)
	if err == nil {
		jsonCustomRuleRuleOneOfSeedInnerOneOf, _ := json.Marshal(dst.CustomRuleRuleOneOfSeedInnerOneOf)
		if string(jsonCustomRuleRuleOneOfSeedInnerOneOf) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfSeedInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfSeedInnerOneOf); err != nil {
				dst.CustomRuleRuleOneOfSeedInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfSeedInnerOneOf = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfSeedInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfSeedInnerOneOf1)
	if err == nil {
		jsonCustomRuleRuleOneOfSeedInnerOneOf1, _ := json.Marshal(dst.CustomRuleRuleOneOfSeedInnerOneOf1)
		if string(jsonCustomRuleRuleOneOfSeedInnerOneOf1) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfSeedInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfSeedInnerOneOf1); err != nil {
				dst.CustomRuleRuleOneOfSeedInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfSeedInnerOneOf1 = nil
	}

	// try to unmarshal data into CustomRuleRuleOneOfSeedInnerOneOf2
	err = newStrictDecoder(data).Decode(&dst.CustomRuleRuleOneOfSeedInnerOneOf2)
	if err == nil {
		jsonCustomRuleRuleOneOfSeedInnerOneOf2, _ := json.Marshal(dst.CustomRuleRuleOneOfSeedInnerOneOf2)
		if string(jsonCustomRuleRuleOneOfSeedInnerOneOf2) == "{}" { // empty struct
			dst.CustomRuleRuleOneOfSeedInnerOneOf2 = nil
		} else {
			if err = validator.Validate(dst.CustomRuleRuleOneOfSeedInnerOneOf2); err != nil {
				dst.CustomRuleRuleOneOfSeedInnerOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CustomRuleRuleOneOfSeedInnerOneOf2 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CustomRuleRuleOneOfSeedInnerOneOf = nil
		dst.CustomRuleRuleOneOfSeedInnerOneOf1 = nil
		dst.CustomRuleRuleOneOfSeedInnerOneOf2 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CustomRuleRuleOneOfSeedInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CustomRuleRuleOneOfSeedInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CustomRuleRuleOneOfSeedInner) MarshalJSON() ([]byte, error) {
	if src.CustomRuleRuleOneOfSeedInnerOneOf != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfSeedInnerOneOf)
	}

	if src.CustomRuleRuleOneOfSeedInnerOneOf1 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfSeedInnerOneOf1)
	}

	if src.CustomRuleRuleOneOfSeedInnerOneOf2 != nil {
		return json.Marshal(&src.CustomRuleRuleOneOfSeedInnerOneOf2)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CustomRuleRuleOneOfSeedInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CustomRuleRuleOneOfSeedInnerOneOf != nil {
		return obj.CustomRuleRuleOneOfSeedInnerOneOf
	}

	if obj.CustomRuleRuleOneOfSeedInnerOneOf1 != nil {
		return obj.CustomRuleRuleOneOfSeedInnerOneOf1
	}

	if obj.CustomRuleRuleOneOfSeedInnerOneOf2 != nil {
		return obj.CustomRuleRuleOneOfSeedInnerOneOf2
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CustomRuleRuleOneOfSeedInner) GetActualInstanceValue() (interface{}) {
	if obj.CustomRuleRuleOneOfSeedInnerOneOf != nil {
		return *obj.CustomRuleRuleOneOfSeedInnerOneOf
	}

	if obj.CustomRuleRuleOneOfSeedInnerOneOf1 != nil {
		return *obj.CustomRuleRuleOneOfSeedInnerOneOf1
	}

	if obj.CustomRuleRuleOneOfSeedInnerOneOf2 != nil {
		return *obj.CustomRuleRuleOneOfSeedInnerOneOf2
	}

	// all schemas are nil
	return nil
}

type NullableCustomRuleRuleOneOfSeedInner struct {
	value *CustomRuleRuleOneOfSeedInner
	isSet bool
}

func (v NullableCustomRuleRuleOneOfSeedInner) Get() *CustomRuleRuleOneOfSeedInner {
	return v.value
}

func (v *NullableCustomRuleRuleOneOfSeedInner) Set(val *CustomRuleRuleOneOfSeedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRuleRuleOneOfSeedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRuleRuleOneOfSeedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRuleRuleOneOfSeedInner(val *CustomRuleRuleOneOfSeedInner) *NullableCustomRuleRuleOneOfSeedInner {
	return &NullableCustomRuleRuleOneOfSeedInner{value: val, isSet: true}
}

func (v NullableCustomRuleRuleOneOfSeedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRuleRuleOneOfSeedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


