/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAssetPOSTMANORGANIZATIONRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetPOSTMANORGANIZATIONRequest{}

// CreateAssetPOSTMANORGANIZATIONRequest struct for CreateAssetPOSTMANORGANIZATIONRequest
type CreateAssetPOSTMANORGANIZATIONRequest struct {
	AssetClass ENUMDEVTOOLS `json:"asset_class"`
	AssetType ENUMPOSTMANORGANIZATION `json:"asset_type"`
	Name *string `json:"name,omitempty"`
	ApiKey string `json:"api_key"`
	AdditionalProperties map[string]interface{}
}

type _CreateAssetPOSTMANORGANIZATIONRequest CreateAssetPOSTMANORGANIZATIONRequest

// NewCreateAssetPOSTMANORGANIZATIONRequest instantiates a new CreateAssetPOSTMANORGANIZATIONRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetPOSTMANORGANIZATIONRequest(assetClass ENUMDEVTOOLS, assetType ENUMPOSTMANORGANIZATION, apiKey string) *CreateAssetPOSTMANORGANIZATIONRequest {
	this := CreateAssetPOSTMANORGANIZATIONRequest{}
	this.AssetClass = assetClass
	this.AssetType = assetType
	this.ApiKey = apiKey
	return &this
}

// NewCreateAssetPOSTMANORGANIZATIONRequestWithDefaults instantiates a new CreateAssetPOSTMANORGANIZATIONRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetPOSTMANORGANIZATIONRequestWithDefaults() *CreateAssetPOSTMANORGANIZATIONRequest {
	this := CreateAssetPOSTMANORGANIZATIONRequest{}
	return &this
}

// GetAssetClass returns the AssetClass field value
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetAssetClass() ENUMDEVTOOLS {
	if o == nil {
		var ret ENUMDEVTOOLS
		return ret
	}

	return o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value
// and a boolean to check if the value has been set.
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetAssetClassOk() (*ENUMDEVTOOLS, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetClass, true
}

// SetAssetClass sets field value
func (o *CreateAssetPOSTMANORGANIZATIONRequest) SetAssetClass(v ENUMDEVTOOLS) {
	o.AssetClass = v
}

// GetAssetType returns the AssetType field value
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetAssetType() ENUMPOSTMANORGANIZATION {
	if o == nil {
		var ret ENUMPOSTMANORGANIZATION
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetAssetTypeOk() (*ENUMPOSTMANORGANIZATION, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *CreateAssetPOSTMANORGANIZATIONRequest) SetAssetType(v ENUMPOSTMANORGANIZATION) {
	o.AssetType = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateAssetPOSTMANORGANIZATIONRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateAssetPOSTMANORGANIZATIONRequest) SetName(v string) {
	o.Name = &v
}

// GetApiKey returns the ApiKey field value
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *CreateAssetPOSTMANORGANIZATIONRequest) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *CreateAssetPOSTMANORGANIZATIONRequest) SetApiKey(v string) {
	o.ApiKey = v
}

func (o CreateAssetPOSTMANORGANIZATIONRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetPOSTMANORGANIZATIONRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_class"] = o.AssetClass
	toSerialize["asset_type"] = o.AssetType
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["api_key"] = o.ApiKey

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAssetPOSTMANORGANIZATIONRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_class",
		"asset_type",
		"api_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetPOSTMANORGANIZATIONRequest := _CreateAssetPOSTMANORGANIZATIONRequest{}

	err = json.Unmarshal(data, &varCreateAssetPOSTMANORGANIZATIONRequest)

	if err != nil {
		return err
	}

	*o = CreateAssetPOSTMANORGANIZATIONRequest(varCreateAssetPOSTMANORGANIZATIONRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asset_class")
		delete(additionalProperties, "asset_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "api_key")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAssetPOSTMANORGANIZATIONRequest struct {
	value *CreateAssetPOSTMANORGANIZATIONRequest
	isSet bool
}

func (v NullableCreateAssetPOSTMANORGANIZATIONRequest) Get() *CreateAssetPOSTMANORGANIZATIONRequest {
	return v.value
}

func (v *NullableCreateAssetPOSTMANORGANIZATIONRequest) Set(val *CreateAssetPOSTMANORGANIZATIONRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetPOSTMANORGANIZATIONRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetPOSTMANORGANIZATIONRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetPOSTMANORGANIZATIONRequest(val *CreateAssetPOSTMANORGANIZATIONRequest) *NullableCreateAssetPOSTMANORGANIZATIONRequest {
	return &NullableCreateAssetPOSTMANORGANIZATIONRequest{value: val, isSet: true}
}

func (v NullableCreateAssetPOSTMANORGANIZATIONRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetPOSTMANORGANIZATIONRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


