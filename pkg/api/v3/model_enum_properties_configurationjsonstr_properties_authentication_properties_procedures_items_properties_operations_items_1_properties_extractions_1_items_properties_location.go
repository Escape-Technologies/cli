/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION the model 'ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION'
type ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION string

// List of ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_AUTHENTICATION_PROPERTIES_PROCEDURES_ITEMS_PROPERTIES_OPERATIONS_ITEMS_1_PROPERTIES_EXTRACTIONS_1_ITEMS_PROPERTIES_LOCATION
const (
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_PAGE                    ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "page"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_BROWSER_LOCAL_STORAGE   ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "browser_local_storage"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_BROWSER_SESSION_STORAGE ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "browser_session_storage"
	ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_BROWSER_COOKIES         ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "browser_cookies"
)

// All allowed values of ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION enum
var AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues = []ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION{
	"page",
	"browser_local_storage",
	"browser_session_storage",
	"browser_cookies",
}

func (v *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION(value)
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION", value)
}

// NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONFromValue returns a pointer to a valid ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONFromValue(v string) (*ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION, error) {
	ev := ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION: valid values are %v", v, AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONFIGURATIONJSONSTR_PROPERTIES_AUTHENTICATION_PROPERTIES_PROCEDURES_ITEMS_PROPERTIES_OPERATIONS_ITEMS_1_PROPERTIES_EXTRACTIONS_1_ITEMS_PROPERTIES_LOCATION value
func (v ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Ptr() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION {
	return &v
}

type NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION struct {
	value *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION
	isSet bool
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Get() *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION {
	return v.value
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Set(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION(val *ENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION {
	return &NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONFIGURATIONJSONSTRPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
