/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the AttachmentDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentDetailed{}

// AttachmentDetailed Detailed information about an attachment
type AttachmentDetailed struct {
	// The id of the attachment
	Id string `json:"id"`
	// The date and time the attachment was created
	CreatedAt string `json:"createdAt"`
	Exchange *ExchangeDetailed `json:"exchange,omitempty"`
	GeneratedOpenapiSpec *GeneratedOpenapiSpecDetailed `json:"generatedOpenapiSpec,omitempty"`
	Graph *GraphDetailed `json:"graph,omitempty"`
	Screenshot *ScreenshotDetailed `json:"screenshot,omitempty"`
	Snippet *SnippetDetailed `json:"snippet,omitempty"`
	Target *TargetDetailed `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AttachmentDetailed AttachmentDetailed

// NewAttachmentDetailed instantiates a new AttachmentDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentDetailed(id string, createdAt string) *AttachmentDetailed {
	this := AttachmentDetailed{}
	this.Id = id
	this.CreatedAt = createdAt
	return &this
}

// NewAttachmentDetailedWithDefaults instantiates a new AttachmentDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentDetailedWithDefaults() *AttachmentDetailed {
	this := AttachmentDetailed{}
	return &this
}

// GetId returns the Id field value
func (o *AttachmentDetailed) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AttachmentDetailed) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AttachmentDetailed) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AttachmentDetailed) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *AttachmentDetailed) GetExchange() ExchangeDetailed {
	if o == nil || IsNil(o.Exchange) {
		var ret ExchangeDetailed
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetExchangeOk() (*ExchangeDetailed, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *AttachmentDetailed) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given ExchangeDetailed and assigns it to the Exchange field.
func (o *AttachmentDetailed) SetExchange(v ExchangeDetailed) {
	o.Exchange = &v
}

// GetGeneratedOpenapiSpec returns the GeneratedOpenapiSpec field value if set, zero value otherwise.
func (o *AttachmentDetailed) GetGeneratedOpenapiSpec() GeneratedOpenapiSpecDetailed {
	if o == nil || IsNil(o.GeneratedOpenapiSpec) {
		var ret GeneratedOpenapiSpecDetailed
		return ret
	}
	return *o.GeneratedOpenapiSpec
}

// GetGeneratedOpenapiSpecOk returns a tuple with the GeneratedOpenapiSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetGeneratedOpenapiSpecOk() (*GeneratedOpenapiSpecDetailed, bool) {
	if o == nil || IsNil(o.GeneratedOpenapiSpec) {
		return nil, false
	}
	return o.GeneratedOpenapiSpec, true
}

// HasGeneratedOpenapiSpec returns a boolean if a field has been set.
func (o *AttachmentDetailed) HasGeneratedOpenapiSpec() bool {
	if o != nil && !IsNil(o.GeneratedOpenapiSpec) {
		return true
	}

	return false
}

// SetGeneratedOpenapiSpec gets a reference to the given GeneratedOpenapiSpecDetailed and assigns it to the GeneratedOpenapiSpec field.
func (o *AttachmentDetailed) SetGeneratedOpenapiSpec(v GeneratedOpenapiSpecDetailed) {
	o.GeneratedOpenapiSpec = &v
}

// GetGraph returns the Graph field value if set, zero value otherwise.
func (o *AttachmentDetailed) GetGraph() GraphDetailed {
	if o == nil || IsNil(o.Graph) {
		var ret GraphDetailed
		return ret
	}
	return *o.Graph
}

// GetGraphOk returns a tuple with the Graph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetGraphOk() (*GraphDetailed, bool) {
	if o == nil || IsNil(o.Graph) {
		return nil, false
	}
	return o.Graph, true
}

// HasGraph returns a boolean if a field has been set.
func (o *AttachmentDetailed) HasGraph() bool {
	if o != nil && !IsNil(o.Graph) {
		return true
	}

	return false
}

// SetGraph gets a reference to the given GraphDetailed and assigns it to the Graph field.
func (o *AttachmentDetailed) SetGraph(v GraphDetailed) {
	o.Graph = &v
}

// GetScreenshot returns the Screenshot field value if set, zero value otherwise.
func (o *AttachmentDetailed) GetScreenshot() ScreenshotDetailed {
	if o == nil || IsNil(o.Screenshot) {
		var ret ScreenshotDetailed
		return ret
	}
	return *o.Screenshot
}

// GetScreenshotOk returns a tuple with the Screenshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetScreenshotOk() (*ScreenshotDetailed, bool) {
	if o == nil || IsNil(o.Screenshot) {
		return nil, false
	}
	return o.Screenshot, true
}

// HasScreenshot returns a boolean if a field has been set.
func (o *AttachmentDetailed) HasScreenshot() bool {
	if o != nil && !IsNil(o.Screenshot) {
		return true
	}

	return false
}

// SetScreenshot gets a reference to the given ScreenshotDetailed and assigns it to the Screenshot field.
func (o *AttachmentDetailed) SetScreenshot(v ScreenshotDetailed) {
	o.Screenshot = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *AttachmentDetailed) GetSnippet() SnippetDetailed {
	if o == nil || IsNil(o.Snippet) {
		var ret SnippetDetailed
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetSnippetOk() (*SnippetDetailed, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *AttachmentDetailed) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given SnippetDetailed and assigns it to the Snippet field.
func (o *AttachmentDetailed) SetSnippet(v SnippetDetailed) {
	o.Snippet = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *AttachmentDetailed) GetTarget() TargetDetailed {
	if o == nil || IsNil(o.Target) {
		var ret TargetDetailed
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetailed) GetTargetOk() (*TargetDetailed, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *AttachmentDetailed) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given TargetDetailed and assigns it to the Target field.
func (o *AttachmentDetailed) SetTarget(v TargetDetailed) {
	o.Target = &v
}

func (o AttachmentDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.GeneratedOpenapiSpec) {
		toSerialize["generatedOpenapiSpec"] = o.GeneratedOpenapiSpec
	}
	if !IsNil(o.Graph) {
		toSerialize["graph"] = o.Graph
	}
	if !IsNil(o.Screenshot) {
		toSerialize["screenshot"] = o.Screenshot
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AttachmentDetailed) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttachmentDetailed := _AttachmentDetailed{}

	err = json.Unmarshal(data, &varAttachmentDetailed)

	if err != nil {
		return err
	}

	*o = AttachmentDetailed(varAttachmentDetailed)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "exchange")
		delete(additionalProperties, "generatedOpenapiSpec")
		delete(additionalProperties, "graph")
		delete(additionalProperties, "screenshot")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAttachmentDetailed struct {
	value *AttachmentDetailed
	isSet bool
}

func (v NullableAttachmentDetailed) Get() *AttachmentDetailed {
	return v.value
}

func (v *NullableAttachmentDetailed) Set(val *AttachmentDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentDetailed(val *AttachmentDetailed) *NullableAttachmentDetailed {
	return &NullableAttachmentDetailed{value: val, isSet: true}
}

func (v NullableAttachmentDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


