/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationSecurityTestsPrivateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationSecurityTestsPrivateData{}

// ProfileDetailedConfigurationSecurityTestsPrivateData struct for ProfileDetailedConfigurationSecurityTestsPrivateData
type ProfileDetailedConfigurationSecurityTestsPrivateData struct {
	Skip *bool `json:"skip,omitempty"`
	AssetsAllowed []ENUMPROPERTIESCONFIGURATIONPROPERTIESSECURITYTESTSPROPERTIESHIGHNUMBEROFCUSTOMSCALARSPROPERTIESASSETSALLOWEDITEMS `json:"assets_allowed,omitempty"`
	Users map[string][]string `json:"users,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationSecurityTestsPrivateData ProfileDetailedConfigurationSecurityTestsPrivateData

// NewProfileDetailedConfigurationSecurityTestsPrivateData instantiates a new ProfileDetailedConfigurationSecurityTestsPrivateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationSecurityTestsPrivateData() *ProfileDetailedConfigurationSecurityTestsPrivateData {
	this := ProfileDetailedConfigurationSecurityTestsPrivateData{}
	return &this
}

// NewProfileDetailedConfigurationSecurityTestsPrivateDataWithDefaults instantiates a new ProfileDetailedConfigurationSecurityTestsPrivateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationSecurityTestsPrivateDataWithDefaults() *ProfileDetailedConfigurationSecurityTestsPrivateData {
	this := ProfileDetailedConfigurationSecurityTestsPrivateData{}
	return &this
}

// GetSkip returns the Skip field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) GetSkip() bool {
	if o == nil || IsNil(o.Skip) {
		var ret bool
		return ret
	}
	return *o.Skip
}

// GetSkipOk returns a tuple with the Skip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) GetSkipOk() (*bool, bool) {
	if o == nil || IsNil(o.Skip) {
		return nil, false
	}
	return o.Skip, true
}

// HasSkip returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) HasSkip() bool {
	if o != nil && !IsNil(o.Skip) {
		return true
	}

	return false
}

// SetSkip gets a reference to the given bool and assigns it to the Skip field.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) SetSkip(v bool) {
	o.Skip = &v
}

// GetAssetsAllowed returns the AssetsAllowed field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) GetAssetsAllowed() []ENUMPROPERTIESCONFIGURATIONPROPERTIESSECURITYTESTSPROPERTIESHIGHNUMBEROFCUSTOMSCALARSPROPERTIESASSETSALLOWEDITEMS {
	if o == nil || IsNil(o.AssetsAllowed) {
		var ret []ENUMPROPERTIESCONFIGURATIONPROPERTIESSECURITYTESTSPROPERTIESHIGHNUMBEROFCUSTOMSCALARSPROPERTIESASSETSALLOWEDITEMS
		return ret
	}
	return o.AssetsAllowed
}

// GetAssetsAllowedOk returns a tuple with the AssetsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) GetAssetsAllowedOk() ([]ENUMPROPERTIESCONFIGURATIONPROPERTIESSECURITYTESTSPROPERTIESHIGHNUMBEROFCUSTOMSCALARSPROPERTIESASSETSALLOWEDITEMS, bool) {
	if o == nil || IsNil(o.AssetsAllowed) {
		return nil, false
	}
	return o.AssetsAllowed, true
}

// HasAssetsAllowed returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) HasAssetsAllowed() bool {
	if o != nil && !IsNil(o.AssetsAllowed) {
		return true
	}

	return false
}

// SetAssetsAllowed gets a reference to the given []ENUMPROPERTIESCONFIGURATIONPROPERTIESSECURITYTESTSPROPERTIESHIGHNUMBEROFCUSTOMSCALARSPROPERTIESASSETSALLOWEDITEMS and assigns it to the AssetsAllowed field.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) SetAssetsAllowed(v []ENUMPROPERTIESCONFIGURATIONPROPERTIESSECURITYTESTSPROPERTIESHIGHNUMBEROFCUSTOMSCALARSPROPERTIESASSETSALLOWEDITEMS) {
	o.AssetsAllowed = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) GetUsers() map[string][]string {
	if o == nil || IsNil(o.Users) {
		var ret map[string][]string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) GetUsersOk() (map[string][]string, bool) {
	if o == nil || IsNil(o.Users) {
		return map[string][]string{}, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given map[string][]string and assigns it to the Users field.
func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) SetUsers(v map[string][]string) {
	o.Users = v
}

func (o ProfileDetailedConfigurationSecurityTestsPrivateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationSecurityTestsPrivateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Skip) {
		toSerialize["skip"] = o.Skip
	}
	if !IsNil(o.AssetsAllowed) {
		toSerialize["assets_allowed"] = o.AssetsAllowed
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationSecurityTestsPrivateData) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationSecurityTestsPrivateData := _ProfileDetailedConfigurationSecurityTestsPrivateData{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationSecurityTestsPrivateData)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationSecurityTestsPrivateData(varProfileDetailedConfigurationSecurityTestsPrivateData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "skip")
		delete(additionalProperties, "assets_allowed")
		delete(additionalProperties, "users")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationSecurityTestsPrivateData struct {
	value *ProfileDetailedConfigurationSecurityTestsPrivateData
	isSet bool
}

func (v NullableProfileDetailedConfigurationSecurityTestsPrivateData) Get() *ProfileDetailedConfigurationSecurityTestsPrivateData {
	return v.value
}

func (v *NullableProfileDetailedConfigurationSecurityTestsPrivateData) Set(val *ProfileDetailedConfigurationSecurityTestsPrivateData) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationSecurityTestsPrivateData) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationSecurityTestsPrivateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationSecurityTestsPrivateData(val *ProfileDetailedConfigurationSecurityTestsPrivateData) *NullableProfileDetailedConfigurationSecurityTestsPrivateData {
	return &NullableProfileDetailedConfigurationSecurityTestsPrivateData{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationSecurityTestsPrivateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationSecurityTestsPrivateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


