/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the UpdateIssueRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIssueRequest{}

// UpdateIssueRequest struct for UpdateIssueRequest
type UpdateIssueRequest struct {
	Status *EnumA1f51229f2b334ae6e9ff63b66c5a598 `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateIssueRequest UpdateIssueRequest

// NewUpdateIssueRequest instantiates a new UpdateIssueRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIssueRequest() *UpdateIssueRequest {
	this := UpdateIssueRequest{}
	return &this
}

// NewUpdateIssueRequestWithDefaults instantiates a new UpdateIssueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIssueRequestWithDefaults() *UpdateIssueRequest {
	this := UpdateIssueRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateIssueRequest) GetStatus() EnumA1f51229f2b334ae6e9ff63b66c5a598 {
	if o == nil || IsNil(o.Status) {
		var ret EnumA1f51229f2b334ae6e9ff63b66c5a598
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssueRequest) GetStatusOk() (*EnumA1f51229f2b334ae6e9ff63b66c5a598, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateIssueRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given EnumA1f51229f2b334ae6e9ff63b66c5a598 and assigns it to the Status field.
func (o *UpdateIssueRequest) SetStatus(v EnumA1f51229f2b334ae6e9ff63b66c5a598) {
	o.Status = &v
}

func (o UpdateIssueRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIssueRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateIssueRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateIssueRequest := _UpdateIssueRequest{}

	err = json.Unmarshal(data, &varUpdateIssueRequest)

	if err != nil {
		return err
	}

	*o = UpdateIssueRequest(varUpdateIssueRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateIssueRequest struct {
	value *UpdateIssueRequest
	isSet bool
}

func (v NullableUpdateIssueRequest) Get() *UpdateIssueRequest {
	return v.value
}

func (v *NullableUpdateIssueRequest) Set(val *UpdateIssueRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIssueRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIssueRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIssueRequest(val *UpdateIssueRequest) *NullableUpdateIssueRequest {
	return &NullableUpdateIssueRequest{value: val, isSet: true}
}

func (v NullableUpdateIssueRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIssueRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


