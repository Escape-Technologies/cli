/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION the model 'ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION'
type ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION string

// List of ENUM_PROPERTIES_CONFIGURATION_PROPERTIES_AUTHENTICATION_PROPERTIES_PROCEDURES_ITEMS_PROPERTIES_OPERATIONS_ITEMS_1_PROPERTIES_EXTRACTIONS_1_ITEMS_PROPERTIES_LOCATION
const (
	ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_BROWSER_COOKIES ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "browser_cookies"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_BROWSER_LOCAL_STORAGE ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "browser_local_storage"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_BROWSER_SESSION_STORAGE ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "browser_session_storage"
	ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION_PAGE ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION = "page"
)

// All allowed values of ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION enum
var AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues = []ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION{
	"browser_cookies",
	"browser_local_storage",
	"browser_session_storage",
	"page",
}

func (v *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION(value)
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION", value)
}

// NewENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONFromValue returns a pointer to a valid ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONFromValue(v string) (*ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION, error) {
	ev := ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION: valid values are %v", v, AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATIONEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_CONFIGURATION_PROPERTIES_AUTHENTICATION_PROPERTIES_PROCEDURES_ITEMS_PROPERTIES_OPERATIONS_ITEMS_1_PROPERTIES_EXTRACTIONS_1_ITEMS_PROPERTIES_LOCATION value
func (v ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Ptr() *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION {
	return &v
}

type NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION struct {
	value *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION
	isSet bool
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Get() *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION {
	return v.value
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Set(val *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION(val *ENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION {
	return &NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESCONFIGURATIONPROPERTIESAUTHENTICATIONPROPERTIESPROCEDURESITEMSPROPERTIESOPERATIONSITEMS1PROPERTIESEXTRACTIONS1ITEMSPROPERTIESLOCATION) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

