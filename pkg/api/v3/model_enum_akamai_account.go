/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMAKAMAIACCOUNT the model 'ENUMAKAMAIACCOUNT'
type ENUMAKAMAIACCOUNT string

// List of ENUM_AKAMAI_ACCOUNT
const (
	ENUMAKAMAIACCOUNT_AKAMAI_ACCOUNT ENUMAKAMAIACCOUNT = "AKAMAI_ACCOUNT"
)

// All allowed values of ENUMAKAMAIACCOUNT enum
var AllowedENUMAKAMAIACCOUNTEnumValues = []ENUMAKAMAIACCOUNT{
	"AKAMAI_ACCOUNT",
}

func (v *ENUMAKAMAIACCOUNT) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMAKAMAIACCOUNT(value)
	for _, existing := range AllowedENUMAKAMAIACCOUNTEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMAKAMAIACCOUNT", value)
}

// NewENUMAKAMAIACCOUNTFromValue returns a pointer to a valid ENUMAKAMAIACCOUNT
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMAKAMAIACCOUNTFromValue(v string) (*ENUMAKAMAIACCOUNT, error) {
	ev := ENUMAKAMAIACCOUNT(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMAKAMAIACCOUNT: valid values are %v", v, AllowedENUMAKAMAIACCOUNTEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMAKAMAIACCOUNT) IsValid() bool {
	for _, existing := range AllowedENUMAKAMAIACCOUNTEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_AKAMAI_ACCOUNT value
func (v ENUMAKAMAIACCOUNT) Ptr() *ENUMAKAMAIACCOUNT {
	return &v
}

type NullableENUMAKAMAIACCOUNT struct {
	value *ENUMAKAMAIACCOUNT
	isSet bool
}

func (v NullableENUMAKAMAIACCOUNT) Get() *ENUMAKAMAIACCOUNT {
	return v.value
}

func (v *NullableENUMAKAMAIACCOUNT) Set(val *ENUMAKAMAIACCOUNT) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMAKAMAIACCOUNT) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMAKAMAIACCOUNT) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMAKAMAIACCOUNT(val *ENUMAKAMAIACCOUNT) *NullableENUMAKAMAIACCOUNT {
	return &NullableENUMAKAMAIACCOUNT{value: val, isSet: true}
}

func (v NullableENUMAKAMAIACCOUNT) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMAKAMAIACCOUNT) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

