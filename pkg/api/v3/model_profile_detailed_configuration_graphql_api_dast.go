/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationGraphqlApiDast type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationGraphqlApiDast{}

// ProfileDetailedConfigurationGraphqlApiDast struct for ProfileDetailedConfigurationGraphqlApiDast
type ProfileDetailedConfigurationGraphqlApiDast struct {
	SchemaS3Key *string `json:"schema_s3_key,omitempty"`
	LocationId *string `json:"location_id,omitempty"`
	Profile *ENUMPROPERTIESCONFIGURATIONPROPERTIESGRAPHQLAPIDASTPROPERTIESPROFILE `json:"profile,omitempty"`
	Mode *ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESMODE `json:"mode,omitempty"`
	MaxDuration *float32 `json:"max_duration,omitempty"`
	MaxGeneratedDepth *float32 `json:"max_generated_depth,omitempty"`
	NoOperationName *bool `json:"no_operation_name,omitempty"`
	Hotstart []string `json:"hotstart,omitempty"`
	HotstartOnly *bool `json:"hotstart_only,omitempty"`
	Blocklist *ProfileDetailedConfigurationGraphqlApiDastBlocklist `json:"blocklist,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationGraphqlApiDast ProfileDetailedConfigurationGraphqlApiDast

// NewProfileDetailedConfigurationGraphqlApiDast instantiates a new ProfileDetailedConfigurationGraphqlApiDast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationGraphqlApiDast() *ProfileDetailedConfigurationGraphqlApiDast {
	this := ProfileDetailedConfigurationGraphqlApiDast{}
	return &this
}

// NewProfileDetailedConfigurationGraphqlApiDastWithDefaults instantiates a new ProfileDetailedConfigurationGraphqlApiDast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationGraphqlApiDastWithDefaults() *ProfileDetailedConfigurationGraphqlApiDast {
	this := ProfileDetailedConfigurationGraphqlApiDast{}
	return &this
}

// GetSchemaS3Key returns the SchemaS3Key field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetSchemaS3Key() string {
	if o == nil || IsNil(o.SchemaS3Key) {
		var ret string
		return ret
	}
	return *o.SchemaS3Key
}

// GetSchemaS3KeyOk returns a tuple with the SchemaS3Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetSchemaS3KeyOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaS3Key) {
		return nil, false
	}
	return o.SchemaS3Key, true
}

// HasSchemaS3Key returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasSchemaS3Key() bool {
	if o != nil && !IsNil(o.SchemaS3Key) {
		return true
	}

	return false
}

// SetSchemaS3Key gets a reference to the given string and assigns it to the SchemaS3Key field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetSchemaS3Key(v string) {
	o.SchemaS3Key = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetLocationId() string {
	if o == nil || IsNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetLocationId(v string) {
	o.LocationId = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetProfile() ENUMPROPERTIESCONFIGURATIONPROPERTIESGRAPHQLAPIDASTPROPERTIESPROFILE {
	if o == nil || IsNil(o.Profile) {
		var ret ENUMPROPERTIESCONFIGURATIONPROPERTIESGRAPHQLAPIDASTPROPERTIESPROFILE
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetProfileOk() (*ENUMPROPERTIESCONFIGURATIONPROPERTIESGRAPHQLAPIDASTPROPERTIESPROFILE, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given ENUMPROPERTIESCONFIGURATIONPROPERTIESGRAPHQLAPIDASTPROPERTIESPROFILE and assigns it to the Profile field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetProfile(v ENUMPROPERTIESCONFIGURATIONPROPERTIESGRAPHQLAPIDASTPROPERTIESPROFILE) {
	o.Profile = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetMode() ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESMODE {
	if o == nil || IsNil(o.Mode) {
		var ret ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESMODE
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetModeOk() (*ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESMODE, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESMODE and assigns it to the Mode field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetMode(v ENUMPROPERTIESCONFIGURATIONPROPERTIESFRONTENDDASTPROPERTIESMODE) {
	o.Mode = &v
}

// GetMaxDuration returns the MaxDuration field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetMaxDuration() float32 {
	if o == nil || IsNil(o.MaxDuration) {
		var ret float32
		return ret
	}
	return *o.MaxDuration
}

// GetMaxDurationOk returns a tuple with the MaxDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetMaxDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDuration) {
		return nil, false
	}
	return o.MaxDuration, true
}

// HasMaxDuration returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasMaxDuration() bool {
	if o != nil && !IsNil(o.MaxDuration) {
		return true
	}

	return false
}

// SetMaxDuration gets a reference to the given float32 and assigns it to the MaxDuration field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetMaxDuration(v float32) {
	o.MaxDuration = &v
}

// GetMaxGeneratedDepth returns the MaxGeneratedDepth field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetMaxGeneratedDepth() float32 {
	if o == nil || IsNil(o.MaxGeneratedDepth) {
		var ret float32
		return ret
	}
	return *o.MaxGeneratedDepth
}

// GetMaxGeneratedDepthOk returns a tuple with the MaxGeneratedDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetMaxGeneratedDepthOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxGeneratedDepth) {
		return nil, false
	}
	return o.MaxGeneratedDepth, true
}

// HasMaxGeneratedDepth returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasMaxGeneratedDepth() bool {
	if o != nil && !IsNil(o.MaxGeneratedDepth) {
		return true
	}

	return false
}

// SetMaxGeneratedDepth gets a reference to the given float32 and assigns it to the MaxGeneratedDepth field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetMaxGeneratedDepth(v float32) {
	o.MaxGeneratedDepth = &v
}

// GetNoOperationName returns the NoOperationName field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetNoOperationName() bool {
	if o == nil || IsNil(o.NoOperationName) {
		var ret bool
		return ret
	}
	return *o.NoOperationName
}

// GetNoOperationNameOk returns a tuple with the NoOperationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetNoOperationNameOk() (*bool, bool) {
	if o == nil || IsNil(o.NoOperationName) {
		return nil, false
	}
	return o.NoOperationName, true
}

// HasNoOperationName returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasNoOperationName() bool {
	if o != nil && !IsNil(o.NoOperationName) {
		return true
	}

	return false
}

// SetNoOperationName gets a reference to the given bool and assigns it to the NoOperationName field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetNoOperationName(v bool) {
	o.NoOperationName = &v
}

// GetHotstart returns the Hotstart field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetHotstart() []string {
	if o == nil || IsNil(o.Hotstart) {
		var ret []string
		return ret
	}
	return o.Hotstart
}

// GetHotstartOk returns a tuple with the Hotstart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetHotstartOk() ([]string, bool) {
	if o == nil || IsNil(o.Hotstart) {
		return nil, false
	}
	return o.Hotstart, true
}

// HasHotstart returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasHotstart() bool {
	if o != nil && !IsNil(o.Hotstart) {
		return true
	}

	return false
}

// SetHotstart gets a reference to the given []string and assigns it to the Hotstart field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetHotstart(v []string) {
	o.Hotstart = v
}

// GetHotstartOnly returns the HotstartOnly field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetHotstartOnly() bool {
	if o == nil || IsNil(o.HotstartOnly) {
		var ret bool
		return ret
	}
	return *o.HotstartOnly
}

// GetHotstartOnlyOk returns a tuple with the HotstartOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetHotstartOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.HotstartOnly) {
		return nil, false
	}
	return o.HotstartOnly, true
}

// HasHotstartOnly returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasHotstartOnly() bool {
	if o != nil && !IsNil(o.HotstartOnly) {
		return true
	}

	return false
}

// SetHotstartOnly gets a reference to the given bool and assigns it to the HotstartOnly field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetHotstartOnly(v bool) {
	o.HotstartOnly = &v
}

// GetBlocklist returns the Blocklist field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetBlocklist() ProfileDetailedConfigurationGraphqlApiDastBlocklist {
	if o == nil || IsNil(o.Blocklist) {
		var ret ProfileDetailedConfigurationGraphqlApiDastBlocklist
		return ret
	}
	return *o.Blocklist
}

// GetBlocklistOk returns a tuple with the Blocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) GetBlocklistOk() (*ProfileDetailedConfigurationGraphqlApiDastBlocklist, bool) {
	if o == nil || IsNil(o.Blocklist) {
		return nil, false
	}
	return o.Blocklist, true
}

// HasBlocklist returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationGraphqlApiDast) HasBlocklist() bool {
	if o != nil && !IsNil(o.Blocklist) {
		return true
	}

	return false
}

// SetBlocklist gets a reference to the given ProfileDetailedConfigurationGraphqlApiDastBlocklist and assigns it to the Blocklist field.
func (o *ProfileDetailedConfigurationGraphqlApiDast) SetBlocklist(v ProfileDetailedConfigurationGraphqlApiDastBlocklist) {
	o.Blocklist = &v
}

func (o ProfileDetailedConfigurationGraphqlApiDast) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationGraphqlApiDast) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SchemaS3Key) {
		toSerialize["schema_s3_key"] = o.SchemaS3Key
	}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.MaxDuration) {
		toSerialize["max_duration"] = o.MaxDuration
	}
	if !IsNil(o.MaxGeneratedDepth) {
		toSerialize["max_generated_depth"] = o.MaxGeneratedDepth
	}
	if !IsNil(o.NoOperationName) {
		toSerialize["no_operation_name"] = o.NoOperationName
	}
	if !IsNil(o.Hotstart) {
		toSerialize["hotstart"] = o.Hotstart
	}
	if !IsNil(o.HotstartOnly) {
		toSerialize["hotstart_only"] = o.HotstartOnly
	}
	if !IsNil(o.Blocklist) {
		toSerialize["blocklist"] = o.Blocklist
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationGraphqlApiDast) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationGraphqlApiDast := _ProfileDetailedConfigurationGraphqlApiDast{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationGraphqlApiDast)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationGraphqlApiDast(varProfileDetailedConfigurationGraphqlApiDast)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "schema_s3_key")
		delete(additionalProperties, "location_id")
		delete(additionalProperties, "profile")
		delete(additionalProperties, "mode")
		delete(additionalProperties, "max_duration")
		delete(additionalProperties, "max_generated_depth")
		delete(additionalProperties, "no_operation_name")
		delete(additionalProperties, "hotstart")
		delete(additionalProperties, "hotstart_only")
		delete(additionalProperties, "blocklist")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationGraphqlApiDast struct {
	value *ProfileDetailedConfigurationGraphqlApiDast
	isSet bool
}

func (v NullableProfileDetailedConfigurationGraphqlApiDast) Get() *ProfileDetailedConfigurationGraphqlApiDast {
	return v.value
}

func (v *NullableProfileDetailedConfigurationGraphqlApiDast) Set(val *ProfileDetailedConfigurationGraphqlApiDast) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationGraphqlApiDast) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationGraphqlApiDast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationGraphqlApiDast(val *ProfileDetailedConfigurationGraphqlApiDast) *NullableProfileDetailedConfigurationGraphqlApiDast {
	return &NullableProfileDetailedConfigurationGraphqlApiDast{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationGraphqlApiDast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationGraphqlApiDast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


