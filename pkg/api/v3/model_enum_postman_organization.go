/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPOSTMANORGANIZATION the model 'ENUMPOSTMANORGANIZATION'
type ENUMPOSTMANORGANIZATION string

// List of ENUM_POSTMAN_ORGANIZATION
const (
	ENUMPOSTMANORGANIZATION_POSTMAN_ORGANIZATION ENUMPOSTMANORGANIZATION = "POSTMAN_ORGANIZATION"
)

// All allowed values of ENUMPOSTMANORGANIZATION enum
var AllowedENUMPOSTMANORGANIZATIONEnumValues = []ENUMPOSTMANORGANIZATION{
	"POSTMAN_ORGANIZATION",
}

func (v *ENUMPOSTMANORGANIZATION) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPOSTMANORGANIZATION(value)
	for _, existing := range AllowedENUMPOSTMANORGANIZATIONEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPOSTMANORGANIZATION", value)
}

// NewENUMPOSTMANORGANIZATIONFromValue returns a pointer to a valid ENUMPOSTMANORGANIZATION
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPOSTMANORGANIZATIONFromValue(v string) (*ENUMPOSTMANORGANIZATION, error) {
	ev := ENUMPOSTMANORGANIZATION(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPOSTMANORGANIZATION: valid values are %v", v, AllowedENUMPOSTMANORGANIZATIONEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPOSTMANORGANIZATION) IsValid() bool {
	for _, existing := range AllowedENUMPOSTMANORGANIZATIONEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_POSTMAN_ORGANIZATION value
func (v ENUMPOSTMANORGANIZATION) Ptr() *ENUMPOSTMANORGANIZATION {
	return &v
}

type NullableENUMPOSTMANORGANIZATION struct {
	value *ENUMPOSTMANORGANIZATION
	isSet bool
}

func (v NullableENUMPOSTMANORGANIZATION) Get() *ENUMPOSTMANORGANIZATION {
	return v.value
}

func (v *NullableENUMPOSTMANORGANIZATION) Set(val *ENUMPOSTMANORGANIZATION) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPOSTMANORGANIZATION) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPOSTMANORGANIZATION) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPOSTMANORGANIZATION(val *ENUMPOSTMANORGANIZATION) *NullableENUMPOSTMANORGANIZATION {
	return &NullableENUMPOSTMANORGANIZATION{value: val, isSet: true}
}

func (v NullableENUMPOSTMANORGANIZATION) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPOSTMANORGANIZATION) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

