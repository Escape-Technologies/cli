/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum741dab4414f7700666ee11933c4b67dc the model 'Enum741dab4414f7700666ee11933c4b67dc'
type Enum741dab4414f7700666ee11933c4b67dc string

// List of Enum_741dab4414f7700666ee11933c4b67dc
const (
	ENUM741DAB4414F7700666EE11933C4B67DC_AKAMAI Enum741dab4414f7700666ee11933c4b67dc = "AKAMAI"
	ENUM741DAB4414F7700666EE11933C4B67DC_ALIBABA Enum741dab4414f7700666ee11933c4b67dc = "ALIBABA"
	ENUM741DAB4414F7700666EE11933C4B67DC_AWS Enum741dab4414f7700666ee11933c4b67dc = "AWS"
	ENUM741DAB4414F7700666EE11933C4B67DC_AZURE Enum741dab4414f7700666ee11933c4b67dc = "AZURE"
	ENUM741DAB4414F7700666EE11933C4B67DC_CLOUDFLARE Enum741dab4414f7700666ee11933c4b67dc = "CLOUDFLARE"
	ENUM741DAB4414F7700666EE11933C4B67DC_DIGITALOCEAN Enum741dab4414f7700666ee11933c4b67dc = "DIGITALOCEAN"
	ENUM741DAB4414F7700666EE11933C4B67DC_FASTLY Enum741dab4414f7700666ee11933c4b67dc = "FASTLY"
	ENUM741DAB4414F7700666EE11933C4B67DC_GCP Enum741dab4414f7700666ee11933c4b67dc = "GCP"
	ENUM741DAB4414F7700666EE11933C4B67DC_GRAVITEE Enum741dab4414f7700666ee11933c4b67dc = "GRAVITEE"
	ENUM741DAB4414F7700666EE11933C4B67DC_HEROKU Enum741dab4414f7700666ee11933c4b67dc = "HEROKU"
	ENUM741DAB4414F7700666EE11933C4B67DC_IBM Enum741dab4414f7700666ee11933c4b67dc = "IBM"
	ENUM741DAB4414F7700666EE11933C4B67DC_LINODE Enum741dab4414f7700666ee11933c4b67dc = "LINODE"
	ENUM741DAB4414F7700666EE11933C4B67DC_ORACLE Enum741dab4414f7700666ee11933c4b67dc = "ORACLE"
	ENUM741DAB4414F7700666EE11933C4B67DC_OVH Enum741dab4414f7700666ee11933c4b67dc = "OVH"
	ENUM741DAB4414F7700666EE11933C4B67DC_SCALEWAY Enum741dab4414f7700666ee11933c4b67dc = "SCALEWAY"
	ENUM741DAB4414F7700666EE11933C4B67DC_TENCENT Enum741dab4414f7700666ee11933c4b67dc = "TENCENT"
	ENUM741DAB4414F7700666EE11933C4B67DC_UCLOUD Enum741dab4414f7700666ee11933c4b67dc = "UCLOUD"
	ENUM741DAB4414F7700666EE11933C4B67DC_UNKNOWN Enum741dab4414f7700666ee11933c4b67dc = "UNKNOWN"
	ENUM741DAB4414F7700666EE11933C4B67DC_VERCEL Enum741dab4414f7700666ee11933c4b67dc = "VERCEL"
)

// All allowed values of Enum741dab4414f7700666ee11933c4b67dc enum
var AllowedEnum741dab4414f7700666ee11933c4b67dcEnumValues = []Enum741dab4414f7700666ee11933c4b67dc{
	"AKAMAI",
	"ALIBABA",
	"AWS",
	"AZURE",
	"CLOUDFLARE",
	"DIGITALOCEAN",
	"FASTLY",
	"GCP",
	"GRAVITEE",
	"HEROKU",
	"IBM",
	"LINODE",
	"ORACLE",
	"OVH",
	"SCALEWAY",
	"TENCENT",
	"UCLOUD",
	"UNKNOWN",
	"VERCEL",
}

func (v *Enum741dab4414f7700666ee11933c4b67dc) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum741dab4414f7700666ee11933c4b67dc(value)
	for _, existing := range AllowedEnum741dab4414f7700666ee11933c4b67dcEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum741dab4414f7700666ee11933c4b67dc", value)
}

// NewEnum741dab4414f7700666ee11933c4b67dcFromValue returns a pointer to a valid Enum741dab4414f7700666ee11933c4b67dc
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum741dab4414f7700666ee11933c4b67dcFromValue(v string) (*Enum741dab4414f7700666ee11933c4b67dc, error) {
	ev := Enum741dab4414f7700666ee11933c4b67dc(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum741dab4414f7700666ee11933c4b67dc: valid values are %v", v, AllowedEnum741dab4414f7700666ee11933c4b67dcEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum741dab4414f7700666ee11933c4b67dc) IsValid() bool {
	for _, existing := range AllowedEnum741dab4414f7700666ee11933c4b67dcEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_741dab4414f7700666ee11933c4b67dc value
func (v Enum741dab4414f7700666ee11933c4b67dc) Ptr() *Enum741dab4414f7700666ee11933c4b67dc {
	return &v
}

type NullableEnum741dab4414f7700666ee11933c4b67dc struct {
	value *Enum741dab4414f7700666ee11933c4b67dc
	isSet bool
}

func (v NullableEnum741dab4414f7700666ee11933c4b67dc) Get() *Enum741dab4414f7700666ee11933c4b67dc {
	return v.value
}

func (v *NullableEnum741dab4414f7700666ee11933c4b67dc) Set(val *Enum741dab4414f7700666ee11933c4b67dc) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum741dab4414f7700666ee11933c4b67dc) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum741dab4414f7700666ee11933c4b67dc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum741dab4414f7700666ee11933c4b67dc(val *Enum741dab4414f7700666ee11933c4b67dc) *NullableEnum741dab4414f7700666ee11933c4b67dc {
	return &NullableEnum741dab4414f7700666ee11933c4b67dc{value: val, isSet: true}
}

func (v NullableEnum741dab4414f7700666ee11933c4b67dc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum741dab4414f7700666ee11933c4b67dc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

