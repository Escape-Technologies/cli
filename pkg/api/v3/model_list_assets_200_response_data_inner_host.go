/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ListAssets200ResponseDataInnerHost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAssets200ResponseDataInnerHost{}

// ListAssets200ResponseDataInnerHost struct for ListAssets200ResponseDataInnerHost
type ListAssets200ResponseDataInnerHost struct {
	Address string `json:"address"`
	Type EnumB19d734396f7b72a94c996eabb2db968 `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _ListAssets200ResponseDataInnerHost ListAssets200ResponseDataInnerHost

// NewListAssets200ResponseDataInnerHost instantiates a new ListAssets200ResponseDataInnerHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAssets200ResponseDataInnerHost(address string, type_ EnumB19d734396f7b72a94c996eabb2db968) *ListAssets200ResponseDataInnerHost {
	this := ListAssets200ResponseDataInnerHost{}
	this.Address = address
	this.Type = type_
	return &this
}

// NewListAssets200ResponseDataInnerHostWithDefaults instantiates a new ListAssets200ResponseDataInnerHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAssets200ResponseDataInnerHostWithDefaults() *ListAssets200ResponseDataInnerHost {
	this := ListAssets200ResponseDataInnerHost{}
	return &this
}

// GetAddress returns the Address field value
func (o *ListAssets200ResponseDataInnerHost) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ListAssets200ResponseDataInnerHost) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ListAssets200ResponseDataInnerHost) SetAddress(v string) {
	o.Address = v
}

// GetType returns the Type field value
func (o *ListAssets200ResponseDataInnerHost) GetType() EnumB19d734396f7b72a94c996eabb2db968 {
	if o == nil {
		var ret EnumB19d734396f7b72a94c996eabb2db968
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListAssets200ResponseDataInnerHost) GetTypeOk() (*EnumB19d734396f7b72a94c996eabb2db968, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListAssets200ResponseDataInnerHost) SetType(v EnumB19d734396f7b72a94c996eabb2db968) {
	o.Type = v
}

func (o ListAssets200ResponseDataInnerHost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAssets200ResponseDataInnerHost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListAssets200ResponseDataInnerHost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListAssets200ResponseDataInnerHost := _ListAssets200ResponseDataInnerHost{}

	err = json.Unmarshal(data, &varListAssets200ResponseDataInnerHost)

	if err != nil {
		return err
	}

	*o = ListAssets200ResponseDataInnerHost(varListAssets200ResponseDataInnerHost)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListAssets200ResponseDataInnerHost struct {
	value *ListAssets200ResponseDataInnerHost
	isSet bool
}

func (v NullableListAssets200ResponseDataInnerHost) Get() *ListAssets200ResponseDataInnerHost {
	return v.value
}

func (v *NullableListAssets200ResponseDataInnerHost) Set(val *ListAssets200ResponseDataInnerHost) {
	v.value = val
	v.isSet = true
}

func (v NullableListAssets200ResponseDataInnerHost) IsSet() bool {
	return v.isSet
}

func (v *NullableListAssets200ResponseDataInnerHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAssets200ResponseDataInnerHost(val *ListAssets200ResponseDataInnerHost) *NullableListAssets200ResponseDataInnerHost {
	return &NullableListAssets200ResponseDataInnerHost{value: val, isSet: true}
}

func (v NullableListAssets200ResponseDataInnerHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAssets200ResponseDataInnerHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


