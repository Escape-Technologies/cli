/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS The class of the asset
type ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS string

// List of ENUM_PROPERTIES_DATA_ITEMS_PROPERTIES_ASSET_PROPERTIES_CLASS
const (
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_API_SERVICE ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "API_SERVICE"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_CDN ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "CDN"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_CLOUD_HOSTING ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "CLOUD_HOSTING"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_CSPM ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "CSPM"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_DEV_TOOLS ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "DEV_TOOLS"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_FRONTEND ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "FRONTEND"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_HOST ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "HOST"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_REPOSITORY ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "REPOSITORY"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_SCHEMA ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "SCHEMA"
	ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS_SOURCE_CODE_MANAGEMENT ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS = "SOURCE_CODE_MANAGEMENT"
)

// All allowed values of ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS enum
var AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASSEnumValues = []ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS{
	"API_SERVICE",
	"CDN",
	"CLOUD_HOSTING",
	"CSPM",
	"DEV_TOOLS",
	"FRONTEND",
	"HOST",
	"REPOSITORY",
	"SCHEMA",
	"SOURCE_CODE_MANAGEMENT",
}

func (v *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS(value)
	for _, existing := range AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASSEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS", value)
}

// NewENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASSFromValue returns a pointer to a valid ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASSFromValue(v string) (*ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS, error) {
	ev := ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS: valid values are %v", v, AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASSEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) IsValid() bool {
	for _, existing := range AllowedENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASSEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_PROPERTIES_DATA_ITEMS_PROPERTIES_ASSET_PROPERTIES_CLASS value
func (v ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) Ptr() *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS {
	return &v
}

type NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS struct {
	value *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS
	isSet bool
}

func (v NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) Get() *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS {
	return v.value
}

func (v *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) Set(val *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) {
	v.value = val
	v.isSet = true
}

func (v NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) IsSet() bool {
	return v.isSet
}

func (v *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS(val *ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS {
	return &NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS{value: val, isSet: true}
}

func (v NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESCLASS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

