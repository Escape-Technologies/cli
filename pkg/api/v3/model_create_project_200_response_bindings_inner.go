/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CreateProject200ResponseBindingsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProject200ResponseBindingsInner{}

// CreateProject200ResponseBindingsInner struct for CreateProject200ResponseBindingsInner
type CreateProject200ResponseBindingsInner struct {
	// The id of the role binding
	Id string `json:"id"`
	// The date and time the role binding was created
	CreatedAt time.Time `json:"createdAt"`
	Role CreateProject200ResponseBindingsInnerRole `json:"role"`
	Project CreateProject200ResponseBindingsInnerProject `json:"project"`
	User CreateProject200ResponseBindingsInnerUser `json:"user"`
	AdditionalProperties map[string]interface{}
}

type _CreateProject200ResponseBindingsInner CreateProject200ResponseBindingsInner

// NewCreateProject200ResponseBindingsInner instantiates a new CreateProject200ResponseBindingsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProject200ResponseBindingsInner(id string, createdAt time.Time, role CreateProject200ResponseBindingsInnerRole, project CreateProject200ResponseBindingsInnerProject, user CreateProject200ResponseBindingsInnerUser) *CreateProject200ResponseBindingsInner {
	this := CreateProject200ResponseBindingsInner{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Role = role
	this.Project = project
	this.User = user
	return &this
}

// NewCreateProject200ResponseBindingsInnerWithDefaults instantiates a new CreateProject200ResponseBindingsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProject200ResponseBindingsInnerWithDefaults() *CreateProject200ResponseBindingsInner {
	this := CreateProject200ResponseBindingsInner{}
	return &this
}

// GetId returns the Id field value
func (o *CreateProject200ResponseBindingsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateProject200ResponseBindingsInner) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateProject200ResponseBindingsInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateProject200ResponseBindingsInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetRole returns the Role field value
func (o *CreateProject200ResponseBindingsInner) GetRole() CreateProject200ResponseBindingsInnerRole {
	if o == nil {
		var ret CreateProject200ResponseBindingsInnerRole
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInner) GetRoleOk() (*CreateProject200ResponseBindingsInnerRole, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *CreateProject200ResponseBindingsInner) SetRole(v CreateProject200ResponseBindingsInnerRole) {
	o.Role = v
}

// GetProject returns the Project field value
func (o *CreateProject200ResponseBindingsInner) GetProject() CreateProject200ResponseBindingsInnerProject {
	if o == nil {
		var ret CreateProject200ResponseBindingsInnerProject
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInner) GetProjectOk() (*CreateProject200ResponseBindingsInnerProject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *CreateProject200ResponseBindingsInner) SetProject(v CreateProject200ResponseBindingsInnerProject) {
	o.Project = v
}

// GetUser returns the User field value
func (o *CreateProject200ResponseBindingsInner) GetUser() CreateProject200ResponseBindingsInnerUser {
	if o == nil {
		var ret CreateProject200ResponseBindingsInnerUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInner) GetUserOk() (*CreateProject200ResponseBindingsInnerUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *CreateProject200ResponseBindingsInner) SetUser(v CreateProject200ResponseBindingsInnerUser) {
	o.User = v
}

func (o CreateProject200ResponseBindingsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProject200ResponseBindingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["role"] = o.Role
	toSerialize["project"] = o.Project
	toSerialize["user"] = o.User

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateProject200ResponseBindingsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
		"role",
		"project",
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProject200ResponseBindingsInner := _CreateProject200ResponseBindingsInner{}

	err = json.Unmarshal(data, &varCreateProject200ResponseBindingsInner)

	if err != nil {
		return err
	}

	*o = CreateProject200ResponseBindingsInner(varCreateProject200ResponseBindingsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "role")
		delete(additionalProperties, "project")
		delete(additionalProperties, "user")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateProject200ResponseBindingsInner struct {
	value *CreateProject200ResponseBindingsInner
	isSet bool
}

func (v NullableCreateProject200ResponseBindingsInner) Get() *CreateProject200ResponseBindingsInner {
	return v.value
}

func (v *NullableCreateProject200ResponseBindingsInner) Set(val *CreateProject200ResponseBindingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProject200ResponseBindingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProject200ResponseBindingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProject200ResponseBindingsInner(val *CreateProject200ResponseBindingsInner) *NullableCreateProject200ResponseBindingsInner {
	return &NullableCreateProject200ResponseBindingsInner{value: val, isSet: true}
}

func (v NullableCreateProject200ResponseBindingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProject200ResponseBindingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


