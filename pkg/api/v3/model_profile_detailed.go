/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ProfileDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailed{}

// ProfileDetailed Detailed information about a profile
type ProfileDetailed struct {
	// The id of the profile
	Id string `json:"id"`
	// The name of the profile
	Name string `json:"name"`
	// The scanner kind of the profile
	ScannerKind string `json:"scannerKind"`
	// The date and time the profile was created
	CreatedAt string `json:"createdAt"`
	// The date and time the profile was updated
	UpdatedAt string `json:"updatedAt"`
	// The cron of the profile
	Cron *string `json:"cron,omitempty"`
	// The date and time the profile is scheduled for deletion
	ScheduledForDeletionAt *string `json:"scheduledForDeletionAt,omitempty"`
	// The score of the profile
	Score *float32 `json:"score,omitempty"`
	// The coverage of the profile
	Coverage *float32 `json:"coverage,omitempty"`
	ActiveConfiguration ConfigurationDetailed `json:"activeConfiguration"`
	ActiveSchema *SchemaDetailed `json:"activeSchema,omitempty"`
	Asset AssetDetailed `json:"asset"`
	LastResourceScan *ScanDetailed `json:"lastResourceScan,omitempty"`
	LastSuccessfulResourceScan *ScanDetailed `json:"lastSuccessfulResourceScan,omitempty"`
	// The risks of the profile
	Risks []ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS `json:"risks"`
	Statistics StatisticsDetailed `json:"statistics"`
	Links ProfileSummarizedLinks `json:"links"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailed ProfileDetailed

// NewProfileDetailed instantiates a new ProfileDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailed(id string, name string, scannerKind string, createdAt string, updatedAt string, activeConfiguration ConfigurationDetailed, asset AssetDetailed, risks []ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS, statistics StatisticsDetailed, links ProfileSummarizedLinks) *ProfileDetailed {
	this := ProfileDetailed{}
	this.Id = id
	this.Name = name
	this.ScannerKind = scannerKind
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.ActiveConfiguration = activeConfiguration
	this.Asset = asset
	this.Risks = risks
	this.Statistics = statistics
	this.Links = links
	return &this
}

// NewProfileDetailedWithDefaults instantiates a new ProfileDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedWithDefaults() *ProfileDetailed {
	this := ProfileDetailed{}
	return &this
}

// GetId returns the Id field value
func (o *ProfileDetailed) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProfileDetailed) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ProfileDetailed) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProfileDetailed) SetName(v string) {
	o.Name = v
}

// GetScannerKind returns the ScannerKind field value
func (o *ProfileDetailed) GetScannerKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScannerKind
}

// GetScannerKindOk returns a tuple with the ScannerKind field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetScannerKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScannerKind, true
}

// SetScannerKind sets field value
func (o *ProfileDetailed) SetScannerKind(v string) {
	o.ScannerKind = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ProfileDetailed) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ProfileDetailed) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ProfileDetailed) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ProfileDetailed) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *ProfileDetailed) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *ProfileDetailed) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *ProfileDetailed) SetCron(v string) {
	o.Cron = &v
}

// GetScheduledForDeletionAt returns the ScheduledForDeletionAt field value if set, zero value otherwise.
func (o *ProfileDetailed) GetScheduledForDeletionAt() string {
	if o == nil || IsNil(o.ScheduledForDeletionAt) {
		var ret string
		return ret
	}
	return *o.ScheduledForDeletionAt
}

// GetScheduledForDeletionAtOk returns a tuple with the ScheduledForDeletionAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetScheduledForDeletionAtOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledForDeletionAt) {
		return nil, false
	}
	return o.ScheduledForDeletionAt, true
}

// HasScheduledForDeletionAt returns a boolean if a field has been set.
func (o *ProfileDetailed) HasScheduledForDeletionAt() bool {
	if o != nil && !IsNil(o.ScheduledForDeletionAt) {
		return true
	}

	return false
}

// SetScheduledForDeletionAt gets a reference to the given string and assigns it to the ScheduledForDeletionAt field.
func (o *ProfileDetailed) SetScheduledForDeletionAt(v string) {
	o.ScheduledForDeletionAt = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *ProfileDetailed) GetScore() float32 {
	if o == nil || IsNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *ProfileDetailed) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *ProfileDetailed) SetScore(v float32) {
	o.Score = &v
}

// GetCoverage returns the Coverage field value if set, zero value otherwise.
func (o *ProfileDetailed) GetCoverage() float32 {
	if o == nil || IsNil(o.Coverage) {
		var ret float32
		return ret
	}
	return *o.Coverage
}

// GetCoverageOk returns a tuple with the Coverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetCoverageOk() (*float32, bool) {
	if o == nil || IsNil(o.Coverage) {
		return nil, false
	}
	return o.Coverage, true
}

// HasCoverage returns a boolean if a field has been set.
func (o *ProfileDetailed) HasCoverage() bool {
	if o != nil && !IsNil(o.Coverage) {
		return true
	}

	return false
}

// SetCoverage gets a reference to the given float32 and assigns it to the Coverage field.
func (o *ProfileDetailed) SetCoverage(v float32) {
	o.Coverage = &v
}

// GetActiveConfiguration returns the ActiveConfiguration field value
func (o *ProfileDetailed) GetActiveConfiguration() ConfigurationDetailed {
	if o == nil {
		var ret ConfigurationDetailed
		return ret
	}

	return o.ActiveConfiguration
}

// GetActiveConfigurationOk returns a tuple with the ActiveConfiguration field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetActiveConfigurationOk() (*ConfigurationDetailed, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveConfiguration, true
}

// SetActiveConfiguration sets field value
func (o *ProfileDetailed) SetActiveConfiguration(v ConfigurationDetailed) {
	o.ActiveConfiguration = v
}

// GetActiveSchema returns the ActiveSchema field value if set, zero value otherwise.
func (o *ProfileDetailed) GetActiveSchema() SchemaDetailed {
	if o == nil || IsNil(o.ActiveSchema) {
		var ret SchemaDetailed
		return ret
	}
	return *o.ActiveSchema
}

// GetActiveSchemaOk returns a tuple with the ActiveSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetActiveSchemaOk() (*SchemaDetailed, bool) {
	if o == nil || IsNil(o.ActiveSchema) {
		return nil, false
	}
	return o.ActiveSchema, true
}

// HasActiveSchema returns a boolean if a field has been set.
func (o *ProfileDetailed) HasActiveSchema() bool {
	if o != nil && !IsNil(o.ActiveSchema) {
		return true
	}

	return false
}

// SetActiveSchema gets a reference to the given SchemaDetailed and assigns it to the ActiveSchema field.
func (o *ProfileDetailed) SetActiveSchema(v SchemaDetailed) {
	o.ActiveSchema = &v
}

// GetAsset returns the Asset field value
func (o *ProfileDetailed) GetAsset() AssetDetailed {
	if o == nil {
		var ret AssetDetailed
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetAssetOk() (*AssetDetailed, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *ProfileDetailed) SetAsset(v AssetDetailed) {
	o.Asset = v
}

// GetLastResourceScan returns the LastResourceScan field value if set, zero value otherwise.
func (o *ProfileDetailed) GetLastResourceScan() ScanDetailed {
	if o == nil || IsNil(o.LastResourceScan) {
		var ret ScanDetailed
		return ret
	}
	return *o.LastResourceScan
}

// GetLastResourceScanOk returns a tuple with the LastResourceScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetLastResourceScanOk() (*ScanDetailed, bool) {
	if o == nil || IsNil(o.LastResourceScan) {
		return nil, false
	}
	return o.LastResourceScan, true
}

// HasLastResourceScan returns a boolean if a field has been set.
func (o *ProfileDetailed) HasLastResourceScan() bool {
	if o != nil && !IsNil(o.LastResourceScan) {
		return true
	}

	return false
}

// SetLastResourceScan gets a reference to the given ScanDetailed and assigns it to the LastResourceScan field.
func (o *ProfileDetailed) SetLastResourceScan(v ScanDetailed) {
	o.LastResourceScan = &v
}

// GetLastSuccessfulResourceScan returns the LastSuccessfulResourceScan field value if set, zero value otherwise.
func (o *ProfileDetailed) GetLastSuccessfulResourceScan() ScanDetailed {
	if o == nil || IsNil(o.LastSuccessfulResourceScan) {
		var ret ScanDetailed
		return ret
	}
	return *o.LastSuccessfulResourceScan
}

// GetLastSuccessfulResourceScanOk returns a tuple with the LastSuccessfulResourceScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetLastSuccessfulResourceScanOk() (*ScanDetailed, bool) {
	if o == nil || IsNil(o.LastSuccessfulResourceScan) {
		return nil, false
	}
	return o.LastSuccessfulResourceScan, true
}

// HasLastSuccessfulResourceScan returns a boolean if a field has been set.
func (o *ProfileDetailed) HasLastSuccessfulResourceScan() bool {
	if o != nil && !IsNil(o.LastSuccessfulResourceScan) {
		return true
	}

	return false
}

// SetLastSuccessfulResourceScan gets a reference to the given ScanDetailed and assigns it to the LastSuccessfulResourceScan field.
func (o *ProfileDetailed) SetLastSuccessfulResourceScan(v ScanDetailed) {
	o.LastSuccessfulResourceScan = &v
}

// GetRisks returns the Risks field value
func (o *ProfileDetailed) GetRisks() []ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS {
	if o == nil {
		var ret []ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS
		return ret
	}

	return o.Risks
}

// GetRisksOk returns a tuple with the Risks field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetRisksOk() ([]ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS, bool) {
	if o == nil {
		return nil, false
	}
	return o.Risks, true
}

// SetRisks sets field value
func (o *ProfileDetailed) SetRisks(v []ENUMPROPERTIESDATAITEMSPROPERTIESASSETPROPERTIESRISKSITEMS) {
	o.Risks = v
}

// GetStatistics returns the Statistics field value
func (o *ProfileDetailed) GetStatistics() StatisticsDetailed {
	if o == nil {
		var ret StatisticsDetailed
		return ret
	}

	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetStatisticsOk() (*StatisticsDetailed, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statistics, true
}

// SetStatistics sets field value
func (o *ProfileDetailed) SetStatistics(v StatisticsDetailed) {
	o.Statistics = v
}

// GetLinks returns the Links field value
func (o *ProfileDetailed) GetLinks() ProfileSummarizedLinks {
	if o == nil {
		var ret ProfileSummarizedLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailed) GetLinksOk() (*ProfileSummarizedLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *ProfileDetailed) SetLinks(v ProfileSummarizedLinks) {
	o.Links = v
}

func (o ProfileDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["scannerKind"] = o.ScannerKind
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.ScheduledForDeletionAt) {
		toSerialize["scheduledForDeletionAt"] = o.ScheduledForDeletionAt
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Coverage) {
		toSerialize["coverage"] = o.Coverage
	}
	toSerialize["activeConfiguration"] = o.ActiveConfiguration
	if !IsNil(o.ActiveSchema) {
		toSerialize["activeSchema"] = o.ActiveSchema
	}
	toSerialize["asset"] = o.Asset
	if !IsNil(o.LastResourceScan) {
		toSerialize["lastResourceScan"] = o.LastResourceScan
	}
	if !IsNil(o.LastSuccessfulResourceScan) {
		toSerialize["lastSuccessfulResourceScan"] = o.LastSuccessfulResourceScan
	}
	toSerialize["risks"] = o.Risks
	toSerialize["statistics"] = o.Statistics
	toSerialize["links"] = o.Links

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailed) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"scannerKind",
		"createdAt",
		"updatedAt",
		"activeConfiguration",
		"asset",
		"risks",
		"statistics",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProfileDetailed := _ProfileDetailed{}

	err = json.Unmarshal(data, &varProfileDetailed)

	if err != nil {
		return err
	}

	*o = ProfileDetailed(varProfileDetailed)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "scannerKind")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "cron")
		delete(additionalProperties, "scheduledForDeletionAt")
		delete(additionalProperties, "score")
		delete(additionalProperties, "coverage")
		delete(additionalProperties, "activeConfiguration")
		delete(additionalProperties, "activeSchema")
		delete(additionalProperties, "asset")
		delete(additionalProperties, "lastResourceScan")
		delete(additionalProperties, "lastSuccessfulResourceScan")
		delete(additionalProperties, "risks")
		delete(additionalProperties, "statistics")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailed struct {
	value *ProfileDetailed
	isSet bool
}

func (v NullableProfileDetailed) Get() *ProfileDetailed {
	return v.value
}

func (v *NullableProfileDetailed) Set(val *ProfileDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailed(val *ProfileDetailed) *NullableProfileDetailed {
	return &NullableProfileDetailed{value: val, isSet: true}
}

func (v NullableProfileDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


