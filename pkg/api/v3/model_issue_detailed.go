/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the IssueDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssueDetailed{}

// IssueDetailed Detailed information about an issue
type IssueDetailed struct {
	// The id of the issue
	Id string `json:"id"`
	// The name of the issue
	Name string `json:"name"`
	Category EnumDcc3623d9a53d3b28806d473bba5c6d7 `json:"category"`
	Severity Enum5dfd39f2a10625d7f95d7bff8a1402c3 `json:"severity"`
	Status EnumA1f51229f2b334ae6e9ff63b66c5a598 `json:"status"`
	// The context of the issue
	Context string `json:"context"`
	// Array of risk types associated with the issue
	Risks []Enum1ea54cdf1f4480ebf83fc671185f5693 `json:"risks"`
	// Unique identifier for the alert
	AlertUid string `json:"alertUid"`
	// When the issue was first created
	CreatedAt string `json:"createdAt"`
	Asset AssetSummarized `json:"asset"`
	// ID of the last scan where this issue was seen
	LastSeenScanId string `json:"lastSeenScanId"`
	// ID of the first scan where this issue was seen
	FirstSeenScanId string `json:"firstSeenScanId"`
	// ID of the custom rule if this is a custom issue
	CustomRuleId string `json:"customRuleId"`
	// AI-generated remediation for the issue
	AiRemediation string `json:"aiRemediation"`
	// Framework used for AI remediation
	AiRemediationFramework string `json:"aiRemediationFramework"`
	// URL to the associated Jira ticket if exists
	TicketUrl string `json:"ticketUrl"`
	Links IssueSummarizedLinks `json:"links"`
	AdditionalProperties map[string]interface{}
}

type _IssueDetailed IssueDetailed

// NewIssueDetailed instantiates a new IssueDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueDetailed(id string, name string, category EnumDcc3623d9a53d3b28806d473bba5c6d7, severity Enum5dfd39f2a10625d7f95d7bff8a1402c3, status EnumA1f51229f2b334ae6e9ff63b66c5a598, context string, risks []Enum1ea54cdf1f4480ebf83fc671185f5693, alertUid string, createdAt string, asset AssetSummarized, lastSeenScanId string, firstSeenScanId string, customRuleId string, aiRemediation string, aiRemediationFramework string, ticketUrl string, links IssueSummarizedLinks) *IssueDetailed {
	this := IssueDetailed{}
	this.Id = id
	this.Name = name
	this.Category = category
	this.Severity = severity
	this.Status = status
	this.Context = context
	this.Risks = risks
	this.AlertUid = alertUid
	this.CreatedAt = createdAt
	this.Asset = asset
	this.LastSeenScanId = lastSeenScanId
	this.FirstSeenScanId = firstSeenScanId
	this.CustomRuleId = customRuleId
	this.AiRemediation = aiRemediation
	this.AiRemediationFramework = aiRemediationFramework
	this.TicketUrl = ticketUrl
	this.Links = links
	return &this
}

// NewIssueDetailedWithDefaults instantiates a new IssueDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueDetailedWithDefaults() *IssueDetailed {
	this := IssueDetailed{}
	return &this
}

// GetId returns the Id field value
func (o *IssueDetailed) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IssueDetailed) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *IssueDetailed) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IssueDetailed) SetName(v string) {
	o.Name = v
}

// GetCategory returns the Category field value
func (o *IssueDetailed) GetCategory() EnumDcc3623d9a53d3b28806d473bba5c6d7 {
	if o == nil {
		var ret EnumDcc3623d9a53d3b28806d473bba5c6d7
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetCategoryOk() (*EnumDcc3623d9a53d3b28806d473bba5c6d7, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *IssueDetailed) SetCategory(v EnumDcc3623d9a53d3b28806d473bba5c6d7) {
	o.Category = v
}

// GetSeverity returns the Severity field value
func (o *IssueDetailed) GetSeverity() Enum5dfd39f2a10625d7f95d7bff8a1402c3 {
	if o == nil {
		var ret Enum5dfd39f2a10625d7f95d7bff8a1402c3
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetSeverityOk() (*Enum5dfd39f2a10625d7f95d7bff8a1402c3, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *IssueDetailed) SetSeverity(v Enum5dfd39f2a10625d7f95d7bff8a1402c3) {
	o.Severity = v
}

// GetStatus returns the Status field value
func (o *IssueDetailed) GetStatus() EnumA1f51229f2b334ae6e9ff63b66c5a598 {
	if o == nil {
		var ret EnumA1f51229f2b334ae6e9ff63b66c5a598
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetStatusOk() (*EnumA1f51229f2b334ae6e9ff63b66c5a598, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *IssueDetailed) SetStatus(v EnumA1f51229f2b334ae6e9ff63b66c5a598) {
	o.Status = v
}

// GetContext returns the Context field value
func (o *IssueDetailed) GetContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *IssueDetailed) SetContext(v string) {
	o.Context = v
}

// GetRisks returns the Risks field value
func (o *IssueDetailed) GetRisks() []Enum1ea54cdf1f4480ebf83fc671185f5693 {
	if o == nil {
		var ret []Enum1ea54cdf1f4480ebf83fc671185f5693
		return ret
	}

	return o.Risks
}

// GetRisksOk returns a tuple with the Risks field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetRisksOk() ([]Enum1ea54cdf1f4480ebf83fc671185f5693, bool) {
	if o == nil {
		return nil, false
	}
	return o.Risks, true
}

// SetRisks sets field value
func (o *IssueDetailed) SetRisks(v []Enum1ea54cdf1f4480ebf83fc671185f5693) {
	o.Risks = v
}

// GetAlertUid returns the AlertUid field value
func (o *IssueDetailed) GetAlertUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertUid
}

// GetAlertUidOk returns a tuple with the AlertUid field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetAlertUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertUid, true
}

// SetAlertUid sets field value
func (o *IssueDetailed) SetAlertUid(v string) {
	o.AlertUid = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *IssueDetailed) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *IssueDetailed) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetAsset returns the Asset field value
func (o *IssueDetailed) GetAsset() AssetSummarized {
	if o == nil {
		var ret AssetSummarized
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetAssetOk() (*AssetSummarized, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *IssueDetailed) SetAsset(v AssetSummarized) {
	o.Asset = v
}

// GetLastSeenScanId returns the LastSeenScanId field value
func (o *IssueDetailed) GetLastSeenScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastSeenScanId
}

// GetLastSeenScanIdOk returns a tuple with the LastSeenScanId field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetLastSeenScanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSeenScanId, true
}

// SetLastSeenScanId sets field value
func (o *IssueDetailed) SetLastSeenScanId(v string) {
	o.LastSeenScanId = v
}

// GetFirstSeenScanId returns the FirstSeenScanId field value
func (o *IssueDetailed) GetFirstSeenScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstSeenScanId
}

// GetFirstSeenScanIdOk returns a tuple with the FirstSeenScanId field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetFirstSeenScanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstSeenScanId, true
}

// SetFirstSeenScanId sets field value
func (o *IssueDetailed) SetFirstSeenScanId(v string) {
	o.FirstSeenScanId = v
}

// GetCustomRuleId returns the CustomRuleId field value
func (o *IssueDetailed) GetCustomRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomRuleId
}

// GetCustomRuleIdOk returns a tuple with the CustomRuleId field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetCustomRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomRuleId, true
}

// SetCustomRuleId sets field value
func (o *IssueDetailed) SetCustomRuleId(v string) {
	o.CustomRuleId = v
}

// GetAiRemediation returns the AiRemediation field value
func (o *IssueDetailed) GetAiRemediation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AiRemediation
}

// GetAiRemediationOk returns a tuple with the AiRemediation field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetAiRemediationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AiRemediation, true
}

// SetAiRemediation sets field value
func (o *IssueDetailed) SetAiRemediation(v string) {
	o.AiRemediation = v
}

// GetAiRemediationFramework returns the AiRemediationFramework field value
func (o *IssueDetailed) GetAiRemediationFramework() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AiRemediationFramework
}

// GetAiRemediationFrameworkOk returns a tuple with the AiRemediationFramework field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetAiRemediationFrameworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AiRemediationFramework, true
}

// SetAiRemediationFramework sets field value
func (o *IssueDetailed) SetAiRemediationFramework(v string) {
	o.AiRemediationFramework = v
}

// GetTicketUrl returns the TicketUrl field value
func (o *IssueDetailed) GetTicketUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TicketUrl
}

// GetTicketUrlOk returns a tuple with the TicketUrl field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetTicketUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TicketUrl, true
}

// SetTicketUrl sets field value
func (o *IssueDetailed) SetTicketUrl(v string) {
	o.TicketUrl = v
}

// GetLinks returns the Links field value
func (o *IssueDetailed) GetLinks() IssueSummarizedLinks {
	if o == nil {
		var ret IssueSummarizedLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *IssueDetailed) GetLinksOk() (*IssueSummarizedLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *IssueDetailed) SetLinks(v IssueSummarizedLinks) {
	o.Links = v
}

func (o IssueDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["category"] = o.Category
	toSerialize["severity"] = o.Severity
	toSerialize["status"] = o.Status
	toSerialize["context"] = o.Context
	toSerialize["risks"] = o.Risks
	toSerialize["alertUid"] = o.AlertUid
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["asset"] = o.Asset
	toSerialize["lastSeenScanId"] = o.LastSeenScanId
	toSerialize["firstSeenScanId"] = o.FirstSeenScanId
	toSerialize["customRuleId"] = o.CustomRuleId
	toSerialize["aiRemediation"] = o.AiRemediation
	toSerialize["aiRemediationFramework"] = o.AiRemediationFramework
	toSerialize["ticketUrl"] = o.TicketUrl
	toSerialize["links"] = o.Links

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IssueDetailed) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"category",
		"severity",
		"status",
		"context",
		"risks",
		"alertUid",
		"createdAt",
		"asset",
		"lastSeenScanId",
		"firstSeenScanId",
		"customRuleId",
		"aiRemediation",
		"aiRemediationFramework",
		"ticketUrl",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIssueDetailed := _IssueDetailed{}

	err = json.Unmarshal(data, &varIssueDetailed)

	if err != nil {
		return err
	}

	*o = IssueDetailed(varIssueDetailed)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "category")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "status")
		delete(additionalProperties, "context")
		delete(additionalProperties, "risks")
		delete(additionalProperties, "alertUid")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "asset")
		delete(additionalProperties, "lastSeenScanId")
		delete(additionalProperties, "firstSeenScanId")
		delete(additionalProperties, "customRuleId")
		delete(additionalProperties, "aiRemediation")
		delete(additionalProperties, "aiRemediationFramework")
		delete(additionalProperties, "ticketUrl")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIssueDetailed struct {
	value *IssueDetailed
	isSet bool
}

func (v NullableIssueDetailed) Get() *IssueDetailed {
	return v.value
}

func (v *NullableIssueDetailed) Set(val *IssueDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueDetailed(val *IssueDetailed) *NullableIssueDetailed {
	return &NullableIssueDetailed{value: val, isSet: true}
}

func (v NullableIssueDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


