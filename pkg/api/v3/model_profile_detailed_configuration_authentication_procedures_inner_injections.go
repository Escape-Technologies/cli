/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)


// ProfileDetailedConfigurationAuthenticationProceduresInnerInjections struct for ProfileDetailedConfigurationAuthenticationProceduresInnerInjections
type ProfileDetailedConfigurationAuthenticationProceduresInnerInjections struct {
	ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner *[]ProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner
	ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 *[]ProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ProfileDetailedConfigurationAuthenticationProceduresInnerInjections) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner
	err = json.Unmarshal(data, &dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner);
	if err == nil {
		jsonArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner, _ := json.Marshal(dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner)
		if string(jsonArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner) == "{}" { // empty struct
			dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner = nil
		} else {
			return nil // data stored in dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner, return on the first match
		}
	} else {
		dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner = nil
	}

	// try to unmarshal JSON data into ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1
	err = json.Unmarshal(data, &dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1);
	if err == nil {
		jsonArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1, _ := json.Marshal(dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1)
		if string(jsonArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1) == "{}" { // empty struct
			dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 = nil
		} else {
			return nil // data stored in dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1, return on the first match
		}
	} else {
		dst.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ProfileDetailedConfigurationAuthenticationProceduresInnerInjections)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ProfileDetailedConfigurationAuthenticationProceduresInnerInjections) MarshalJSON() ([]byte, error) {
	if src.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner != nil {
		return json.Marshal(&src.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner)
	}

	if src.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 != nil {
		return json.Marshal(&src.ArrayOfProfileDetailedConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections struct {
	value *ProfileDetailedConfigurationAuthenticationProceduresInnerInjections
	isSet bool
}

func (v NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections) Get() *ProfileDetailedConfigurationAuthenticationProceduresInnerInjections {
	return v.value
}

func (v *NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections) Set(val *ProfileDetailedConfigurationAuthenticationProceduresInnerInjections) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections(val *ProfileDetailedConfigurationAuthenticationProceduresInnerInjections) *NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections {
	return &NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationAuthenticationProceduresInnerInjections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


