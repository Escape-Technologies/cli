/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the CreateAssetSchemaRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetSchemaRequest{}

// CreateAssetSchemaRequest struct for CreateAssetSchemaRequest
type CreateAssetSchemaRequest struct {
	// The URL of the asset
	Url *string `json:"url,omitempty"`
	// The data of the asset
	Data *string `json:"data,omitempty"`
	// The proxy ID of the asset
	ProxyId *string `json:"proxyId,omitempty"`
	// The authentication string of the asset
	AuthenticationStr *string `json:"authenticationStr,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAssetSchemaRequest CreateAssetSchemaRequest

// NewCreateAssetSchemaRequest instantiates a new CreateAssetSchemaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetSchemaRequest() *CreateAssetSchemaRequest {
	this := CreateAssetSchemaRequest{}
	return &this
}

// NewCreateAssetSchemaRequestWithDefaults instantiates a new CreateAssetSchemaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetSchemaRequestWithDefaults() *CreateAssetSchemaRequest {
	this := CreateAssetSchemaRequest{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CreateAssetSchemaRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetSchemaRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CreateAssetSchemaRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CreateAssetSchemaRequest) SetUrl(v string) {
	o.Url = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CreateAssetSchemaRequest) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetSchemaRequest) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CreateAssetSchemaRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *CreateAssetSchemaRequest) SetData(v string) {
	o.Data = &v
}

// GetProxyId returns the ProxyId field value if set, zero value otherwise.
func (o *CreateAssetSchemaRequest) GetProxyId() string {
	if o == nil || IsNil(o.ProxyId) {
		var ret string
		return ret
	}
	return *o.ProxyId
}

// GetProxyIdOk returns a tuple with the ProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetSchemaRequest) GetProxyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyId) {
		return nil, false
	}
	return o.ProxyId, true
}

// HasProxyId returns a boolean if a field has been set.
func (o *CreateAssetSchemaRequest) HasProxyId() bool {
	if o != nil && !IsNil(o.ProxyId) {
		return true
	}

	return false
}

// SetProxyId gets a reference to the given string and assigns it to the ProxyId field.
func (o *CreateAssetSchemaRequest) SetProxyId(v string) {
	o.ProxyId = &v
}

// GetAuthenticationStr returns the AuthenticationStr field value if set, zero value otherwise.
func (o *CreateAssetSchemaRequest) GetAuthenticationStr() string {
	if o == nil || IsNil(o.AuthenticationStr) {
		var ret string
		return ret
	}
	return *o.AuthenticationStr
}

// GetAuthenticationStrOk returns a tuple with the AuthenticationStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetSchemaRequest) GetAuthenticationStrOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationStr) {
		return nil, false
	}
	return o.AuthenticationStr, true
}

// HasAuthenticationStr returns a boolean if a field has been set.
func (o *CreateAssetSchemaRequest) HasAuthenticationStr() bool {
	if o != nil && !IsNil(o.AuthenticationStr) {
		return true
	}

	return false
}

// SetAuthenticationStr gets a reference to the given string and assigns it to the AuthenticationStr field.
func (o *CreateAssetSchemaRequest) SetAuthenticationStr(v string) {
	o.AuthenticationStr = &v
}

func (o CreateAssetSchemaRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetSchemaRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.ProxyId) {
		toSerialize["proxyId"] = o.ProxyId
	}
	if !IsNil(o.AuthenticationStr) {
		toSerialize["authenticationStr"] = o.AuthenticationStr
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAssetSchemaRequest) UnmarshalJSON(data []byte) (err error) {
	varCreateAssetSchemaRequest := _CreateAssetSchemaRequest{}

	err = json.Unmarshal(data, &varCreateAssetSchemaRequest)

	if err != nil {
		return err
	}

	*o = CreateAssetSchemaRequest(varCreateAssetSchemaRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "data")
		delete(additionalProperties, "proxyId")
		delete(additionalProperties, "authenticationStr")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAssetSchemaRequest struct {
	value *CreateAssetSchemaRequest
	isSet bool
}

func (v NullableCreateAssetSchemaRequest) Get() *CreateAssetSchemaRequest {
	return v.value
}

func (v *NullableCreateAssetSchemaRequest) Set(val *CreateAssetSchemaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetSchemaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetSchemaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetSchemaRequest(val *CreateAssetSchemaRequest) *NullableCreateAssetSchemaRequest {
	return &NullableCreateAssetSchemaRequest{value: val, isSet: true}
}

func (v NullableCreateAssetSchemaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetSchemaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


