/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomRuleRuleOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomRuleRuleOneOf{}

// CustomRuleRuleOneOf struct for CustomRuleRuleOneOf
type CustomRuleRuleOneOf struct {
	Id string `json:"id"`
	Alert CreateCustomRuleRequestContentRuleOneOfAlert `json:"alert"`
	Type ENUMAPI `json:"type"`
	Seed []CreateCustomRuleRequestContentRuleOneOfSeedInner `json:"seed,omitempty"`
	Transform *CreateCustomRuleRequestContentRuleOneOfTransform `json:"transform,omitempty"`
	Detect []CreateCustomRuleRequestContentRuleOneOfTransformTriggerInner `json:"detect"`
	Extractors []CreateCustomRuleRequestContentRuleOneOfExtractorsInner `json:"extractors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomRuleRuleOneOf CustomRuleRuleOneOf

// NewCustomRuleRuleOneOf instantiates a new CustomRuleRuleOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomRuleRuleOneOf(id string, alert CreateCustomRuleRequestContentRuleOneOfAlert, type_ ENUMAPI, detect []CreateCustomRuleRequestContentRuleOneOfTransformTriggerInner) *CustomRuleRuleOneOf {
	this := CustomRuleRuleOneOf{}
	this.Id = id
	this.Alert = alert
	this.Type = type_
	this.Detect = detect
	return &this
}

// NewCustomRuleRuleOneOfWithDefaults instantiates a new CustomRuleRuleOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomRuleRuleOneOfWithDefaults() *CustomRuleRuleOneOf {
	this := CustomRuleRuleOneOf{}
	return &this
}

// GetId returns the Id field value
func (o *CustomRuleRuleOneOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomRuleRuleOneOf) SetId(v string) {
	o.Id = v
}

// GetAlert returns the Alert field value
func (o *CustomRuleRuleOneOf) GetAlert() CreateCustomRuleRequestContentRuleOneOfAlert {
	if o == nil {
		var ret CreateCustomRuleRequestContentRuleOneOfAlert
		return ret
	}

	return o.Alert
}

// GetAlertOk returns a tuple with the Alert field value
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOf) GetAlertOk() (*CreateCustomRuleRequestContentRuleOneOfAlert, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alert, true
}

// SetAlert sets field value
func (o *CustomRuleRuleOneOf) SetAlert(v CreateCustomRuleRequestContentRuleOneOfAlert) {
	o.Alert = v
}

// GetType returns the Type field value
func (o *CustomRuleRuleOneOf) GetType() ENUMAPI {
	if o == nil {
		var ret ENUMAPI
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOf) GetTypeOk() (*ENUMAPI, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CustomRuleRuleOneOf) SetType(v ENUMAPI) {
	o.Type = v
}

// GetSeed returns the Seed field value if set, zero value otherwise.
func (o *CustomRuleRuleOneOf) GetSeed() []CreateCustomRuleRequestContentRuleOneOfSeedInner {
	if o == nil || IsNil(o.Seed) {
		var ret []CreateCustomRuleRequestContentRuleOneOfSeedInner
		return ret
	}
	return o.Seed
}

// GetSeedOk returns a tuple with the Seed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOf) GetSeedOk() ([]CreateCustomRuleRequestContentRuleOneOfSeedInner, bool) {
	if o == nil || IsNil(o.Seed) {
		return nil, false
	}
	return o.Seed, true
}

// HasSeed returns a boolean if a field has been set.
func (o *CustomRuleRuleOneOf) HasSeed() bool {
	if o != nil && !IsNil(o.Seed) {
		return true
	}

	return false
}

// SetSeed gets a reference to the given []CreateCustomRuleRequestContentRuleOneOfSeedInner and assigns it to the Seed field.
func (o *CustomRuleRuleOneOf) SetSeed(v []CreateCustomRuleRequestContentRuleOneOfSeedInner) {
	o.Seed = v
}

// GetTransform returns the Transform field value if set, zero value otherwise.
func (o *CustomRuleRuleOneOf) GetTransform() CreateCustomRuleRequestContentRuleOneOfTransform {
	if o == nil || IsNil(o.Transform) {
		var ret CreateCustomRuleRequestContentRuleOneOfTransform
		return ret
	}
	return *o.Transform
}

// GetTransformOk returns a tuple with the Transform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOf) GetTransformOk() (*CreateCustomRuleRequestContentRuleOneOfTransform, bool) {
	if o == nil || IsNil(o.Transform) {
		return nil, false
	}
	return o.Transform, true
}

// HasTransform returns a boolean if a field has been set.
func (o *CustomRuleRuleOneOf) HasTransform() bool {
	if o != nil && !IsNil(o.Transform) {
		return true
	}

	return false
}

// SetTransform gets a reference to the given CreateCustomRuleRequestContentRuleOneOfTransform and assigns it to the Transform field.
func (o *CustomRuleRuleOneOf) SetTransform(v CreateCustomRuleRequestContentRuleOneOfTransform) {
	o.Transform = &v
}

// GetDetect returns the Detect field value
func (o *CustomRuleRuleOneOf) GetDetect() []CreateCustomRuleRequestContentRuleOneOfTransformTriggerInner {
	if o == nil {
		var ret []CreateCustomRuleRequestContentRuleOneOfTransformTriggerInner
		return ret
	}

	return o.Detect
}

// GetDetectOk returns a tuple with the Detect field value
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOf) GetDetectOk() ([]CreateCustomRuleRequestContentRuleOneOfTransformTriggerInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Detect, true
}

// SetDetect sets field value
func (o *CustomRuleRuleOneOf) SetDetect(v []CreateCustomRuleRequestContentRuleOneOfTransformTriggerInner) {
	o.Detect = v
}

// GetExtractors returns the Extractors field value if set, zero value otherwise.
func (o *CustomRuleRuleOneOf) GetExtractors() []CreateCustomRuleRequestContentRuleOneOfExtractorsInner {
	if o == nil || IsNil(o.Extractors) {
		var ret []CreateCustomRuleRequestContentRuleOneOfExtractorsInner
		return ret
	}
	return o.Extractors
}

// GetExtractorsOk returns a tuple with the Extractors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOf) GetExtractorsOk() ([]CreateCustomRuleRequestContentRuleOneOfExtractorsInner, bool) {
	if o == nil || IsNil(o.Extractors) {
		return nil, false
	}
	return o.Extractors, true
}

// HasExtractors returns a boolean if a field has been set.
func (o *CustomRuleRuleOneOf) HasExtractors() bool {
	if o != nil && !IsNil(o.Extractors) {
		return true
	}

	return false
}

// SetExtractors gets a reference to the given []CreateCustomRuleRequestContentRuleOneOfExtractorsInner and assigns it to the Extractors field.
func (o *CustomRuleRuleOneOf) SetExtractors(v []CreateCustomRuleRequestContentRuleOneOfExtractorsInner) {
	o.Extractors = v
}

func (o CustomRuleRuleOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomRuleRuleOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["alert"] = o.Alert
	toSerialize["type"] = o.Type
	if !IsNil(o.Seed) {
		toSerialize["seed"] = o.Seed
	}
	if !IsNil(o.Transform) {
		toSerialize["transform"] = o.Transform
	}
	toSerialize["detect"] = o.Detect
	if !IsNil(o.Extractors) {
		toSerialize["extractors"] = o.Extractors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomRuleRuleOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"alert",
		"type",
		"detect",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomRuleRuleOneOf := _CustomRuleRuleOneOf{}

	err = json.Unmarshal(data, &varCustomRuleRuleOneOf)

	if err != nil {
		return err
	}

	*o = CustomRuleRuleOneOf(varCustomRuleRuleOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "alert")
		delete(additionalProperties, "type")
		delete(additionalProperties, "seed")
		delete(additionalProperties, "transform")
		delete(additionalProperties, "detect")
		delete(additionalProperties, "extractors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomRuleRuleOneOf struct {
	value *CustomRuleRuleOneOf
	isSet bool
}

func (v NullableCustomRuleRuleOneOf) Get() *CustomRuleRuleOneOf {
	return v.value
}

func (v *NullableCustomRuleRuleOneOf) Set(val *CustomRuleRuleOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRuleRuleOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRuleRuleOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRuleRuleOneOf(val *CustomRuleRuleOneOf) *NullableCustomRuleRuleOneOf {
	return &NullableCustomRuleRuleOneOf{value: val, isSet: true}
}

func (v NullableCustomRuleRuleOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRuleRuleOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


