/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CreateProject200ResponseBindingsInnerUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProject200ResponseBindingsInnerUser{}

// CreateProject200ResponseBindingsInnerUser struct for CreateProject200ResponseBindingsInnerUser
type CreateProject200ResponseBindingsInnerUser struct {
	// The id of the user
	Id string `json:"id"`
	// The email of the user
	Email string `json:"email"`
	// The date and time the user was created
	CreatedAt time.Time `json:"createdAt"`
	// The date and time the user was activated
	ActivatedAt *time.Time `json:"activatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateProject200ResponseBindingsInnerUser CreateProject200ResponseBindingsInnerUser

// NewCreateProject200ResponseBindingsInnerUser instantiates a new CreateProject200ResponseBindingsInnerUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProject200ResponseBindingsInnerUser(id string, email string, createdAt time.Time) *CreateProject200ResponseBindingsInnerUser {
	this := CreateProject200ResponseBindingsInnerUser{}
	this.Id = id
	this.Email = email
	this.CreatedAt = createdAt
	return &this
}

// NewCreateProject200ResponseBindingsInnerUserWithDefaults instantiates a new CreateProject200ResponseBindingsInnerUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProject200ResponseBindingsInnerUserWithDefaults() *CreateProject200ResponseBindingsInnerUser {
	this := CreateProject200ResponseBindingsInnerUser{}
	return &this
}

// GetId returns the Id field value
func (o *CreateProject200ResponseBindingsInnerUser) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInnerUser) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateProject200ResponseBindingsInnerUser) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *CreateProject200ResponseBindingsInnerUser) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInnerUser) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateProject200ResponseBindingsInnerUser) SetEmail(v string) {
	o.Email = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateProject200ResponseBindingsInnerUser) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInnerUser) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateProject200ResponseBindingsInnerUser) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetActivatedAt returns the ActivatedAt field value if set, zero value otherwise.
func (o *CreateProject200ResponseBindingsInnerUser) GetActivatedAt() time.Time {
	if o == nil || IsNil(o.ActivatedAt) {
		var ret time.Time
		return ret
	}
	return *o.ActivatedAt
}

// GetActivatedAtOk returns a tuple with the ActivatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProject200ResponseBindingsInnerUser) GetActivatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActivatedAt) {
		return nil, false
	}
	return o.ActivatedAt, true
}

// HasActivatedAt returns a boolean if a field has been set.
func (o *CreateProject200ResponseBindingsInnerUser) HasActivatedAt() bool {
	if o != nil && !IsNil(o.ActivatedAt) {
		return true
	}

	return false
}

// SetActivatedAt gets a reference to the given time.Time and assigns it to the ActivatedAt field.
func (o *CreateProject200ResponseBindingsInnerUser) SetActivatedAt(v time.Time) {
	o.ActivatedAt = &v
}

func (o CreateProject200ResponseBindingsInnerUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProject200ResponseBindingsInnerUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["email"] = o.Email
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.ActivatedAt) {
		toSerialize["activatedAt"] = o.ActivatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateProject200ResponseBindingsInnerUser) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"email",
		"createdAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProject200ResponseBindingsInnerUser := _CreateProject200ResponseBindingsInnerUser{}

	err = json.Unmarshal(data, &varCreateProject200ResponseBindingsInnerUser)

	if err != nil {
		return err
	}

	*o = CreateProject200ResponseBindingsInnerUser(varCreateProject200ResponseBindingsInnerUser)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "email")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "activatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateProject200ResponseBindingsInnerUser struct {
	value *CreateProject200ResponseBindingsInnerUser
	isSet bool
}

func (v NullableCreateProject200ResponseBindingsInnerUser) Get() *CreateProject200ResponseBindingsInnerUser {
	return v.value
}

func (v *NullableCreateProject200ResponseBindingsInnerUser) Set(val *CreateProject200ResponseBindingsInnerUser) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProject200ResponseBindingsInnerUser) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProject200ResponseBindingsInnerUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProject200ResponseBindingsInnerUser(val *CreateProject200ResponseBindingsInnerUser) *NullableCreateProject200ResponseBindingsInnerUser {
	return &NullableCreateProject200ResponseBindingsInnerUser{value: val, isSet: true}
}

func (v NullableCreateProject200ResponseBindingsInnerUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProject200ResponseBindingsInnerUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


