/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateRoleBindingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRoleBindingsRequest{}

// CreateRoleBindingsRequest struct for CreateRoleBindingsRequest
type CreateRoleBindingsRequest struct {
	// The role bindings to create
	Bindings []CreateRoleBindingsRequestBindingsInner `json:"bindings"`
	AdditionalProperties map[string]interface{}
}

type _CreateRoleBindingsRequest CreateRoleBindingsRequest

// NewCreateRoleBindingsRequest instantiates a new CreateRoleBindingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRoleBindingsRequest(bindings []CreateRoleBindingsRequestBindingsInner) *CreateRoleBindingsRequest {
	this := CreateRoleBindingsRequest{}
	this.Bindings = bindings
	return &this
}

// NewCreateRoleBindingsRequestWithDefaults instantiates a new CreateRoleBindingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRoleBindingsRequestWithDefaults() *CreateRoleBindingsRequest {
	this := CreateRoleBindingsRequest{}
	return &this
}

// GetBindings returns the Bindings field value
func (o *CreateRoleBindingsRequest) GetBindings() []CreateRoleBindingsRequestBindingsInner {
	if o == nil {
		var ret []CreateRoleBindingsRequestBindingsInner
		return ret
	}

	return o.Bindings
}

// GetBindingsOk returns a tuple with the Bindings field value
// and a boolean to check if the value has been set.
func (o *CreateRoleBindingsRequest) GetBindingsOk() ([]CreateRoleBindingsRequestBindingsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bindings, true
}

// SetBindings sets field value
func (o *CreateRoleBindingsRequest) SetBindings(v []CreateRoleBindingsRequestBindingsInner) {
	o.Bindings = v
}

func (o CreateRoleBindingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRoleBindingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bindings"] = o.Bindings

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateRoleBindingsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bindings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRoleBindingsRequest := _CreateRoleBindingsRequest{}

	err = json.Unmarshal(data, &varCreateRoleBindingsRequest)

	if err != nil {
		return err
	}

	*o = CreateRoleBindingsRequest(varCreateRoleBindingsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bindings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateRoleBindingsRequest struct {
	value *CreateRoleBindingsRequest
	isSet bool
}

func (v NullableCreateRoleBindingsRequest) Get() *CreateRoleBindingsRequest {
	return v.value
}

func (v *NullableCreateRoleBindingsRequest) Set(val *CreateRoleBindingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRoleBindingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRoleBindingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRoleBindingsRequest(val *CreateRoleBindingsRequest) *NullableCreateRoleBindingsRequest {
	return &NullableCreateRoleBindingsRequest{value: val, isSet: true}
}

func (v NullableCreateRoleBindingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRoleBindingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


