/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the GraphQLSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphQLSchema{}

// GraphQLSchema struct for GraphQLSchema
type GraphQLSchema struct {
	AssetClass ENUMSCHEMA `json:"asset_class"`
	WizProviderId *string `json:"wiz_provider_id,omitempty"`
	WizCloudPlatform *string `json:"wiz_cloud_platform,omitempty"`
	ExtraMetadata map[string]interface{} `json:"extra_metadata,omitempty"`
	AssetType ENUMGRAPHQLSCHEMA `json:"asset_type"`
	Name string `json:"name"`
	Key string `json:"key"`
	S3Key string `json:"s3_key"`
	Generated *bool `json:"generated,omitempty"`
	Source *ENUM0PROPERTIESSOURCE `json:"source,omitempty"`
	Url *string `json:"url,omitempty"`
	Hash *string `json:"hash,omitempty"`
	ReachableVia []string `json:"reachable_via,omitempty"`
	Operations []CreateAssetGRAPHQLRequestOperationsInner `json:"operations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GraphQLSchema GraphQLSchema

// NewGraphQLSchema instantiates a new GraphQLSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLSchema(assetClass ENUMSCHEMA, assetType ENUMGRAPHQLSCHEMA, name string, key string, s3Key string) *GraphQLSchema {
	this := GraphQLSchema{}
	this.AssetClass = assetClass
	this.AssetType = assetType
	this.Name = name
	this.Key = key
	this.S3Key = s3Key
	return &this
}

// NewGraphQLSchemaWithDefaults instantiates a new GraphQLSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLSchemaWithDefaults() *GraphQLSchema {
	this := GraphQLSchema{}
	return &this
}

// GetAssetClass returns the AssetClass field value
func (o *GraphQLSchema) GetAssetClass() ENUMSCHEMA {
	if o == nil {
		var ret ENUMSCHEMA
		return ret
	}

	return o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetAssetClassOk() (*ENUMSCHEMA, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetClass, true
}

// SetAssetClass sets field value
func (o *GraphQLSchema) SetAssetClass(v ENUMSCHEMA) {
	o.AssetClass = v
}

// GetWizProviderId returns the WizProviderId field value if set, zero value otherwise.
func (o *GraphQLSchema) GetWizProviderId() string {
	if o == nil || IsNil(o.WizProviderId) {
		var ret string
		return ret
	}
	return *o.WizProviderId
}

// GetWizProviderIdOk returns a tuple with the WizProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetWizProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.WizProviderId) {
		return nil, false
	}
	return o.WizProviderId, true
}

// HasWizProviderId returns a boolean if a field has been set.
func (o *GraphQLSchema) HasWizProviderId() bool {
	if o != nil && !IsNil(o.WizProviderId) {
		return true
	}

	return false
}

// SetWizProviderId gets a reference to the given string and assigns it to the WizProviderId field.
func (o *GraphQLSchema) SetWizProviderId(v string) {
	o.WizProviderId = &v
}

// GetWizCloudPlatform returns the WizCloudPlatform field value if set, zero value otherwise.
func (o *GraphQLSchema) GetWizCloudPlatform() string {
	if o == nil || IsNil(o.WizCloudPlatform) {
		var ret string
		return ret
	}
	return *o.WizCloudPlatform
}

// GetWizCloudPlatformOk returns a tuple with the WizCloudPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetWizCloudPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.WizCloudPlatform) {
		return nil, false
	}
	return o.WizCloudPlatform, true
}

// HasWizCloudPlatform returns a boolean if a field has been set.
func (o *GraphQLSchema) HasWizCloudPlatform() bool {
	if o != nil && !IsNil(o.WizCloudPlatform) {
		return true
	}

	return false
}

// SetWizCloudPlatform gets a reference to the given string and assigns it to the WizCloudPlatform field.
func (o *GraphQLSchema) SetWizCloudPlatform(v string) {
	o.WizCloudPlatform = &v
}

// GetExtraMetadata returns the ExtraMetadata field value if set, zero value otherwise.
func (o *GraphQLSchema) GetExtraMetadata() map[string]interface{} {
	if o == nil || IsNil(o.ExtraMetadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtraMetadata
}

// GetExtraMetadataOk returns a tuple with the ExtraMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetExtraMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtraMetadata) {
		return map[string]interface{}{}, false
	}
	return o.ExtraMetadata, true
}

// HasExtraMetadata returns a boolean if a field has been set.
func (o *GraphQLSchema) HasExtraMetadata() bool {
	if o != nil && !IsNil(o.ExtraMetadata) {
		return true
	}

	return false
}

// SetExtraMetadata gets a reference to the given map[string]interface{} and assigns it to the ExtraMetadata field.
func (o *GraphQLSchema) SetExtraMetadata(v map[string]interface{}) {
	o.ExtraMetadata = v
}

// GetAssetType returns the AssetType field value
func (o *GraphQLSchema) GetAssetType() ENUMGRAPHQLSCHEMA {
	if o == nil {
		var ret ENUMGRAPHQLSCHEMA
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetAssetTypeOk() (*ENUMGRAPHQLSCHEMA, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *GraphQLSchema) SetAssetType(v ENUMGRAPHQLSCHEMA) {
	o.AssetType = v
}

// GetName returns the Name field value
func (o *GraphQLSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GraphQLSchema) SetName(v string) {
	o.Name = v
}

// GetKey returns the Key field value
func (o *GraphQLSchema) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *GraphQLSchema) SetKey(v string) {
	o.Key = v
}

// GetS3Key returns the S3Key field value
func (o *GraphQLSchema) GetS3Key() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.S3Key
}

// GetS3KeyOk returns a tuple with the S3Key field value
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetS3KeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.S3Key, true
}

// SetS3Key sets field value
func (o *GraphQLSchema) SetS3Key(v string) {
	o.S3Key = v
}

// GetGenerated returns the Generated field value if set, zero value otherwise.
func (o *GraphQLSchema) GetGenerated() bool {
	if o == nil || IsNil(o.Generated) {
		var ret bool
		return ret
	}
	return *o.Generated
}

// GetGeneratedOk returns a tuple with the Generated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetGeneratedOk() (*bool, bool) {
	if o == nil || IsNil(o.Generated) {
		return nil, false
	}
	return o.Generated, true
}

// HasGenerated returns a boolean if a field has been set.
func (o *GraphQLSchema) HasGenerated() bool {
	if o != nil && !IsNil(o.Generated) {
		return true
	}

	return false
}

// SetGenerated gets a reference to the given bool and assigns it to the Generated field.
func (o *GraphQLSchema) SetGenerated(v bool) {
	o.Generated = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *GraphQLSchema) GetSource() ENUM0PROPERTIESSOURCE {
	if o == nil || IsNil(o.Source) {
		var ret ENUM0PROPERTIESSOURCE
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetSourceOk() (*ENUM0PROPERTIESSOURCE, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *GraphQLSchema) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given ENUM0PROPERTIESSOURCE and assigns it to the Source field.
func (o *GraphQLSchema) SetSource(v ENUM0PROPERTIESSOURCE) {
	o.Source = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GraphQLSchema) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GraphQLSchema) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GraphQLSchema) SetUrl(v string) {
	o.Url = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *GraphQLSchema) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *GraphQLSchema) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *GraphQLSchema) SetHash(v string) {
	o.Hash = &v
}

// GetReachableVia returns the ReachableVia field value if set, zero value otherwise.
func (o *GraphQLSchema) GetReachableVia() []string {
	if o == nil || IsNil(o.ReachableVia) {
		var ret []string
		return ret
	}
	return o.ReachableVia
}

// GetReachableViaOk returns a tuple with the ReachableVia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetReachableViaOk() ([]string, bool) {
	if o == nil || IsNil(o.ReachableVia) {
		return nil, false
	}
	return o.ReachableVia, true
}

// HasReachableVia returns a boolean if a field has been set.
func (o *GraphQLSchema) HasReachableVia() bool {
	if o != nil && !IsNil(o.ReachableVia) {
		return true
	}

	return false
}

// SetReachableVia gets a reference to the given []string and assigns it to the ReachableVia field.
func (o *GraphQLSchema) SetReachableVia(v []string) {
	o.ReachableVia = v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *GraphQLSchema) GetOperations() []CreateAssetGRAPHQLRequestOperationsInner {
	if o == nil || IsNil(o.Operations) {
		var ret []CreateAssetGRAPHQLRequestOperationsInner
		return ret
	}
	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLSchema) GetOperationsOk() ([]CreateAssetGRAPHQLRequestOperationsInner, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *GraphQLSchema) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given []CreateAssetGRAPHQLRequestOperationsInner and assigns it to the Operations field.
func (o *GraphQLSchema) SetOperations(v []CreateAssetGRAPHQLRequestOperationsInner) {
	o.Operations = v
}

func (o GraphQLSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphQLSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_class"] = o.AssetClass
	if !IsNil(o.WizProviderId) {
		toSerialize["wiz_provider_id"] = o.WizProviderId
	}
	if !IsNil(o.WizCloudPlatform) {
		toSerialize["wiz_cloud_platform"] = o.WizCloudPlatform
	}
	if !IsNil(o.ExtraMetadata) {
		toSerialize["extra_metadata"] = o.ExtraMetadata
	}
	toSerialize["asset_type"] = o.AssetType
	toSerialize["name"] = o.Name
	toSerialize["key"] = o.Key
	toSerialize["s3_key"] = o.S3Key
	if !IsNil(o.Generated) {
		toSerialize["generated"] = o.Generated
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.ReachableVia) {
		toSerialize["reachable_via"] = o.ReachableVia
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GraphQLSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_class",
		"asset_type",
		"name",
		"key",
		"s3_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGraphQLSchema := _GraphQLSchema{}

	err = json.Unmarshal(data, &varGraphQLSchema)

	if err != nil {
		return err
	}

	*o = GraphQLSchema(varGraphQLSchema)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asset_class")
		delete(additionalProperties, "wiz_provider_id")
		delete(additionalProperties, "wiz_cloud_platform")
		delete(additionalProperties, "extra_metadata")
		delete(additionalProperties, "asset_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "key")
		delete(additionalProperties, "s3_key")
		delete(additionalProperties, "generated")
		delete(additionalProperties, "source")
		delete(additionalProperties, "url")
		delete(additionalProperties, "hash")
		delete(additionalProperties, "reachable_via")
		delete(additionalProperties, "operations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGraphQLSchema struct {
	value *GraphQLSchema
	isSet bool
}

func (v NullableGraphQLSchema) Get() *GraphQLSchema {
	return v.value
}

func (v *NullableGraphQLSchema) Set(val *GraphQLSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLSchema(val *GraphQLSchema) *NullableGraphQLSchema {
	return &NullableGraphQLSchema{value: val, isSet: true}
}

func (v NullableGraphQLSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


