/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAssetIPV4Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetIPV4Request{}

// CreateAssetIPV4Request struct for CreateAssetIPV4Request
type CreateAssetIPV4Request struct {
	AssetClass ENUMHOST `json:"asset_class"`
	AssetType ENUMIPV4 `json:"asset_type"`
	Address string `json:"address"`
	Favicon *string `json:"favicon,omitempty"`
	OpenPorts []CreateAssetDNSRequestOpenPortsInner `json:"open_ports,omitempty"`
	WizProviderId *string `json:"wiz_provider_id,omitempty"`
	WizCloudPlatform *string `json:"wiz_cloud_platform,omitempty"`
	PortsInsights []float32 `json:"ports_insights,omitempty"`
	PathsInsights []CreateAssetDNSRequestPathsInsightsInner `json:"paths_insights,omitempty"`
	Organization *string `json:"organization,omitempty"`
	Country *string `json:"country,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAssetIPV4Request CreateAssetIPV4Request

// NewCreateAssetIPV4Request instantiates a new CreateAssetIPV4Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetIPV4Request(assetClass ENUMHOST, assetType ENUMIPV4, address string) *CreateAssetIPV4Request {
	this := CreateAssetIPV4Request{}
	this.AssetClass = assetClass
	this.AssetType = assetType
	this.Address = address
	return &this
}

// NewCreateAssetIPV4RequestWithDefaults instantiates a new CreateAssetIPV4Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetIPV4RequestWithDefaults() *CreateAssetIPV4Request {
	this := CreateAssetIPV4Request{}
	return &this
}

// GetAssetClass returns the AssetClass field value
func (o *CreateAssetIPV4Request) GetAssetClass() ENUMHOST {
	if o == nil {
		var ret ENUMHOST
		return ret
	}

	return o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetAssetClassOk() (*ENUMHOST, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetClass, true
}

// SetAssetClass sets field value
func (o *CreateAssetIPV4Request) SetAssetClass(v ENUMHOST) {
	o.AssetClass = v
}

// GetAssetType returns the AssetType field value
func (o *CreateAssetIPV4Request) GetAssetType() ENUMIPV4 {
	if o == nil {
		var ret ENUMIPV4
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetAssetTypeOk() (*ENUMIPV4, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *CreateAssetIPV4Request) SetAssetType(v ENUMIPV4) {
	o.AssetType = v
}

// GetAddress returns the Address field value
func (o *CreateAssetIPV4Request) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *CreateAssetIPV4Request) SetAddress(v string) {
	o.Address = v
}

// GetFavicon returns the Favicon field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetFavicon() string {
	if o == nil || IsNil(o.Favicon) {
		var ret string
		return ret
	}
	return *o.Favicon
}

// GetFaviconOk returns a tuple with the Favicon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetFaviconOk() (*string, bool) {
	if o == nil || IsNil(o.Favicon) {
		return nil, false
	}
	return o.Favicon, true
}

// HasFavicon returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasFavicon() bool {
	if o != nil && !IsNil(o.Favicon) {
		return true
	}

	return false
}

// SetFavicon gets a reference to the given string and assigns it to the Favicon field.
func (o *CreateAssetIPV4Request) SetFavicon(v string) {
	o.Favicon = &v
}

// GetOpenPorts returns the OpenPorts field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetOpenPorts() []CreateAssetDNSRequestOpenPortsInner {
	if o == nil || IsNil(o.OpenPorts) {
		var ret []CreateAssetDNSRequestOpenPortsInner
		return ret
	}
	return o.OpenPorts
}

// GetOpenPortsOk returns a tuple with the OpenPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetOpenPortsOk() ([]CreateAssetDNSRequestOpenPortsInner, bool) {
	if o == nil || IsNil(o.OpenPorts) {
		return nil, false
	}
	return o.OpenPorts, true
}

// HasOpenPorts returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasOpenPorts() bool {
	if o != nil && !IsNil(o.OpenPorts) {
		return true
	}

	return false
}

// SetOpenPorts gets a reference to the given []CreateAssetDNSRequestOpenPortsInner and assigns it to the OpenPorts field.
func (o *CreateAssetIPV4Request) SetOpenPorts(v []CreateAssetDNSRequestOpenPortsInner) {
	o.OpenPorts = v
}

// GetWizProviderId returns the WizProviderId field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetWizProviderId() string {
	if o == nil || IsNil(o.WizProviderId) {
		var ret string
		return ret
	}
	return *o.WizProviderId
}

// GetWizProviderIdOk returns a tuple with the WizProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetWizProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.WizProviderId) {
		return nil, false
	}
	return o.WizProviderId, true
}

// HasWizProviderId returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasWizProviderId() bool {
	if o != nil && !IsNil(o.WizProviderId) {
		return true
	}

	return false
}

// SetWizProviderId gets a reference to the given string and assigns it to the WizProviderId field.
func (o *CreateAssetIPV4Request) SetWizProviderId(v string) {
	o.WizProviderId = &v
}

// GetWizCloudPlatform returns the WizCloudPlatform field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetWizCloudPlatform() string {
	if o == nil || IsNil(o.WizCloudPlatform) {
		var ret string
		return ret
	}
	return *o.WizCloudPlatform
}

// GetWizCloudPlatformOk returns a tuple with the WizCloudPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetWizCloudPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.WizCloudPlatform) {
		return nil, false
	}
	return o.WizCloudPlatform, true
}

// HasWizCloudPlatform returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasWizCloudPlatform() bool {
	if o != nil && !IsNil(o.WizCloudPlatform) {
		return true
	}

	return false
}

// SetWizCloudPlatform gets a reference to the given string and assigns it to the WizCloudPlatform field.
func (o *CreateAssetIPV4Request) SetWizCloudPlatform(v string) {
	o.WizCloudPlatform = &v
}

// GetPortsInsights returns the PortsInsights field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetPortsInsights() []float32 {
	if o == nil || IsNil(o.PortsInsights) {
		var ret []float32
		return ret
	}
	return o.PortsInsights
}

// GetPortsInsightsOk returns a tuple with the PortsInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetPortsInsightsOk() ([]float32, bool) {
	if o == nil || IsNil(o.PortsInsights) {
		return nil, false
	}
	return o.PortsInsights, true
}

// HasPortsInsights returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasPortsInsights() bool {
	if o != nil && !IsNil(o.PortsInsights) {
		return true
	}

	return false
}

// SetPortsInsights gets a reference to the given []float32 and assigns it to the PortsInsights field.
func (o *CreateAssetIPV4Request) SetPortsInsights(v []float32) {
	o.PortsInsights = v
}

// GetPathsInsights returns the PathsInsights field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetPathsInsights() []CreateAssetDNSRequestPathsInsightsInner {
	if o == nil || IsNil(o.PathsInsights) {
		var ret []CreateAssetDNSRequestPathsInsightsInner
		return ret
	}
	return o.PathsInsights
}

// GetPathsInsightsOk returns a tuple with the PathsInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetPathsInsightsOk() ([]CreateAssetDNSRequestPathsInsightsInner, bool) {
	if o == nil || IsNil(o.PathsInsights) {
		return nil, false
	}
	return o.PathsInsights, true
}

// HasPathsInsights returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasPathsInsights() bool {
	if o != nil && !IsNil(o.PathsInsights) {
		return true
	}

	return false
}

// SetPathsInsights gets a reference to the given []CreateAssetDNSRequestPathsInsightsInner and assigns it to the PathsInsights field.
func (o *CreateAssetIPV4Request) SetPathsInsights(v []CreateAssetDNSRequestPathsInsightsInner) {
	o.PathsInsights = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *CreateAssetIPV4Request) SetOrganization(v string) {
	o.Organization = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CreateAssetIPV4Request) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetIPV4Request) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CreateAssetIPV4Request) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CreateAssetIPV4Request) SetCountry(v string) {
	o.Country = &v
}

func (o CreateAssetIPV4Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetIPV4Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_class"] = o.AssetClass
	toSerialize["asset_type"] = o.AssetType
	toSerialize["address"] = o.Address
	if !IsNil(o.Favicon) {
		toSerialize["favicon"] = o.Favicon
	}
	if !IsNil(o.OpenPorts) {
		toSerialize["open_ports"] = o.OpenPorts
	}
	if !IsNil(o.WizProviderId) {
		toSerialize["wiz_provider_id"] = o.WizProviderId
	}
	if !IsNil(o.WizCloudPlatform) {
		toSerialize["wiz_cloud_platform"] = o.WizCloudPlatform
	}
	if !IsNil(o.PortsInsights) {
		toSerialize["ports_insights"] = o.PortsInsights
	}
	if !IsNil(o.PathsInsights) {
		toSerialize["paths_insights"] = o.PathsInsights
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAssetIPV4Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_class",
		"asset_type",
		"address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetIPV4Request := _CreateAssetIPV4Request{}

	err = json.Unmarshal(data, &varCreateAssetIPV4Request)

	if err != nil {
		return err
	}

	*o = CreateAssetIPV4Request(varCreateAssetIPV4Request)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asset_class")
		delete(additionalProperties, "asset_type")
		delete(additionalProperties, "address")
		delete(additionalProperties, "favicon")
		delete(additionalProperties, "open_ports")
		delete(additionalProperties, "wiz_provider_id")
		delete(additionalProperties, "wiz_cloud_platform")
		delete(additionalProperties, "ports_insights")
		delete(additionalProperties, "paths_insights")
		delete(additionalProperties, "organization")
		delete(additionalProperties, "country")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAssetIPV4Request struct {
	value *CreateAssetIPV4Request
	isSet bool
}

func (v NullableCreateAssetIPV4Request) Get() *CreateAssetIPV4Request {
	return v.value
}

func (v *NullableCreateAssetIPV4Request) Set(val *CreateAssetIPV4Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetIPV4Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetIPV4Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetIPV4Request(val *CreateAssetIPV4Request) *NullableCreateAssetIPV4Request {
	return &NullableCreateAssetIPV4Request{value: val, isSet: true}
}

func (v NullableCreateAssetIPV4Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetIPV4Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


