/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// EnumC48f4480ca763c1e3645aed08c52cfc1 the model 'EnumC48f4480ca763c1e3645aed08c52cfc1'
type EnumC48f4480ca763c1e3645aed08c52cfc1 string

// List of Enum_c48f4480ca763c1e3645aed08c52cfc1
const (
	ENUMC48F4480CA763C1E3645AED08C52CFC1_STANDARD_1 EnumC48f4480ca763c1e3645aed08c52cfc1 = "Standard-1"
	ENUMC48F4480CA763C1E3645AED08C52CFC1_STANDARD_2 EnumC48f4480ca763c1e3645aed08c52cfc1 = "Standard-2"
	ENUMC48F4480CA763C1E3645AED08C52CFC1_STANDARD_3 EnumC48f4480ca763c1e3645aed08c52cfc1 = "Standard-3"
	ENUMC48F4480CA763C1E3645AED08C52CFC1_STANDARD_4 EnumC48f4480ca763c1e3645aed08c52cfc1 = "Standard-4"
	ENUMC48F4480CA763C1E3645AED08C52CFC1_STANDARD_5 EnumC48f4480ca763c1e3645aed08c52cfc1 = "Standard-5"
)

// All allowed values of EnumC48f4480ca763c1e3645aed08c52cfc1 enum
var AllowedEnumC48f4480ca763c1e3645aed08c52cfc1EnumValues = []EnumC48f4480ca763c1e3645aed08c52cfc1{
	"Standard-1",
	"Standard-2",
	"Standard-3",
	"Standard-4",
	"Standard-5",
}

func (v *EnumC48f4480ca763c1e3645aed08c52cfc1) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumC48f4480ca763c1e3645aed08c52cfc1(value)
	for _, existing := range AllowedEnumC48f4480ca763c1e3645aed08c52cfc1EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumC48f4480ca763c1e3645aed08c52cfc1", value)
}

// NewEnumC48f4480ca763c1e3645aed08c52cfc1FromValue returns a pointer to a valid EnumC48f4480ca763c1e3645aed08c52cfc1
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumC48f4480ca763c1e3645aed08c52cfc1FromValue(v string) (*EnumC48f4480ca763c1e3645aed08c52cfc1, error) {
	ev := EnumC48f4480ca763c1e3645aed08c52cfc1(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumC48f4480ca763c1e3645aed08c52cfc1: valid values are %v", v, AllowedEnumC48f4480ca763c1e3645aed08c52cfc1EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumC48f4480ca763c1e3645aed08c52cfc1) IsValid() bool {
	for _, existing := range AllowedEnumC48f4480ca763c1e3645aed08c52cfc1EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_c48f4480ca763c1e3645aed08c52cfc1 value
func (v EnumC48f4480ca763c1e3645aed08c52cfc1) Ptr() *EnumC48f4480ca763c1e3645aed08c52cfc1 {
	return &v
}

type NullableEnumC48f4480ca763c1e3645aed08c52cfc1 struct {
	value *EnumC48f4480ca763c1e3645aed08c52cfc1
	isSet bool
}

func (v NullableEnumC48f4480ca763c1e3645aed08c52cfc1) Get() *EnumC48f4480ca763c1e3645aed08c52cfc1 {
	return v.value
}

func (v *NullableEnumC48f4480ca763c1e3645aed08c52cfc1) Set(val *EnumC48f4480ca763c1e3645aed08c52cfc1) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumC48f4480ca763c1e3645aed08c52cfc1) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumC48f4480ca763c1e3645aed08c52cfc1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumC48f4480ca763c1e3645aed08c52cfc1(val *EnumC48f4480ca763c1e3645aed08c52cfc1) *NullableEnumC48f4480ca763c1e3645aed08c52cfc1 {
	return &NullableEnumC48f4480ca763c1e3645aed08c52cfc1{value: val, isSet: true}
}

func (v NullableEnumC48f4480ca763c1e3645aed08c52cfc1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumC48f4480ca763c1e3645aed08c52cfc1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

