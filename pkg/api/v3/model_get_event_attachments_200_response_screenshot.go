/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the GetEventAttachments200ResponseScreenshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEventAttachments200ResponseScreenshot{}

// GetEventAttachments200ResponseScreenshot struct for GetEventAttachments200ResponseScreenshot
type GetEventAttachments200ResponseScreenshot struct {
	Alt string `json:"alt"`
	CreatedAt string `json:"createdAt"`
	Id string `json:"id"`
	TemporarySignedUrl string `json:"temporarySignedUrl"`
	AdditionalProperties map[string]interface{}
}

type _GetEventAttachments200ResponseScreenshot GetEventAttachments200ResponseScreenshot

// NewGetEventAttachments200ResponseScreenshot instantiates a new GetEventAttachments200ResponseScreenshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventAttachments200ResponseScreenshot(alt string, createdAt string, id string, temporarySignedUrl string) *GetEventAttachments200ResponseScreenshot {
	this := GetEventAttachments200ResponseScreenshot{}
	this.Alt = alt
	this.CreatedAt = createdAt
	this.Id = id
	this.TemporarySignedUrl = temporarySignedUrl
	return &this
}

// NewGetEventAttachments200ResponseScreenshotWithDefaults instantiates a new GetEventAttachments200ResponseScreenshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventAttachments200ResponseScreenshotWithDefaults() *GetEventAttachments200ResponseScreenshot {
	this := GetEventAttachments200ResponseScreenshot{}
	return &this
}

// GetAlt returns the Alt field value
func (o *GetEventAttachments200ResponseScreenshot) GetAlt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alt
}

// GetAltOk returns a tuple with the Alt field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseScreenshot) GetAltOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alt, true
}

// SetAlt sets field value
func (o *GetEventAttachments200ResponseScreenshot) SetAlt(v string) {
	o.Alt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetEventAttachments200ResponseScreenshot) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseScreenshot) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetEventAttachments200ResponseScreenshot) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *GetEventAttachments200ResponseScreenshot) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseScreenshot) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetEventAttachments200ResponseScreenshot) SetId(v string) {
	o.Id = v
}

// GetTemporarySignedUrl returns the TemporarySignedUrl field value
func (o *GetEventAttachments200ResponseScreenshot) GetTemporarySignedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemporarySignedUrl
}

// GetTemporarySignedUrlOk returns a tuple with the TemporarySignedUrl field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseScreenshot) GetTemporarySignedUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemporarySignedUrl, true
}

// SetTemporarySignedUrl sets field value
func (o *GetEventAttachments200ResponseScreenshot) SetTemporarySignedUrl(v string) {
	o.TemporarySignedUrl = v
}

func (o GetEventAttachments200ResponseScreenshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEventAttachments200ResponseScreenshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alt"] = o.Alt
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["id"] = o.Id
	toSerialize["temporarySignedUrl"] = o.TemporarySignedUrl

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetEventAttachments200ResponseScreenshot) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alt",
		"createdAt",
		"id",
		"temporarySignedUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEventAttachments200ResponseScreenshot := _GetEventAttachments200ResponseScreenshot{}

	err = json.Unmarshal(data, &varGetEventAttachments200ResponseScreenshot)

	if err != nil {
		return err
	}

	*o = GetEventAttachments200ResponseScreenshot(varGetEventAttachments200ResponseScreenshot)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alt")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "id")
		delete(additionalProperties, "temporarySignedUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetEventAttachments200ResponseScreenshot struct {
	value *GetEventAttachments200ResponseScreenshot
	isSet bool
}

func (v NullableGetEventAttachments200ResponseScreenshot) Get() *GetEventAttachments200ResponseScreenshot {
	return v.value
}

func (v *NullableGetEventAttachments200ResponseScreenshot) Set(val *GetEventAttachments200ResponseScreenshot) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventAttachments200ResponseScreenshot) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventAttachments200ResponseScreenshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventAttachments200ResponseScreenshot(val *GetEventAttachments200ResponseScreenshot) *NullableGetEventAttachments200ResponseScreenshot {
	return &NullableGetEventAttachments200ResponseScreenshot{value: val, isSet: true}
}

func (v NullableGetEventAttachments200ResponseScreenshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventAttachments200ResponseScreenshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


