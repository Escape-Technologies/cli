/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// EnumC8f780846935797fceb0136b7248e6b4 the model 'EnumC8f780846935797fceb0136b7248e6b4'
type EnumC8f780846935797fceb0136b7248e6b4 string

// List of Enum_c8f780846935797fceb0136b7248e6b4
const (
	ENUMC8F780846935797FCEB0136B7248E6B4_ASSET_FOUND EnumC8f780846935797fceb0136b7248e6b4 = "ASSET_FOUND"
	ENUMC8F780846935797FCEB0136B7248E6B4_ASSET_IGNORED EnumC8f780846935797fceb0136b7248e6b4 = "ASSET_IGNORED"
	ENUMC8F780846935797FCEB0136B7248E6B4_ASSET_UPDATED EnumC8f780846935797fceb0136b7248e6b4 = "ASSET_UPDATED"
	ENUMC8F780846935797FCEB0136B7248E6B4_COMMENT EnumC8f780846935797fceb0136b7248e6b4 = "COMMENT"
	ENUMC8F780846935797FCEB0136B7248E6B4_ISSUE_FOUND EnumC8f780846935797fceb0136b7248e6b4 = "ISSUE_FOUND"
	ENUMC8F780846935797FCEB0136B7248E6B4_ISSUE_STATUS_CHANGED EnumC8f780846935797fceb0136b7248e6b4 = "ISSUE_STATUS_CHANGED"
	ENUMC8F780846935797FCEB0136B7248E6B4_OWNERS_NOTIFIED EnumC8f780846935797fceb0136b7248e6b4 = "OWNERS_NOTIFIED"
)

// All allowed values of EnumC8f780846935797fceb0136b7248e6b4 enum
var AllowedEnumC8f780846935797fceb0136b7248e6b4EnumValues = []EnumC8f780846935797fceb0136b7248e6b4{
	"ASSET_FOUND",
	"ASSET_IGNORED",
	"ASSET_UPDATED",
	"COMMENT",
	"ISSUE_FOUND",
	"ISSUE_STATUS_CHANGED",
	"OWNERS_NOTIFIED",
}

func (v *EnumC8f780846935797fceb0136b7248e6b4) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumC8f780846935797fceb0136b7248e6b4(value)
	for _, existing := range AllowedEnumC8f780846935797fceb0136b7248e6b4EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumC8f780846935797fceb0136b7248e6b4", value)
}

// NewEnumC8f780846935797fceb0136b7248e6b4FromValue returns a pointer to a valid EnumC8f780846935797fceb0136b7248e6b4
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumC8f780846935797fceb0136b7248e6b4FromValue(v string) (*EnumC8f780846935797fceb0136b7248e6b4, error) {
	ev := EnumC8f780846935797fceb0136b7248e6b4(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumC8f780846935797fceb0136b7248e6b4: valid values are %v", v, AllowedEnumC8f780846935797fceb0136b7248e6b4EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumC8f780846935797fceb0136b7248e6b4) IsValid() bool {
	for _, existing := range AllowedEnumC8f780846935797fceb0136b7248e6b4EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_c8f780846935797fceb0136b7248e6b4 value
func (v EnumC8f780846935797fceb0136b7248e6b4) Ptr() *EnumC8f780846935797fceb0136b7248e6b4 {
	return &v
}

type NullableEnumC8f780846935797fceb0136b7248e6b4 struct {
	value *EnumC8f780846935797fceb0136b7248e6b4
	isSet bool
}

func (v NullableEnumC8f780846935797fceb0136b7248e6b4) Get() *EnumC8f780846935797fceb0136b7248e6b4 {
	return v.value
}

func (v *NullableEnumC8f780846935797fceb0136b7248e6b4) Set(val *EnumC8f780846935797fceb0136b7248e6b4) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumC8f780846935797fceb0136b7248e6b4) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumC8f780846935797fceb0136b7248e6b4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumC8f780846935797fceb0136b7248e6b4(val *EnumC8f780846935797fceb0136b7248e6b4) *NullableEnumC8f780846935797fceb0136b7248e6b4 {
	return &NullableEnumC8f780846935797fceb0136b7248e6b4{value: val, isSet: true}
}

func (v NullableEnumC8f780846935797fceb0136b7248e6b4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumC8f780846935797fceb0136b7248e6b4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

