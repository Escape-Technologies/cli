/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfiguration{}

// ProfileDetailedConfiguration The active configuration of the profile
type ProfileDetailedConfiguration struct {
	PublicLocationIds []string `json:"public_location_ids,omitempty"`
	PrivateLocationIds []string `json:"private_location_ids,omitempty"`
	ExplorationScope []string `json:"exploration_scope,omitempty"`
	ApiCustomRuleIds []string `json:"api_custom_rule_ids,omitempty"`
	FrontendCustomRuleIds []string `json:"frontend_custom_rule_ids,omitempty"`
	Authentication *ProfileDetailedConfigurationAuthentication `json:"authentication,omitempty"`
	SecurityTests *ProfileDetailedConfigurationSecurityTests `json:"security_tests,omitempty"`
	Inference *ProfileDetailedConfigurationInference `json:"inference,omitempty"`
	Network *ProfileDetailedConfigurationNetwork `json:"network,omitempty"`
	ArgumentGeneration *ProfileDetailedConfigurationArgumentGeneration `json:"argument_generation,omitempty"`
	SubdomainEnumeration *ProfileDetailedConfigurationSubdomainEnumeration `json:"subdomain_enumeration,omitempty"`
	PortScanning *ProfileDetailedConfigurationPortScanning `json:"port_scanning,omitempty"`
	ServiceDiscovery *ProfileDetailedConfigurationServiceDiscovery `json:"service_discovery,omitempty"`
	FrontendDast *ProfileDetailedConfigurationFrontendDast `json:"frontend_dast,omitempty"`
	GraphqlApiDast *ProfileDetailedConfigurationGraphqlApiDast `json:"graphql_api_dast,omitempty"`
	RestApiDast *ProfileDetailedConfigurationRestApiDast `json:"rest_api_dast,omitempty"`
	Experimental *ProfileDetailedConfigurationExperimental `json:"experimental,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfiguration ProfileDetailedConfiguration

// NewProfileDetailedConfiguration instantiates a new ProfileDetailedConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfiguration() *ProfileDetailedConfiguration {
	this := ProfileDetailedConfiguration{}
	return &this
}

// NewProfileDetailedConfigurationWithDefaults instantiates a new ProfileDetailedConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationWithDefaults() *ProfileDetailedConfiguration {
	this := ProfileDetailedConfiguration{}
	return &this
}

// GetPublicLocationIds returns the PublicLocationIds field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetPublicLocationIds() []string {
	if o == nil || IsNil(o.PublicLocationIds) {
		var ret []string
		return ret
	}
	return o.PublicLocationIds
}

// GetPublicLocationIdsOk returns a tuple with the PublicLocationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetPublicLocationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.PublicLocationIds) {
		return nil, false
	}
	return o.PublicLocationIds, true
}

// HasPublicLocationIds returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasPublicLocationIds() bool {
	if o != nil && !IsNil(o.PublicLocationIds) {
		return true
	}

	return false
}

// SetPublicLocationIds gets a reference to the given []string and assigns it to the PublicLocationIds field.
func (o *ProfileDetailedConfiguration) SetPublicLocationIds(v []string) {
	o.PublicLocationIds = v
}

// GetPrivateLocationIds returns the PrivateLocationIds field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetPrivateLocationIds() []string {
	if o == nil || IsNil(o.PrivateLocationIds) {
		var ret []string
		return ret
	}
	return o.PrivateLocationIds
}

// GetPrivateLocationIdsOk returns a tuple with the PrivateLocationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetPrivateLocationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.PrivateLocationIds) {
		return nil, false
	}
	return o.PrivateLocationIds, true
}

// HasPrivateLocationIds returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasPrivateLocationIds() bool {
	if o != nil && !IsNil(o.PrivateLocationIds) {
		return true
	}

	return false
}

// SetPrivateLocationIds gets a reference to the given []string and assigns it to the PrivateLocationIds field.
func (o *ProfileDetailedConfiguration) SetPrivateLocationIds(v []string) {
	o.PrivateLocationIds = v
}

// GetExplorationScope returns the ExplorationScope field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetExplorationScope() []string {
	if o == nil || IsNil(o.ExplorationScope) {
		var ret []string
		return ret
	}
	return o.ExplorationScope
}

// GetExplorationScopeOk returns a tuple with the ExplorationScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetExplorationScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.ExplorationScope) {
		return nil, false
	}
	return o.ExplorationScope, true
}

// HasExplorationScope returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasExplorationScope() bool {
	if o != nil && !IsNil(o.ExplorationScope) {
		return true
	}

	return false
}

// SetExplorationScope gets a reference to the given []string and assigns it to the ExplorationScope field.
func (o *ProfileDetailedConfiguration) SetExplorationScope(v []string) {
	o.ExplorationScope = v
}

// GetApiCustomRuleIds returns the ApiCustomRuleIds field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetApiCustomRuleIds() []string {
	if o == nil || IsNil(o.ApiCustomRuleIds) {
		var ret []string
		return ret
	}
	return o.ApiCustomRuleIds
}

// GetApiCustomRuleIdsOk returns a tuple with the ApiCustomRuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetApiCustomRuleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ApiCustomRuleIds) {
		return nil, false
	}
	return o.ApiCustomRuleIds, true
}

// HasApiCustomRuleIds returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasApiCustomRuleIds() bool {
	if o != nil && !IsNil(o.ApiCustomRuleIds) {
		return true
	}

	return false
}

// SetApiCustomRuleIds gets a reference to the given []string and assigns it to the ApiCustomRuleIds field.
func (o *ProfileDetailedConfiguration) SetApiCustomRuleIds(v []string) {
	o.ApiCustomRuleIds = v
}

// GetFrontendCustomRuleIds returns the FrontendCustomRuleIds field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetFrontendCustomRuleIds() []string {
	if o == nil || IsNil(o.FrontendCustomRuleIds) {
		var ret []string
		return ret
	}
	return o.FrontendCustomRuleIds
}

// GetFrontendCustomRuleIdsOk returns a tuple with the FrontendCustomRuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetFrontendCustomRuleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FrontendCustomRuleIds) {
		return nil, false
	}
	return o.FrontendCustomRuleIds, true
}

// HasFrontendCustomRuleIds returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasFrontendCustomRuleIds() bool {
	if o != nil && !IsNil(o.FrontendCustomRuleIds) {
		return true
	}

	return false
}

// SetFrontendCustomRuleIds gets a reference to the given []string and assigns it to the FrontendCustomRuleIds field.
func (o *ProfileDetailedConfiguration) SetFrontendCustomRuleIds(v []string) {
	o.FrontendCustomRuleIds = v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetAuthentication() ProfileDetailedConfigurationAuthentication {
	if o == nil || IsNil(o.Authentication) {
		var ret ProfileDetailedConfigurationAuthentication
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetAuthenticationOk() (*ProfileDetailedConfigurationAuthentication, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given ProfileDetailedConfigurationAuthentication and assigns it to the Authentication field.
func (o *ProfileDetailedConfiguration) SetAuthentication(v ProfileDetailedConfigurationAuthentication) {
	o.Authentication = &v
}

// GetSecurityTests returns the SecurityTests field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetSecurityTests() ProfileDetailedConfigurationSecurityTests {
	if o == nil || IsNil(o.SecurityTests) {
		var ret ProfileDetailedConfigurationSecurityTests
		return ret
	}
	return *o.SecurityTests
}

// GetSecurityTestsOk returns a tuple with the SecurityTests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetSecurityTestsOk() (*ProfileDetailedConfigurationSecurityTests, bool) {
	if o == nil || IsNil(o.SecurityTests) {
		return nil, false
	}
	return o.SecurityTests, true
}

// HasSecurityTests returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasSecurityTests() bool {
	if o != nil && !IsNil(o.SecurityTests) {
		return true
	}

	return false
}

// SetSecurityTests gets a reference to the given ProfileDetailedConfigurationSecurityTests and assigns it to the SecurityTests field.
func (o *ProfileDetailedConfiguration) SetSecurityTests(v ProfileDetailedConfigurationSecurityTests) {
	o.SecurityTests = &v
}

// GetInference returns the Inference field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetInference() ProfileDetailedConfigurationInference {
	if o == nil || IsNil(o.Inference) {
		var ret ProfileDetailedConfigurationInference
		return ret
	}
	return *o.Inference
}

// GetInferenceOk returns a tuple with the Inference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetInferenceOk() (*ProfileDetailedConfigurationInference, bool) {
	if o == nil || IsNil(o.Inference) {
		return nil, false
	}
	return o.Inference, true
}

// HasInference returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasInference() bool {
	if o != nil && !IsNil(o.Inference) {
		return true
	}

	return false
}

// SetInference gets a reference to the given ProfileDetailedConfigurationInference and assigns it to the Inference field.
func (o *ProfileDetailedConfiguration) SetInference(v ProfileDetailedConfigurationInference) {
	o.Inference = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetNetwork() ProfileDetailedConfigurationNetwork {
	if o == nil || IsNil(o.Network) {
		var ret ProfileDetailedConfigurationNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetNetworkOk() (*ProfileDetailedConfigurationNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given ProfileDetailedConfigurationNetwork and assigns it to the Network field.
func (o *ProfileDetailedConfiguration) SetNetwork(v ProfileDetailedConfigurationNetwork) {
	o.Network = &v
}

// GetArgumentGeneration returns the ArgumentGeneration field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetArgumentGeneration() ProfileDetailedConfigurationArgumentGeneration {
	if o == nil || IsNil(o.ArgumentGeneration) {
		var ret ProfileDetailedConfigurationArgumentGeneration
		return ret
	}
	return *o.ArgumentGeneration
}

// GetArgumentGenerationOk returns a tuple with the ArgumentGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetArgumentGenerationOk() (*ProfileDetailedConfigurationArgumentGeneration, bool) {
	if o == nil || IsNil(o.ArgumentGeneration) {
		return nil, false
	}
	return o.ArgumentGeneration, true
}

// HasArgumentGeneration returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasArgumentGeneration() bool {
	if o != nil && !IsNil(o.ArgumentGeneration) {
		return true
	}

	return false
}

// SetArgumentGeneration gets a reference to the given ProfileDetailedConfigurationArgumentGeneration and assigns it to the ArgumentGeneration field.
func (o *ProfileDetailedConfiguration) SetArgumentGeneration(v ProfileDetailedConfigurationArgumentGeneration) {
	o.ArgumentGeneration = &v
}

// GetSubdomainEnumeration returns the SubdomainEnumeration field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetSubdomainEnumeration() ProfileDetailedConfigurationSubdomainEnumeration {
	if o == nil || IsNil(o.SubdomainEnumeration) {
		var ret ProfileDetailedConfigurationSubdomainEnumeration
		return ret
	}
	return *o.SubdomainEnumeration
}

// GetSubdomainEnumerationOk returns a tuple with the SubdomainEnumeration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetSubdomainEnumerationOk() (*ProfileDetailedConfigurationSubdomainEnumeration, bool) {
	if o == nil || IsNil(o.SubdomainEnumeration) {
		return nil, false
	}
	return o.SubdomainEnumeration, true
}

// HasSubdomainEnumeration returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasSubdomainEnumeration() bool {
	if o != nil && !IsNil(o.SubdomainEnumeration) {
		return true
	}

	return false
}

// SetSubdomainEnumeration gets a reference to the given ProfileDetailedConfigurationSubdomainEnumeration and assigns it to the SubdomainEnumeration field.
func (o *ProfileDetailedConfiguration) SetSubdomainEnumeration(v ProfileDetailedConfigurationSubdomainEnumeration) {
	o.SubdomainEnumeration = &v
}

// GetPortScanning returns the PortScanning field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetPortScanning() ProfileDetailedConfigurationPortScanning {
	if o == nil || IsNil(o.PortScanning) {
		var ret ProfileDetailedConfigurationPortScanning
		return ret
	}
	return *o.PortScanning
}

// GetPortScanningOk returns a tuple with the PortScanning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetPortScanningOk() (*ProfileDetailedConfigurationPortScanning, bool) {
	if o == nil || IsNil(o.PortScanning) {
		return nil, false
	}
	return o.PortScanning, true
}

// HasPortScanning returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasPortScanning() bool {
	if o != nil && !IsNil(o.PortScanning) {
		return true
	}

	return false
}

// SetPortScanning gets a reference to the given ProfileDetailedConfigurationPortScanning and assigns it to the PortScanning field.
func (o *ProfileDetailedConfiguration) SetPortScanning(v ProfileDetailedConfigurationPortScanning) {
	o.PortScanning = &v
}

// GetServiceDiscovery returns the ServiceDiscovery field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetServiceDiscovery() ProfileDetailedConfigurationServiceDiscovery {
	if o == nil || IsNil(o.ServiceDiscovery) {
		var ret ProfileDetailedConfigurationServiceDiscovery
		return ret
	}
	return *o.ServiceDiscovery
}

// GetServiceDiscoveryOk returns a tuple with the ServiceDiscovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetServiceDiscoveryOk() (*ProfileDetailedConfigurationServiceDiscovery, bool) {
	if o == nil || IsNil(o.ServiceDiscovery) {
		return nil, false
	}
	return o.ServiceDiscovery, true
}

// HasServiceDiscovery returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasServiceDiscovery() bool {
	if o != nil && !IsNil(o.ServiceDiscovery) {
		return true
	}

	return false
}

// SetServiceDiscovery gets a reference to the given ProfileDetailedConfigurationServiceDiscovery and assigns it to the ServiceDiscovery field.
func (o *ProfileDetailedConfiguration) SetServiceDiscovery(v ProfileDetailedConfigurationServiceDiscovery) {
	o.ServiceDiscovery = &v
}

// GetFrontendDast returns the FrontendDast field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetFrontendDast() ProfileDetailedConfigurationFrontendDast {
	if o == nil || IsNil(o.FrontendDast) {
		var ret ProfileDetailedConfigurationFrontendDast
		return ret
	}
	return *o.FrontendDast
}

// GetFrontendDastOk returns a tuple with the FrontendDast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetFrontendDastOk() (*ProfileDetailedConfigurationFrontendDast, bool) {
	if o == nil || IsNil(o.FrontendDast) {
		return nil, false
	}
	return o.FrontendDast, true
}

// HasFrontendDast returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasFrontendDast() bool {
	if o != nil && !IsNil(o.FrontendDast) {
		return true
	}

	return false
}

// SetFrontendDast gets a reference to the given ProfileDetailedConfigurationFrontendDast and assigns it to the FrontendDast field.
func (o *ProfileDetailedConfiguration) SetFrontendDast(v ProfileDetailedConfigurationFrontendDast) {
	o.FrontendDast = &v
}

// GetGraphqlApiDast returns the GraphqlApiDast field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetGraphqlApiDast() ProfileDetailedConfigurationGraphqlApiDast {
	if o == nil || IsNil(o.GraphqlApiDast) {
		var ret ProfileDetailedConfigurationGraphqlApiDast
		return ret
	}
	return *o.GraphqlApiDast
}

// GetGraphqlApiDastOk returns a tuple with the GraphqlApiDast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetGraphqlApiDastOk() (*ProfileDetailedConfigurationGraphqlApiDast, bool) {
	if o == nil || IsNil(o.GraphqlApiDast) {
		return nil, false
	}
	return o.GraphqlApiDast, true
}

// HasGraphqlApiDast returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasGraphqlApiDast() bool {
	if o != nil && !IsNil(o.GraphqlApiDast) {
		return true
	}

	return false
}

// SetGraphqlApiDast gets a reference to the given ProfileDetailedConfigurationGraphqlApiDast and assigns it to the GraphqlApiDast field.
func (o *ProfileDetailedConfiguration) SetGraphqlApiDast(v ProfileDetailedConfigurationGraphqlApiDast) {
	o.GraphqlApiDast = &v
}

// GetRestApiDast returns the RestApiDast field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetRestApiDast() ProfileDetailedConfigurationRestApiDast {
	if o == nil || IsNil(o.RestApiDast) {
		var ret ProfileDetailedConfigurationRestApiDast
		return ret
	}
	return *o.RestApiDast
}

// GetRestApiDastOk returns a tuple with the RestApiDast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetRestApiDastOk() (*ProfileDetailedConfigurationRestApiDast, bool) {
	if o == nil || IsNil(o.RestApiDast) {
		return nil, false
	}
	return o.RestApiDast, true
}

// HasRestApiDast returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasRestApiDast() bool {
	if o != nil && !IsNil(o.RestApiDast) {
		return true
	}

	return false
}

// SetRestApiDast gets a reference to the given ProfileDetailedConfigurationRestApiDast and assigns it to the RestApiDast field.
func (o *ProfileDetailedConfiguration) SetRestApiDast(v ProfileDetailedConfigurationRestApiDast) {
	o.RestApiDast = &v
}

// GetExperimental returns the Experimental field value if set, zero value otherwise.
func (o *ProfileDetailedConfiguration) GetExperimental() ProfileDetailedConfigurationExperimental {
	if o == nil || IsNil(o.Experimental) {
		var ret ProfileDetailedConfigurationExperimental
		return ret
	}
	return *o.Experimental
}

// GetExperimentalOk returns a tuple with the Experimental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfiguration) GetExperimentalOk() (*ProfileDetailedConfigurationExperimental, bool) {
	if o == nil || IsNil(o.Experimental) {
		return nil, false
	}
	return o.Experimental, true
}

// HasExperimental returns a boolean if a field has been set.
func (o *ProfileDetailedConfiguration) HasExperimental() bool {
	if o != nil && !IsNil(o.Experimental) {
		return true
	}

	return false
}

// SetExperimental gets a reference to the given ProfileDetailedConfigurationExperimental and assigns it to the Experimental field.
func (o *ProfileDetailedConfiguration) SetExperimental(v ProfileDetailedConfigurationExperimental) {
	o.Experimental = &v
}

func (o ProfileDetailedConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PublicLocationIds) {
		toSerialize["public_location_ids"] = o.PublicLocationIds
	}
	if !IsNil(o.PrivateLocationIds) {
		toSerialize["private_location_ids"] = o.PrivateLocationIds
	}
	if !IsNil(o.ExplorationScope) {
		toSerialize["exploration_scope"] = o.ExplorationScope
	}
	if !IsNil(o.ApiCustomRuleIds) {
		toSerialize["api_custom_rule_ids"] = o.ApiCustomRuleIds
	}
	if !IsNil(o.FrontendCustomRuleIds) {
		toSerialize["frontend_custom_rule_ids"] = o.FrontendCustomRuleIds
	}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.SecurityTests) {
		toSerialize["security_tests"] = o.SecurityTests
	}
	if !IsNil(o.Inference) {
		toSerialize["inference"] = o.Inference
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.ArgumentGeneration) {
		toSerialize["argument_generation"] = o.ArgumentGeneration
	}
	if !IsNil(o.SubdomainEnumeration) {
		toSerialize["subdomain_enumeration"] = o.SubdomainEnumeration
	}
	if !IsNil(o.PortScanning) {
		toSerialize["port_scanning"] = o.PortScanning
	}
	if !IsNil(o.ServiceDiscovery) {
		toSerialize["service_discovery"] = o.ServiceDiscovery
	}
	if !IsNil(o.FrontendDast) {
		toSerialize["frontend_dast"] = o.FrontendDast
	}
	if !IsNil(o.GraphqlApiDast) {
		toSerialize["graphql_api_dast"] = o.GraphqlApiDast
	}
	if !IsNil(o.RestApiDast) {
		toSerialize["rest_api_dast"] = o.RestApiDast
	}
	if !IsNil(o.Experimental) {
		toSerialize["experimental"] = o.Experimental
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfiguration) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfiguration := _ProfileDetailedConfiguration{}

	err = json.Unmarshal(data, &varProfileDetailedConfiguration)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfiguration(varProfileDetailedConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "public_location_ids")
		delete(additionalProperties, "private_location_ids")
		delete(additionalProperties, "exploration_scope")
		delete(additionalProperties, "api_custom_rule_ids")
		delete(additionalProperties, "frontend_custom_rule_ids")
		delete(additionalProperties, "authentication")
		delete(additionalProperties, "security_tests")
		delete(additionalProperties, "inference")
		delete(additionalProperties, "network")
		delete(additionalProperties, "argument_generation")
		delete(additionalProperties, "subdomain_enumeration")
		delete(additionalProperties, "port_scanning")
		delete(additionalProperties, "service_discovery")
		delete(additionalProperties, "frontend_dast")
		delete(additionalProperties, "graphql_api_dast")
		delete(additionalProperties, "rest_api_dast")
		delete(additionalProperties, "experimental")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfiguration struct {
	value *ProfileDetailedConfiguration
	isSet bool
}

func (v NullableProfileDetailedConfiguration) Get() *ProfileDetailedConfiguration {
	return v.value
}

func (v *NullableProfileDetailedConfiguration) Set(val *ProfileDetailedConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfiguration(val *ProfileDetailedConfiguration) *NullableProfileDetailedConfiguration {
	return &NullableProfileDetailedConfiguration{value: val, isSet: true}
}

func (v NullableProfileDetailedConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


