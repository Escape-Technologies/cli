/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the GetEventAttachments200ResponseTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEventAttachments200ResponseTarget{}

// GetEventAttachments200ResponseTarget struct for GetEventAttachments200ResponseTarget
type GetEventAttachments200ResponseTarget struct {
	CreatedAt string `json:"createdAt"`
	ApiRoute *GetEventAttachments200ResponseTargetApiRoute `json:"apiRoute,omitempty"`
	CodeFile *GetEventAttachments200ResponseTargetCodeFile `json:"codeFile,omitempty"`
	GraphqlResolver *GetEventAttachments200ResponseTargetGraphqlResolver `json:"graphqlResolver,omitempty"`
	Id string `json:"id"`
	Port *GetEventAttachments200ResponseTargetPort `json:"port,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetEventAttachments200ResponseTarget GetEventAttachments200ResponseTarget

// NewGetEventAttachments200ResponseTarget instantiates a new GetEventAttachments200ResponseTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventAttachments200ResponseTarget(createdAt string, id string) *GetEventAttachments200ResponseTarget {
	this := GetEventAttachments200ResponseTarget{}
	this.CreatedAt = createdAt
	this.Id = id
	return &this
}

// NewGetEventAttachments200ResponseTargetWithDefaults instantiates a new GetEventAttachments200ResponseTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventAttachments200ResponseTargetWithDefaults() *GetEventAttachments200ResponseTarget {
	this := GetEventAttachments200ResponseTarget{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetEventAttachments200ResponseTarget) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseTarget) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetEventAttachments200ResponseTarget) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetApiRoute returns the ApiRoute field value if set, zero value otherwise.
func (o *GetEventAttachments200ResponseTarget) GetApiRoute() GetEventAttachments200ResponseTargetApiRoute {
	if o == nil || IsNil(o.ApiRoute) {
		var ret GetEventAttachments200ResponseTargetApiRoute
		return ret
	}
	return *o.ApiRoute
}

// GetApiRouteOk returns a tuple with the ApiRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseTarget) GetApiRouteOk() (*GetEventAttachments200ResponseTargetApiRoute, bool) {
	if o == nil || IsNil(o.ApiRoute) {
		return nil, false
	}
	return o.ApiRoute, true
}

// HasApiRoute returns a boolean if a field has been set.
func (o *GetEventAttachments200ResponseTarget) HasApiRoute() bool {
	if o != nil && !IsNil(o.ApiRoute) {
		return true
	}

	return false
}

// SetApiRoute gets a reference to the given GetEventAttachments200ResponseTargetApiRoute and assigns it to the ApiRoute field.
func (o *GetEventAttachments200ResponseTarget) SetApiRoute(v GetEventAttachments200ResponseTargetApiRoute) {
	o.ApiRoute = &v
}

// GetCodeFile returns the CodeFile field value if set, zero value otherwise.
func (o *GetEventAttachments200ResponseTarget) GetCodeFile() GetEventAttachments200ResponseTargetCodeFile {
	if o == nil || IsNil(o.CodeFile) {
		var ret GetEventAttachments200ResponseTargetCodeFile
		return ret
	}
	return *o.CodeFile
}

// GetCodeFileOk returns a tuple with the CodeFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseTarget) GetCodeFileOk() (*GetEventAttachments200ResponseTargetCodeFile, bool) {
	if o == nil || IsNil(o.CodeFile) {
		return nil, false
	}
	return o.CodeFile, true
}

// HasCodeFile returns a boolean if a field has been set.
func (o *GetEventAttachments200ResponseTarget) HasCodeFile() bool {
	if o != nil && !IsNil(o.CodeFile) {
		return true
	}

	return false
}

// SetCodeFile gets a reference to the given GetEventAttachments200ResponseTargetCodeFile and assigns it to the CodeFile field.
func (o *GetEventAttachments200ResponseTarget) SetCodeFile(v GetEventAttachments200ResponseTargetCodeFile) {
	o.CodeFile = &v
}

// GetGraphqlResolver returns the GraphqlResolver field value if set, zero value otherwise.
func (o *GetEventAttachments200ResponseTarget) GetGraphqlResolver() GetEventAttachments200ResponseTargetGraphqlResolver {
	if o == nil || IsNil(o.GraphqlResolver) {
		var ret GetEventAttachments200ResponseTargetGraphqlResolver
		return ret
	}
	return *o.GraphqlResolver
}

// GetGraphqlResolverOk returns a tuple with the GraphqlResolver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseTarget) GetGraphqlResolverOk() (*GetEventAttachments200ResponseTargetGraphqlResolver, bool) {
	if o == nil || IsNil(o.GraphqlResolver) {
		return nil, false
	}
	return o.GraphqlResolver, true
}

// HasGraphqlResolver returns a boolean if a field has been set.
func (o *GetEventAttachments200ResponseTarget) HasGraphqlResolver() bool {
	if o != nil && !IsNil(o.GraphqlResolver) {
		return true
	}

	return false
}

// SetGraphqlResolver gets a reference to the given GetEventAttachments200ResponseTargetGraphqlResolver and assigns it to the GraphqlResolver field.
func (o *GetEventAttachments200ResponseTarget) SetGraphqlResolver(v GetEventAttachments200ResponseTargetGraphqlResolver) {
	o.GraphqlResolver = &v
}

// GetId returns the Id field value
func (o *GetEventAttachments200ResponseTarget) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseTarget) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetEventAttachments200ResponseTarget) SetId(v string) {
	o.Id = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *GetEventAttachments200ResponseTarget) GetPort() GetEventAttachments200ResponseTargetPort {
	if o == nil || IsNil(o.Port) {
		var ret GetEventAttachments200ResponseTargetPort
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventAttachments200ResponseTarget) GetPortOk() (*GetEventAttachments200ResponseTargetPort, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *GetEventAttachments200ResponseTarget) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given GetEventAttachments200ResponseTargetPort and assigns it to the Port field.
func (o *GetEventAttachments200ResponseTarget) SetPort(v GetEventAttachments200ResponseTargetPort) {
	o.Port = &v
}

func (o GetEventAttachments200ResponseTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEventAttachments200ResponseTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.ApiRoute) {
		toSerialize["apiRoute"] = o.ApiRoute
	}
	if !IsNil(o.CodeFile) {
		toSerialize["codeFile"] = o.CodeFile
	}
	if !IsNil(o.GraphqlResolver) {
		toSerialize["graphqlResolver"] = o.GraphqlResolver
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetEventAttachments200ResponseTarget) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEventAttachments200ResponseTarget := _GetEventAttachments200ResponseTarget{}

	err = json.Unmarshal(data, &varGetEventAttachments200ResponseTarget)

	if err != nil {
		return err
	}

	*o = GetEventAttachments200ResponseTarget(varGetEventAttachments200ResponseTarget)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "apiRoute")
		delete(additionalProperties, "codeFile")
		delete(additionalProperties, "graphqlResolver")
		delete(additionalProperties, "id")
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetEventAttachments200ResponseTarget struct {
	value *GetEventAttachments200ResponseTarget
	isSet bool
}

func (v NullableGetEventAttachments200ResponseTarget) Get() *GetEventAttachments200ResponseTarget {
	return v.value
}

func (v *NullableGetEventAttachments200ResponseTarget) Set(val *GetEventAttachments200ResponseTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventAttachments200ResponseTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventAttachments200ResponseTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventAttachments200ResponseTarget(val *GetEventAttachments200ResponseTarget) *NullableGetEventAttachments200ResponseTarget {
	return &NullableGetEventAttachments200ResponseTarget{value: val, isSet: true}
}

func (v NullableGetEventAttachments200ResponseTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventAttachments200ResponseTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


