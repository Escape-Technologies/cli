/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 the model 'EnumF8e14e002b8aa0a74fbc1dbbe77d0a43'
type EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 string

// List of Enum_f8e14e002b8aa0a74fbc1dbbe77d0a43
const (
	ENUMF8E14E002B8AA0A74FBC1DBBE77D0A43_DEVELOPMENT EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 = "DEVELOPMENT"
	ENUMF8E14E002B8AA0A74FBC1DBBE77D0A43_PRODUCTION EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 = "PRODUCTION"
	ENUMF8E14E002B8AA0A74FBC1DBBE77D0A43_STAGING EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 = "STAGING"
	ENUMF8E14E002B8AA0A74FBC1DBBE77D0A43_UNKNOWN EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 = "UNKNOWN"
)

// All allowed values of EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 enum
var AllowedEnumF8e14e002b8aa0a74fbc1dbbe77d0a43EnumValues = []EnumF8e14e002b8aa0a74fbc1dbbe77d0a43{
	"DEVELOPMENT",
	"PRODUCTION",
	"STAGING",
	"UNKNOWN",
}

func (v *EnumF8e14e002b8aa0a74fbc1dbbe77d0a43) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumF8e14e002b8aa0a74fbc1dbbe77d0a43(value)
	for _, existing := range AllowedEnumF8e14e002b8aa0a74fbc1dbbe77d0a43EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumF8e14e002b8aa0a74fbc1dbbe77d0a43", value)
}

// NewEnumF8e14e002b8aa0a74fbc1dbbe77d0a43FromValue returns a pointer to a valid EnumF8e14e002b8aa0a74fbc1dbbe77d0a43
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumF8e14e002b8aa0a74fbc1dbbe77d0a43FromValue(v string) (*EnumF8e14e002b8aa0a74fbc1dbbe77d0a43, error) {
	ev := EnumF8e14e002b8aa0a74fbc1dbbe77d0a43(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumF8e14e002b8aa0a74fbc1dbbe77d0a43: valid values are %v", v, AllowedEnumF8e14e002b8aa0a74fbc1dbbe77d0a43EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumF8e14e002b8aa0a74fbc1dbbe77d0a43) IsValid() bool {
	for _, existing := range AllowedEnumF8e14e002b8aa0a74fbc1dbbe77d0a43EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_f8e14e002b8aa0a74fbc1dbbe77d0a43 value
func (v EnumF8e14e002b8aa0a74fbc1dbbe77d0a43) Ptr() *EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 {
	return &v
}

type NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43 struct {
	value *EnumF8e14e002b8aa0a74fbc1dbbe77d0a43
	isSet bool
}

func (v NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43) Get() *EnumF8e14e002b8aa0a74fbc1dbbe77d0a43 {
	return v.value
}

func (v *NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43) Set(val *EnumF8e14e002b8aa0a74fbc1dbbe77d0a43) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43(val *EnumF8e14e002b8aa0a74fbc1dbbe77d0a43) *NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43 {
	return &NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43{value: val, isSet: true}
}

func (v NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumF8e14e002b8aa0a74fbc1dbbe77d0a43) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

