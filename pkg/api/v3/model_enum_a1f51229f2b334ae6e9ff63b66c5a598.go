/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// EnumA1f51229f2b334ae6e9ff63b66c5a598 The current status of the issue
type EnumA1f51229f2b334ae6e9ff63b66c5a598 string

// List of Enum_a1f51229f2b334ae6e9ff63b66c5a598
const (
	ENUMA1F51229F2B334AE6E9FF63B66C5A598_FALSE_POSITIVE EnumA1f51229f2b334ae6e9ff63b66c5a598 = "FALSE_POSITIVE"
	ENUMA1F51229F2B334AE6E9FF63B66C5A598_IGNORED EnumA1f51229f2b334ae6e9ff63b66c5a598 = "IGNORED"
	ENUMA1F51229F2B334AE6E9FF63B66C5A598_MANUAL_REVIEW EnumA1f51229f2b334ae6e9ff63b66c5a598 = "MANUAL_REVIEW"
	ENUMA1F51229F2B334AE6E9FF63B66C5A598_OPEN EnumA1f51229f2b334ae6e9ff63b66c5a598 = "OPEN"
	ENUMA1F51229F2B334AE6E9FF63B66C5A598_RESOLVED EnumA1f51229f2b334ae6e9ff63b66c5a598 = "RESOLVED"
)

// All allowed values of EnumA1f51229f2b334ae6e9ff63b66c5a598 enum
var AllowedEnumA1f51229f2b334ae6e9ff63b66c5a598EnumValues = []EnumA1f51229f2b334ae6e9ff63b66c5a598{
	"FALSE_POSITIVE",
	"IGNORED",
	"MANUAL_REVIEW",
	"OPEN",
	"RESOLVED",
}

func (v *EnumA1f51229f2b334ae6e9ff63b66c5a598) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumA1f51229f2b334ae6e9ff63b66c5a598(value)
	for _, existing := range AllowedEnumA1f51229f2b334ae6e9ff63b66c5a598EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumA1f51229f2b334ae6e9ff63b66c5a598", value)
}

// NewEnumA1f51229f2b334ae6e9ff63b66c5a598FromValue returns a pointer to a valid EnumA1f51229f2b334ae6e9ff63b66c5a598
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumA1f51229f2b334ae6e9ff63b66c5a598FromValue(v string) (*EnumA1f51229f2b334ae6e9ff63b66c5a598, error) {
	ev := EnumA1f51229f2b334ae6e9ff63b66c5a598(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumA1f51229f2b334ae6e9ff63b66c5a598: valid values are %v", v, AllowedEnumA1f51229f2b334ae6e9ff63b66c5a598EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumA1f51229f2b334ae6e9ff63b66c5a598) IsValid() bool {
	for _, existing := range AllowedEnumA1f51229f2b334ae6e9ff63b66c5a598EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_a1f51229f2b334ae6e9ff63b66c5a598 value
func (v EnumA1f51229f2b334ae6e9ff63b66c5a598) Ptr() *EnumA1f51229f2b334ae6e9ff63b66c5a598 {
	return &v
}

type NullableEnumA1f51229f2b334ae6e9ff63b66c5a598 struct {
	value *EnumA1f51229f2b334ae6e9ff63b66c5a598
	isSet bool
}

func (v NullableEnumA1f51229f2b334ae6e9ff63b66c5a598) Get() *EnumA1f51229f2b334ae6e9ff63b66c5a598 {
	return v.value
}

func (v *NullableEnumA1f51229f2b334ae6e9ff63b66c5a598) Set(val *EnumA1f51229f2b334ae6e9ff63b66c5a598) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumA1f51229f2b334ae6e9ff63b66c5a598) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumA1f51229f2b334ae6e9ff63b66c5a598) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumA1f51229f2b334ae6e9ff63b66c5a598(val *EnumA1f51229f2b334ae6e9ff63b66c5a598) *NullableEnumA1f51229f2b334ae6e9ff63b66c5a598 {
	return &NullableEnumA1f51229f2b334ae6e9ff63b66c5a598{value: val, isSet: true}
}

func (v NullableEnumA1f51229f2b334ae6e9ff63b66c5a598) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumA1f51229f2b334ae6e9ff63b66c5a598) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

