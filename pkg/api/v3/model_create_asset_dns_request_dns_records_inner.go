/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAssetDNSRequestDnsRecordsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetDNSRequestDnsRecordsInner{}

// CreateAssetDNSRequestDnsRecordsInner struct for CreateAssetDNSRequestDnsRecordsInner
type CreateAssetDNSRequestDnsRecordsInner struct {
	Name string `json:"name"`
	Type string `json:"type"`
	Ttl float32 `json:"ttl"`
	Data string `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _CreateAssetDNSRequestDnsRecordsInner CreateAssetDNSRequestDnsRecordsInner

// NewCreateAssetDNSRequestDnsRecordsInner instantiates a new CreateAssetDNSRequestDnsRecordsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetDNSRequestDnsRecordsInner(name string, type_ string, ttl float32, data string) *CreateAssetDNSRequestDnsRecordsInner {
	this := CreateAssetDNSRequestDnsRecordsInner{}
	this.Name = name
	this.Type = type_
	this.Ttl = ttl
	this.Data = data
	return &this
}

// NewCreateAssetDNSRequestDnsRecordsInnerWithDefaults instantiates a new CreateAssetDNSRequestDnsRecordsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetDNSRequestDnsRecordsInnerWithDefaults() *CreateAssetDNSRequestDnsRecordsInner {
	this := CreateAssetDNSRequestDnsRecordsInner{}
	return &this
}

// GetName returns the Name field value
func (o *CreateAssetDNSRequestDnsRecordsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAssetDNSRequestDnsRecordsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAssetDNSRequestDnsRecordsInner) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *CreateAssetDNSRequestDnsRecordsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateAssetDNSRequestDnsRecordsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateAssetDNSRequestDnsRecordsInner) SetType(v string) {
	o.Type = v
}

// GetTtl returns the Ttl field value
func (o *CreateAssetDNSRequestDnsRecordsInner) GetTtl() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value
// and a boolean to check if the value has been set.
func (o *CreateAssetDNSRequestDnsRecordsInner) GetTtlOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ttl, true
}

// SetTtl sets field value
func (o *CreateAssetDNSRequestDnsRecordsInner) SetTtl(v float32) {
	o.Ttl = v
}

// GetData returns the Data field value
func (o *CreateAssetDNSRequestDnsRecordsInner) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateAssetDNSRequestDnsRecordsInner) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CreateAssetDNSRequestDnsRecordsInner) SetData(v string) {
	o.Data = v
}

func (o CreateAssetDNSRequestDnsRecordsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetDNSRequestDnsRecordsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["ttl"] = o.Ttl
	toSerialize["data"] = o.Data

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAssetDNSRequestDnsRecordsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"ttl",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetDNSRequestDnsRecordsInner := _CreateAssetDNSRequestDnsRecordsInner{}

	err = json.Unmarshal(data, &varCreateAssetDNSRequestDnsRecordsInner)

	if err != nil {
		return err
	}

	*o = CreateAssetDNSRequestDnsRecordsInner(varCreateAssetDNSRequestDnsRecordsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		delete(additionalProperties, "ttl")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAssetDNSRequestDnsRecordsInner struct {
	value *CreateAssetDNSRequestDnsRecordsInner
	isSet bool
}

func (v NullableCreateAssetDNSRequestDnsRecordsInner) Get() *CreateAssetDNSRequestDnsRecordsInner {
	return v.value
}

func (v *NullableCreateAssetDNSRequestDnsRecordsInner) Set(val *CreateAssetDNSRequestDnsRecordsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetDNSRequestDnsRecordsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetDNSRequestDnsRecordsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetDNSRequestDnsRecordsInner(val *CreateAssetDNSRequestDnsRecordsInner) *NullableCreateAssetDNSRequestDnsRecordsInner {
	return &NullableCreateAssetDNSRequestDnsRecordsInner{value: val, isSet: true}
}

func (v NullableCreateAssetDNSRequestDnsRecordsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetDNSRequestDnsRecordsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


