/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner{}

// ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner struct for ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner
type ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner struct {
	Username string `json:"username"`
	Headers map[string]string `json:"headers,omitempty"`
	Cookies map[string]string `json:"cookies,omitempty"`
	QueryParameters map[string]string `json:"query_parameters,omitempty"`
	MainUser *bool `json:"main_user,omitempty"`
	Basic *string `json:"basic,omitempty"`
	Digest *string `json:"digest,omitempty"`
	Password string `json:"password"`
	Scopes []string `json:"scopes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner

// NewProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner instantiates a new ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner(username string, password string) *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner {
	this := ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner{}
	this.Username = username
	this.Password = password
	return &this
}

// NewProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInnerWithDefaults instantiates a new ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInnerWithDefaults() *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner {
	this := ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner{}
	return &this
}

// GetUsername returns the Username field value
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetUsername(v string) {
	o.Username = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetHeaders() map[string]string {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]string
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetHeadersOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]string{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetHeaders(v map[string]string) {
	o.Headers = v
}

// GetCookies returns the Cookies field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetCookies() map[string]string {
	if o == nil || IsNil(o.Cookies) {
		var ret map[string]string
		return ret
	}
	return o.Cookies
}

// GetCookiesOk returns a tuple with the Cookies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetCookiesOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Cookies) {
		return map[string]string{}, false
	}
	return o.Cookies, true
}

// HasCookies returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) HasCookies() bool {
	if o != nil && !IsNil(o.Cookies) {
		return true
	}

	return false
}

// SetCookies gets a reference to the given map[string]string and assigns it to the Cookies field.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetCookies(v map[string]string) {
	o.Cookies = v
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetQueryParameters() map[string]string {
	if o == nil || IsNil(o.QueryParameters) {
		var ret map[string]string
		return ret
	}
	return o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetQueryParametersOk() (map[string]string, bool) {
	if o == nil || IsNil(o.QueryParameters) {
		return map[string]string{}, false
	}
	return o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) HasQueryParameters() bool {
	if o != nil && !IsNil(o.QueryParameters) {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given map[string]string and assigns it to the QueryParameters field.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetQueryParameters(v map[string]string) {
	o.QueryParameters = v
}

// GetMainUser returns the MainUser field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetMainUser() bool {
	if o == nil || IsNil(o.MainUser) {
		var ret bool
		return ret
	}
	return *o.MainUser
}

// GetMainUserOk returns a tuple with the MainUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetMainUserOk() (*bool, bool) {
	if o == nil || IsNil(o.MainUser) {
		return nil, false
	}
	return o.MainUser, true
}

// HasMainUser returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) HasMainUser() bool {
	if o != nil && !IsNil(o.MainUser) {
		return true
	}

	return false
}

// SetMainUser gets a reference to the given bool and assigns it to the MainUser field.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetMainUser(v bool) {
	o.MainUser = &v
}

// GetBasic returns the Basic field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetBasic() string {
	if o == nil || IsNil(o.Basic) {
		var ret string
		return ret
	}
	return *o.Basic
}

// GetBasicOk returns a tuple with the Basic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetBasicOk() (*string, bool) {
	if o == nil || IsNil(o.Basic) {
		return nil, false
	}
	return o.Basic, true
}

// HasBasic returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) HasBasic() bool {
	if o != nil && !IsNil(o.Basic) {
		return true
	}

	return false
}

// SetBasic gets a reference to the given string and assigns it to the Basic field.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetBasic(v string) {
	o.Basic = &v
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetDigest() string {
	if o == nil || IsNil(o.Digest) {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetDigestOk() (*string, bool) {
	if o == nil || IsNil(o.Digest) {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) HasDigest() bool {
	if o != nil && !IsNil(o.Digest) {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetDigest(v string) {
	o.Digest = &v
}

// GetPassword returns the Password field value
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetPassword(v string) {
	o.Password = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) SetScopes(v []string) {
	o.Scopes = v
}

func (o ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["username"] = o.Username
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.Cookies) {
		toSerialize["cookies"] = o.Cookies
	}
	if !IsNil(o.QueryParameters) {
		toSerialize["query_parameters"] = o.QueryParameters
	}
	if !IsNil(o.MainUser) {
		toSerialize["main_user"] = o.MainUser
	}
	if !IsNil(o.Basic) {
		toSerialize["basic"] = o.Basic
	}
	if !IsNil(o.Digest) {
		toSerialize["digest"] = o.Digest
	}
	toSerialize["password"] = o.Password
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"username",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner := _ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner(varProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "username")
		delete(additionalProperties, "headers")
		delete(additionalProperties, "cookies")
		delete(additionalProperties, "query_parameters")
		delete(additionalProperties, "main_user")
		delete(additionalProperties, "basic")
		delete(additionalProperties, "digest")
		delete(additionalProperties, "password")
		delete(additionalProperties, "scopes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner struct {
	value *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner
	isSet bool
}

func (v NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) Get() *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner {
	return v.value
}

func (v *NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) Set(val *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner(val *ProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) *NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner {
	return &NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationAuthenticationPresetsInnerOneOf1UsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


