/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the GetEvent200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvent200Response{}

// GetEvent200Response struct for GetEvent200Response
type GetEvent200Response struct {
	Issues []ListIssues200ResponseDataInner `json:"issues,omitempty"`
	IssuesCount float32 `json:"issuesCount"`
	Level EnumAc8825c946764c840068c1a5eddeee84 `json:"level"`
	Scan CreateASMDNSProfile200ResponseLastResourceScan `json:"scan"`
	ScanId string `json:"scanId"`
	Stage Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 `json:"stage"`
	Title string `json:"title"`
	AdditionalProperties map[string]interface{}
}

type _GetEvent200Response GetEvent200Response

// NewGetEvent200Response instantiates a new GetEvent200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvent200Response(issuesCount float32, level EnumAc8825c946764c840068c1a5eddeee84, scan CreateASMDNSProfile200ResponseLastResourceScan, scanId string, stage Enum34c4bb5e862eb0ecedb41ea70fd4e2a4, title string) *GetEvent200Response {
	this := GetEvent200Response{}
	this.IssuesCount = issuesCount
	this.Level = level
	this.Scan = scan
	this.ScanId = scanId
	this.Stage = stage
	this.Title = title
	return &this
}

// NewGetEvent200ResponseWithDefaults instantiates a new GetEvent200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvent200ResponseWithDefaults() *GetEvent200Response {
	this := GetEvent200Response{}
	return &this
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *GetEvent200Response) GetIssues() []ListIssues200ResponseDataInner {
	if o == nil || IsNil(o.Issues) {
		var ret []ListIssues200ResponseDataInner
		return ret
	}
	return o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvent200Response) GetIssuesOk() ([]ListIssues200ResponseDataInner, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *GetEvent200Response) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []ListIssues200ResponseDataInner and assigns it to the Issues field.
func (o *GetEvent200Response) SetIssues(v []ListIssues200ResponseDataInner) {
	o.Issues = v
}

// GetIssuesCount returns the IssuesCount field value
func (o *GetEvent200Response) GetIssuesCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IssuesCount
}

// GetIssuesCountOk returns a tuple with the IssuesCount field value
// and a boolean to check if the value has been set.
func (o *GetEvent200Response) GetIssuesCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuesCount, true
}

// SetIssuesCount sets field value
func (o *GetEvent200Response) SetIssuesCount(v float32) {
	o.IssuesCount = v
}

// GetLevel returns the Level field value
func (o *GetEvent200Response) GetLevel() EnumAc8825c946764c840068c1a5eddeee84 {
	if o == nil {
		var ret EnumAc8825c946764c840068c1a5eddeee84
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *GetEvent200Response) GetLevelOk() (*EnumAc8825c946764c840068c1a5eddeee84, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *GetEvent200Response) SetLevel(v EnumAc8825c946764c840068c1a5eddeee84) {
	o.Level = v
}

// GetScan returns the Scan field value
func (o *GetEvent200Response) GetScan() CreateASMDNSProfile200ResponseLastResourceScan {
	if o == nil {
		var ret CreateASMDNSProfile200ResponseLastResourceScan
		return ret
	}

	return o.Scan
}

// GetScanOk returns a tuple with the Scan field value
// and a boolean to check if the value has been set.
func (o *GetEvent200Response) GetScanOk() (*CreateASMDNSProfile200ResponseLastResourceScan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scan, true
}

// SetScan sets field value
func (o *GetEvent200Response) SetScan(v CreateASMDNSProfile200ResponseLastResourceScan) {
	o.Scan = v
}

// GetScanId returns the ScanId field value
func (o *GetEvent200Response) GetScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value
// and a boolean to check if the value has been set.
func (o *GetEvent200Response) GetScanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScanId, true
}

// SetScanId sets field value
func (o *GetEvent200Response) SetScanId(v string) {
	o.ScanId = v
}

// GetStage returns the Stage field value
func (o *GetEvent200Response) GetStage() Enum34c4bb5e862eb0ecedb41ea70fd4e2a4 {
	if o == nil {
		var ret Enum34c4bb5e862eb0ecedb41ea70fd4e2a4
		return ret
	}

	return o.Stage
}

// GetStageOk returns a tuple with the Stage field value
// and a boolean to check if the value has been set.
func (o *GetEvent200Response) GetStageOk() (*Enum34c4bb5e862eb0ecedb41ea70fd4e2a4, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stage, true
}

// SetStage sets field value
func (o *GetEvent200Response) SetStage(v Enum34c4bb5e862eb0ecedb41ea70fd4e2a4) {
	o.Stage = v
}

// GetTitle returns the Title field value
func (o *GetEvent200Response) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *GetEvent200Response) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *GetEvent200Response) SetTitle(v string) {
	o.Title = v
}

func (o GetEvent200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvent200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	toSerialize["issuesCount"] = o.IssuesCount
	toSerialize["level"] = o.Level
	toSerialize["scan"] = o.Scan
	toSerialize["scanId"] = o.ScanId
	toSerialize["stage"] = o.Stage
	toSerialize["title"] = o.Title

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetEvent200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"issuesCount",
		"level",
		"scan",
		"scanId",
		"stage",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEvent200Response := _GetEvent200Response{}

	err = json.Unmarshal(data, &varGetEvent200Response)

	if err != nil {
		return err
	}

	*o = GetEvent200Response(varGetEvent200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "issues")
		delete(additionalProperties, "issuesCount")
		delete(additionalProperties, "level")
		delete(additionalProperties, "scan")
		delete(additionalProperties, "scanId")
		delete(additionalProperties, "stage")
		delete(additionalProperties, "title")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetEvent200Response struct {
	value *GetEvent200Response
	isSet bool
}

func (v NullableGetEvent200Response) Get() *GetEvent200Response {
	return v.value
}

func (v *NullableGetEvent200Response) Set(val *GetEvent200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvent200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvent200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvent200Response(val *GetEvent200Response) *NullableGetEvent200Response {
	return &NullableGetEvent200Response{value: val, isSet: true}
}

func (v NullableGetEvent200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvent200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


