/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// EnumD968454db7f2bee22e4a35da27d7875d the model 'EnumD968454db7f2bee22e4a35da27d7875d'
type EnumD968454db7f2bee22e4a35da27d7875d string

// List of Enum_d968454db7f2bee22e4a35da27d7875d
const (
	ENUMD968454DB7F2BEE22E4A35DA27D7875D_FETCH EnumD968454db7f2bee22e4a35da27d7875d = "FETCH"
	ENUMD968454DB7F2BEE22E4A35DA27D7875D_INVENTORY EnumD968454db7f2bee22e4a35da27d7875d = "INVENTORY"
	ENUMD968454DB7F2BEE22E4A35DA27D7875D_UPLOAD EnumD968454db7f2bee22e4a35da27d7875d = "UPLOAD"
)

// All allowed values of EnumD968454db7f2bee22e4a35da27d7875d enum
var AllowedEnumD968454db7f2bee22e4a35da27d7875dEnumValues = []EnumD968454db7f2bee22e4a35da27d7875d{
	"FETCH",
	"INVENTORY",
	"UPLOAD",
}

func (v *EnumD968454db7f2bee22e4a35da27d7875d) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumD968454db7f2bee22e4a35da27d7875d(value)
	for _, existing := range AllowedEnumD968454db7f2bee22e4a35da27d7875dEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumD968454db7f2bee22e4a35da27d7875d", value)
}

// NewEnumD968454db7f2bee22e4a35da27d7875dFromValue returns a pointer to a valid EnumD968454db7f2bee22e4a35da27d7875d
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumD968454db7f2bee22e4a35da27d7875dFromValue(v string) (*EnumD968454db7f2bee22e4a35da27d7875d, error) {
	ev := EnumD968454db7f2bee22e4a35da27d7875d(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumD968454db7f2bee22e4a35da27d7875d: valid values are %v", v, AllowedEnumD968454db7f2bee22e4a35da27d7875dEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumD968454db7f2bee22e4a35da27d7875d) IsValid() bool {
	for _, existing := range AllowedEnumD968454db7f2bee22e4a35da27d7875dEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_d968454db7f2bee22e4a35da27d7875d value
func (v EnumD968454db7f2bee22e4a35da27d7875d) Ptr() *EnumD968454db7f2bee22e4a35da27d7875d {
	return &v
}

type NullableEnumD968454db7f2bee22e4a35da27d7875d struct {
	value *EnumD968454db7f2bee22e4a35da27d7875d
	isSet bool
}

func (v NullableEnumD968454db7f2bee22e4a35da27d7875d) Get() *EnumD968454db7f2bee22e4a35da27d7875d {
	return v.value
}

func (v *NullableEnumD968454db7f2bee22e4a35da27d7875d) Set(val *EnumD968454db7f2bee22e4a35da27d7875d) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumD968454db7f2bee22e4a35da27d7875d) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumD968454db7f2bee22e4a35da27d7875d) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumD968454db7f2bee22e4a35da27d7875d(val *EnumD968454db7f2bee22e4a35da27d7875d) *NullableEnumD968454db7f2bee22e4a35da27d7875d {
	return &NullableEnumD968454db7f2bee22e4a35da27d7875d{value: val, isSet: true}
}

func (v NullableEnumD968454db7f2bee22e4a35da27d7875d) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumD968454db7f2bee22e4a35da27d7875d) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

