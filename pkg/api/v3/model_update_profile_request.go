/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the UpdateProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProfileRequest{}

// UpdateProfileRequest struct for UpdateProfileRequest
type UpdateProfileRequest struct {
	// The name of the profile
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateProfileRequest UpdateProfileRequest

// NewUpdateProfileRequest instantiates a new UpdateProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProfileRequest() *UpdateProfileRequest {
	this := UpdateProfileRequest{}
	return &this
}

// NewUpdateProfileRequestWithDefaults instantiates a new UpdateProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProfileRequestWithDefaults() *UpdateProfileRequest {
	this := UpdateProfileRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateProfileRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateProfileRequest) SetName(v string) {
	o.Name = &v
}

func (o UpdateProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateProfileRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateProfileRequest := _UpdateProfileRequest{}

	err = json.Unmarshal(data, &varUpdateProfileRequest)

	if err != nil {
		return err
	}

	*o = UpdateProfileRequest(varUpdateProfileRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateProfileRequest struct {
	value *UpdateProfileRequest
	isSet bool
}

func (v NullableUpdateProfileRequest) Get() *UpdateProfileRequest {
	return v.value
}

func (v *NullableUpdateProfileRequest) Set(val *UpdateProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProfileRequest(val *UpdateProfileRequest) *NullableUpdateProfileRequest {
	return &NullableUpdateProfileRequest{value: val, isSet: true}
}

func (v NullableUpdateProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


