/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationInference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationInference{}

// ProfileDetailedConfigurationInference struct for ProfileDetailedConfigurationInference
type ProfileDetailedConfigurationInference struct {
	Scalars map[string]ProfileDetailedConfigurationInferenceScalarsValue `json:"scalars,omitempty"`
	NullIsUnauthenticated *bool `json:"null_is_unauthenticated,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationInference ProfileDetailedConfigurationInference

// NewProfileDetailedConfigurationInference instantiates a new ProfileDetailedConfigurationInference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationInference() *ProfileDetailedConfigurationInference {
	this := ProfileDetailedConfigurationInference{}
	return &this
}

// NewProfileDetailedConfigurationInferenceWithDefaults instantiates a new ProfileDetailedConfigurationInference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationInferenceWithDefaults() *ProfileDetailedConfigurationInference {
	this := ProfileDetailedConfigurationInference{}
	return &this
}

// GetScalars returns the Scalars field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationInference) GetScalars() map[string]ProfileDetailedConfigurationInferenceScalarsValue {
	if o == nil || IsNil(o.Scalars) {
		var ret map[string]ProfileDetailedConfigurationInferenceScalarsValue
		return ret
	}
	return o.Scalars
}

// GetScalarsOk returns a tuple with the Scalars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationInference) GetScalarsOk() (map[string]ProfileDetailedConfigurationInferenceScalarsValue, bool) {
	if o == nil || IsNil(o.Scalars) {
		return map[string]ProfileDetailedConfigurationInferenceScalarsValue{}, false
	}
	return o.Scalars, true
}

// HasScalars returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationInference) HasScalars() bool {
	if o != nil && !IsNil(o.Scalars) {
		return true
	}

	return false
}

// SetScalars gets a reference to the given map[string]ProfileDetailedConfigurationInferenceScalarsValue and assigns it to the Scalars field.
func (o *ProfileDetailedConfigurationInference) SetScalars(v map[string]ProfileDetailedConfigurationInferenceScalarsValue) {
	o.Scalars = v
}

// GetNullIsUnauthenticated returns the NullIsUnauthenticated field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationInference) GetNullIsUnauthenticated() bool {
	if o == nil || IsNil(o.NullIsUnauthenticated) {
		var ret bool
		return ret
	}
	return *o.NullIsUnauthenticated
}

// GetNullIsUnauthenticatedOk returns a tuple with the NullIsUnauthenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationInference) GetNullIsUnauthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.NullIsUnauthenticated) {
		return nil, false
	}
	return o.NullIsUnauthenticated, true
}

// HasNullIsUnauthenticated returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationInference) HasNullIsUnauthenticated() bool {
	if o != nil && !IsNil(o.NullIsUnauthenticated) {
		return true
	}

	return false
}

// SetNullIsUnauthenticated gets a reference to the given bool and assigns it to the NullIsUnauthenticated field.
func (o *ProfileDetailedConfigurationInference) SetNullIsUnauthenticated(v bool) {
	o.NullIsUnauthenticated = &v
}

func (o ProfileDetailedConfigurationInference) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationInference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scalars) {
		toSerialize["scalars"] = o.Scalars
	}
	if !IsNil(o.NullIsUnauthenticated) {
		toSerialize["null_is_unauthenticated"] = o.NullIsUnauthenticated
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationInference) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationInference := _ProfileDetailedConfigurationInference{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationInference)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationInference(varProfileDetailedConfigurationInference)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "scalars")
		delete(additionalProperties, "null_is_unauthenticated")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationInference struct {
	value *ProfileDetailedConfigurationInference
	isSet bool
}

func (v NullableProfileDetailedConfigurationInference) Get() *ProfileDetailedConfigurationInference {
	return v.value
}

func (v *NullableProfileDetailedConfigurationInference) Set(val *ProfileDetailedConfigurationInference) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationInference) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationInference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationInference(val *ProfileDetailedConfigurationInference) *NullableProfileDetailedConfigurationInference {
	return &NullableProfileDetailedConfigurationInference{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationInference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationInference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


