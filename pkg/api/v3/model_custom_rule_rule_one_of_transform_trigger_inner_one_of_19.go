/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomRuleRuleOneOfTransformTriggerInnerOneOf19 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomRuleRuleOneOfTransformTriggerInnerOneOf19{}

// CustomRuleRuleOneOfTransformTriggerInnerOneOf19 struct for CustomRuleRuleOneOfTransformTriggerInnerOneOf19
type CustomRuleRuleOneOfTransformTriggerInnerOneOf19 struct {
	And []interface{} `json:"and"`
	If ENUMAND `json:"if"`
	AdditionalProperties map[string]interface{}
}

type _CustomRuleRuleOneOfTransformTriggerInnerOneOf19 CustomRuleRuleOneOfTransformTriggerInnerOneOf19

// NewCustomRuleRuleOneOfTransformTriggerInnerOneOf19 instantiates a new CustomRuleRuleOneOfTransformTriggerInnerOneOf19 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomRuleRuleOneOfTransformTriggerInnerOneOf19(and []interface{}, if_ ENUMAND) *CustomRuleRuleOneOfTransformTriggerInnerOneOf19 {
	this := CustomRuleRuleOneOfTransformTriggerInnerOneOf19{}
	this.And = and
	this.If = if_
	return &this
}

// NewCustomRuleRuleOneOfTransformTriggerInnerOneOf19WithDefaults instantiates a new CustomRuleRuleOneOfTransformTriggerInnerOneOf19 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomRuleRuleOneOfTransformTriggerInnerOneOf19WithDefaults() *CustomRuleRuleOneOfTransformTriggerInnerOneOf19 {
	this := CustomRuleRuleOneOfTransformTriggerInnerOneOf19{}
	return &this
}

// GetAnd returns the And field value
func (o *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) GetAnd() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.And
}

// GetAndOk returns a tuple with the And field value
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) GetAndOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.And, true
}

// SetAnd sets field value
func (o *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) SetAnd(v []interface{}) {
	o.And = v
}

// GetIf returns the If field value
func (o *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) GetIf() ENUMAND {
	if o == nil {
		var ret ENUMAND
		return ret
	}

	return o.If
}

// GetIfOk returns a tuple with the If field value
// and a boolean to check if the value has been set.
func (o *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) GetIfOk() (*ENUMAND, bool) {
	if o == nil {
		return nil, false
	}
	return &o.If, true
}

// SetIf sets field value
func (o *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) SetIf(v ENUMAND) {
	o.If = v
}

func (o CustomRuleRuleOneOfTransformTriggerInnerOneOf19) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomRuleRuleOneOfTransformTriggerInnerOneOf19) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["and"] = o.And
	toSerialize["if"] = o.If

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"and",
		"if",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomRuleRuleOneOfTransformTriggerInnerOneOf19 := _CustomRuleRuleOneOfTransformTriggerInnerOneOf19{}

	err = json.Unmarshal(data, &varCustomRuleRuleOneOfTransformTriggerInnerOneOf19)

	if err != nil {
		return err
	}

	*o = CustomRuleRuleOneOfTransformTriggerInnerOneOf19(varCustomRuleRuleOneOfTransformTriggerInnerOneOf19)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "and")
		delete(additionalProperties, "if")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19 struct {
	value *CustomRuleRuleOneOfTransformTriggerInnerOneOf19
	isSet bool
}

func (v NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19) Get() *CustomRuleRuleOneOfTransformTriggerInnerOneOf19 {
	return v.value
}

func (v *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19) Set(val *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19(val *CustomRuleRuleOneOfTransformTriggerInnerOneOf19) *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19 {
	return &NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19{value: val, isSet: true}
}

func (v NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRuleRuleOneOfTransformTriggerInnerOneOf19) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


