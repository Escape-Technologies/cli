/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CreateCustomRuleRequestContentRuleOneOfSeedInner - struct for CreateCustomRuleRequestContentRuleOneOfSeedInner
type CreateCustomRuleRequestContentRuleOneOfSeedInner struct {
	CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf *CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf
	CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 *CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1
	CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 *CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2
}

// CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOfAsCreateCustomRuleRequestContentRuleOneOfSeedInner is a convenience function that returns CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf wrapped in CreateCustomRuleRequestContentRuleOneOfSeedInner
func CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOfAsCreateCustomRuleRequestContentRuleOneOfSeedInner(v *CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf) CreateCustomRuleRequestContentRuleOneOfSeedInner {
	return CreateCustomRuleRequestContentRuleOneOfSeedInner{
		CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf: v,
	}
}

// CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1AsCreateCustomRuleRequestContentRuleOneOfSeedInner is a convenience function that returns CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 wrapped in CreateCustomRuleRequestContentRuleOneOfSeedInner
func CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1AsCreateCustomRuleRequestContentRuleOneOfSeedInner(v *CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1) CreateCustomRuleRequestContentRuleOneOfSeedInner {
	return CreateCustomRuleRequestContentRuleOneOfSeedInner{
		CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1: v,
	}
}

// CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2AsCreateCustomRuleRequestContentRuleOneOfSeedInner is a convenience function that returns CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 wrapped in CreateCustomRuleRequestContentRuleOneOfSeedInner
func CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2AsCreateCustomRuleRequestContentRuleOneOfSeedInner(v *CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2) CreateCustomRuleRequestContentRuleOneOfSeedInner {
	return CreateCustomRuleRequestContentRuleOneOfSeedInner{
		CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateCustomRuleRequestContentRuleOneOfSeedInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf)
	if err == nil {
		jsonCreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf, _ := json.Marshal(dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf)
		if string(jsonCreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf) == "{}" { // empty struct
			dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf); err != nil {
				dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf = nil
	}

	// try to unmarshal data into CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1)
	if err == nil {
		jsonCreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1, _ := json.Marshal(dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1)
		if string(jsonCreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1) == "{}" { // empty struct
			dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1); err != nil {
				dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 = nil
	}

	// try to unmarshal data into CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2
	err = newStrictDecoder(data).Decode(&dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2)
	if err == nil {
		jsonCreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2, _ := json.Marshal(dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2)
		if string(jsonCreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2) == "{}" { // empty struct
			dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 = nil
		} else {
			if err = validator.Validate(dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2); err != nil {
				dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf = nil
		dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 = nil
		dst.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateCustomRuleRequestContentRuleOneOfSeedInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateCustomRuleRequestContentRuleOneOfSeedInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateCustomRuleRequestContentRuleOneOfSeedInner) MarshalJSON() ([]byte, error) {
	if src.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf != nil {
		return json.Marshal(&src.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf)
	}

	if src.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 != nil {
		return json.Marshal(&src.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1)
	}

	if src.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 != nil {
		return json.Marshal(&src.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateCustomRuleRequestContentRuleOneOfSeedInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf != nil {
		return obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf
	}

	if obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 != nil {
		return obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1
	}

	if obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 != nil {
		return obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CreateCustomRuleRequestContentRuleOneOfSeedInner) GetActualInstanceValue() (interface{}) {
	if obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf != nil {
		return *obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf
	}

	if obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1 != nil {
		return *obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf1
	}

	if obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2 != nil {
		return *obj.CreateCustomRuleRequestContentRuleOneOfSeedInnerOneOf2
	}

	// all schemas are nil
	return nil
}

type NullableCreateCustomRuleRequestContentRuleOneOfSeedInner struct {
	value *CreateCustomRuleRequestContentRuleOneOfSeedInner
	isSet bool
}

func (v NullableCreateCustomRuleRequestContentRuleOneOfSeedInner) Get() *CreateCustomRuleRequestContentRuleOneOfSeedInner {
	return v.value
}

func (v *NullableCreateCustomRuleRequestContentRuleOneOfSeedInner) Set(val *CreateCustomRuleRequestContentRuleOneOfSeedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomRuleRequestContentRuleOneOfSeedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomRuleRequestContentRuleOneOfSeedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomRuleRequestContentRuleOneOfSeedInner(val *CreateCustomRuleRequestContentRuleOneOfSeedInner) *NullableCreateCustomRuleRequestContentRuleOneOfSeedInner {
	return &NullableCreateCustomRuleRequestContentRuleOneOfSeedInner{value: val, isSet: true}
}

func (v NullableCreateCustomRuleRequestContentRuleOneOfSeedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomRuleRequestContentRuleOneOfSeedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


