/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the StatisticsDetailedIssues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatisticsDetailedIssues{}

// StatisticsDetailedIssues The issues of the statistics
type StatisticsDetailedIssues struct {
	// The number of all issues
	All float32 `json:"all"`
	Severities []StatisticsDetailedIssuesSeveritiesInner `json:"severities"`
	Categories []StatisticsDetailedIssuesCategoriesInner `json:"categories"`
	AdditionalProperties map[string]interface{}
}

type _StatisticsDetailedIssues StatisticsDetailedIssues

// NewStatisticsDetailedIssues instantiates a new StatisticsDetailedIssues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatisticsDetailedIssues(all float32, severities []StatisticsDetailedIssuesSeveritiesInner, categories []StatisticsDetailedIssuesCategoriesInner) *StatisticsDetailedIssues {
	this := StatisticsDetailedIssues{}
	this.All = all
	this.Severities = severities
	this.Categories = categories
	return &this
}

// NewStatisticsDetailedIssuesWithDefaults instantiates a new StatisticsDetailedIssues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatisticsDetailedIssuesWithDefaults() *StatisticsDetailedIssues {
	this := StatisticsDetailedIssues{}
	return &this
}

// GetAll returns the All field value
func (o *StatisticsDetailedIssues) GetAll() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.All
}

// GetAllOk returns a tuple with the All field value
// and a boolean to check if the value has been set.
func (o *StatisticsDetailedIssues) GetAllOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.All, true
}

// SetAll sets field value
func (o *StatisticsDetailedIssues) SetAll(v float32) {
	o.All = v
}

// GetSeverities returns the Severities field value
func (o *StatisticsDetailedIssues) GetSeverities() []StatisticsDetailedIssuesSeveritiesInner {
	if o == nil {
		var ret []StatisticsDetailedIssuesSeveritiesInner
		return ret
	}

	return o.Severities
}

// GetSeveritiesOk returns a tuple with the Severities field value
// and a boolean to check if the value has been set.
func (o *StatisticsDetailedIssues) GetSeveritiesOk() ([]StatisticsDetailedIssuesSeveritiesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Severities, true
}

// SetSeverities sets field value
func (o *StatisticsDetailedIssues) SetSeverities(v []StatisticsDetailedIssuesSeveritiesInner) {
	o.Severities = v
}

// GetCategories returns the Categories field value
func (o *StatisticsDetailedIssues) GetCategories() []StatisticsDetailedIssuesCategoriesInner {
	if o == nil {
		var ret []StatisticsDetailedIssuesCategoriesInner
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *StatisticsDetailedIssues) GetCategoriesOk() ([]StatisticsDetailedIssuesCategoriesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *StatisticsDetailedIssues) SetCategories(v []StatisticsDetailedIssuesCategoriesInner) {
	o.Categories = v
}

func (o StatisticsDetailedIssues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatisticsDetailedIssues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["all"] = o.All
	toSerialize["severities"] = o.Severities
	toSerialize["categories"] = o.Categories

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StatisticsDetailedIssues) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"all",
		"severities",
		"categories",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatisticsDetailedIssues := _StatisticsDetailedIssues{}

	err = json.Unmarshal(data, &varStatisticsDetailedIssues)

	if err != nil {
		return err
	}

	*o = StatisticsDetailedIssues(varStatisticsDetailedIssues)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "all")
		delete(additionalProperties, "severities")
		delete(additionalProperties, "categories")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStatisticsDetailedIssues struct {
	value *StatisticsDetailedIssues
	isSet bool
}

func (v NullableStatisticsDetailedIssues) Get() *StatisticsDetailedIssues {
	return v.value
}

func (v *NullableStatisticsDetailedIssues) Set(val *StatisticsDetailedIssues) {
	v.value = val
	v.isSet = true
}

func (v NullableStatisticsDetailedIssues) IsSet() bool {
	return v.isSet
}

func (v *NullableStatisticsDetailedIssues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatisticsDetailedIssues(val *StatisticsDetailedIssues) *NullableStatisticsDetailedIssues {
	return &NullableStatisticsDetailedIssues{value: val, isSet: true}
}

func (v NullableStatisticsDetailedIssues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatisticsDetailedIssues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


