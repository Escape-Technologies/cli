/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum0410d7bce63db604e9e878b01274b5a3 The source of the api route
type Enum0410d7bce63db604e9e878b01274b5a3 string

// List of Enum_0410d7bce63db604e9e878b01274b5a3
const (
	ENUM0410D7BCE63DB604E9E878B01274B5A3_SOURCE_INFERRED Enum0410d7bce63db604e9e878b01274b5a3 = "SOURCE_INFERRED"
	ENUM0410D7BCE63DB604E9E878B01274B5A3_SOURCE_SPECIFICATION Enum0410d7bce63db604e9e878b01274b5a3 = "SOURCE_SPECIFICATION"
)

// All allowed values of Enum0410d7bce63db604e9e878b01274b5a3 enum
var AllowedEnum0410d7bce63db604e9e878b01274b5a3EnumValues = []Enum0410d7bce63db604e9e878b01274b5a3{
	"SOURCE_INFERRED",
	"SOURCE_SPECIFICATION",
}

func (v *Enum0410d7bce63db604e9e878b01274b5a3) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum0410d7bce63db604e9e878b01274b5a3(value)
	for _, existing := range AllowedEnum0410d7bce63db604e9e878b01274b5a3EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum0410d7bce63db604e9e878b01274b5a3", value)
}

// NewEnum0410d7bce63db604e9e878b01274b5a3FromValue returns a pointer to a valid Enum0410d7bce63db604e9e878b01274b5a3
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum0410d7bce63db604e9e878b01274b5a3FromValue(v string) (*Enum0410d7bce63db604e9e878b01274b5a3, error) {
	ev := Enum0410d7bce63db604e9e878b01274b5a3(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum0410d7bce63db604e9e878b01274b5a3: valid values are %v", v, AllowedEnum0410d7bce63db604e9e878b01274b5a3EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum0410d7bce63db604e9e878b01274b5a3) IsValid() bool {
	for _, existing := range AllowedEnum0410d7bce63db604e9e878b01274b5a3EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_0410d7bce63db604e9e878b01274b5a3 value
func (v Enum0410d7bce63db604e9e878b01274b5a3) Ptr() *Enum0410d7bce63db604e9e878b01274b5a3 {
	return &v
}

type NullableEnum0410d7bce63db604e9e878b01274b5a3 struct {
	value *Enum0410d7bce63db604e9e878b01274b5a3
	isSet bool
}

func (v NullableEnum0410d7bce63db604e9e878b01274b5a3) Get() *Enum0410d7bce63db604e9e878b01274b5a3 {
	return v.value
}

func (v *NullableEnum0410d7bce63db604e9e878b01274b5a3) Set(val *Enum0410d7bce63db604e9e878b01274b5a3) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum0410d7bce63db604e9e878b01274b5a3) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum0410d7bce63db604e9e878b01274b5a3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum0410d7bce63db604e9e878b01274b5a3(val *Enum0410d7bce63db604e9e878b01274b5a3) *NullableEnum0410d7bce63db604e9e878b01274b5a3 {
	return &NullableEnum0410d7bce63db604e9e878b01274b5a3{value: val, isSet: true}
}

func (v NullableEnum0410d7bce63db604e9e878b01274b5a3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum0410d7bce63db604e9e878b01274b5a3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

