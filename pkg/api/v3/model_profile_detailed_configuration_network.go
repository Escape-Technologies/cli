/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ProfileDetailedConfigurationNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDetailedConfigurationNetwork{}

// ProfileDetailedConfigurationNetwork struct for ProfileDetailedConfigurationNetwork
type ProfileDetailedConfigurationNetwork struct {
	RequestTimeoutS *float32 `json:"request_timeout_s,omitempty"`
	RequestsPerSecond *float32 `json:"requests_per_second,omitempty"`
	CustomHeaders map[string][]string `json:"custom_headers,omitempty"`
	CancelUnhealthyScanAfter *float32 `json:"cancel_unhealthy_scan_after,omitempty"`
	EscapeUser *bool `json:"escape_user,omitempty"`
	FfFrontendNextSender *bool `json:"ff_frontend_next_sender,omitempty"`
	ParallelRequests *float32 `json:"parallel_requests,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileDetailedConfigurationNetwork ProfileDetailedConfigurationNetwork

// NewProfileDetailedConfigurationNetwork instantiates a new ProfileDetailedConfigurationNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDetailedConfigurationNetwork() *ProfileDetailedConfigurationNetwork {
	this := ProfileDetailedConfigurationNetwork{}
	return &this
}

// NewProfileDetailedConfigurationNetworkWithDefaults instantiates a new ProfileDetailedConfigurationNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDetailedConfigurationNetworkWithDefaults() *ProfileDetailedConfigurationNetwork {
	this := ProfileDetailedConfigurationNetwork{}
	return &this
}

// GetRequestTimeoutS returns the RequestTimeoutS field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationNetwork) GetRequestTimeoutS() float32 {
	if o == nil || IsNil(o.RequestTimeoutS) {
		var ret float32
		return ret
	}
	return *o.RequestTimeoutS
}

// GetRequestTimeoutSOk returns a tuple with the RequestTimeoutS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationNetwork) GetRequestTimeoutSOk() (*float32, bool) {
	if o == nil || IsNil(o.RequestTimeoutS) {
		return nil, false
	}
	return o.RequestTimeoutS, true
}

// HasRequestTimeoutS returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationNetwork) HasRequestTimeoutS() bool {
	if o != nil && !IsNil(o.RequestTimeoutS) {
		return true
	}

	return false
}

// SetRequestTimeoutS gets a reference to the given float32 and assigns it to the RequestTimeoutS field.
func (o *ProfileDetailedConfigurationNetwork) SetRequestTimeoutS(v float32) {
	o.RequestTimeoutS = &v
}

// GetRequestsPerSecond returns the RequestsPerSecond field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationNetwork) GetRequestsPerSecond() float32 {
	if o == nil || IsNil(o.RequestsPerSecond) {
		var ret float32
		return ret
	}
	return *o.RequestsPerSecond
}

// GetRequestsPerSecondOk returns a tuple with the RequestsPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationNetwork) GetRequestsPerSecondOk() (*float32, bool) {
	if o == nil || IsNil(o.RequestsPerSecond) {
		return nil, false
	}
	return o.RequestsPerSecond, true
}

// HasRequestsPerSecond returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationNetwork) HasRequestsPerSecond() bool {
	if o != nil && !IsNil(o.RequestsPerSecond) {
		return true
	}

	return false
}

// SetRequestsPerSecond gets a reference to the given float32 and assigns it to the RequestsPerSecond field.
func (o *ProfileDetailedConfigurationNetwork) SetRequestsPerSecond(v float32) {
	o.RequestsPerSecond = &v
}

// GetCustomHeaders returns the CustomHeaders field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationNetwork) GetCustomHeaders() map[string][]string {
	if o == nil || IsNil(o.CustomHeaders) {
		var ret map[string][]string
		return ret
	}
	return o.CustomHeaders
}

// GetCustomHeadersOk returns a tuple with the CustomHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationNetwork) GetCustomHeadersOk() (map[string][]string, bool) {
	if o == nil || IsNil(o.CustomHeaders) {
		return map[string][]string{}, false
	}
	return o.CustomHeaders, true
}

// HasCustomHeaders returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationNetwork) HasCustomHeaders() bool {
	if o != nil && !IsNil(o.CustomHeaders) {
		return true
	}

	return false
}

// SetCustomHeaders gets a reference to the given map[string][]string and assigns it to the CustomHeaders field.
func (o *ProfileDetailedConfigurationNetwork) SetCustomHeaders(v map[string][]string) {
	o.CustomHeaders = v
}

// GetCancelUnhealthyScanAfter returns the CancelUnhealthyScanAfter field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationNetwork) GetCancelUnhealthyScanAfter() float32 {
	if o == nil || IsNil(o.CancelUnhealthyScanAfter) {
		var ret float32
		return ret
	}
	return *o.CancelUnhealthyScanAfter
}

// GetCancelUnhealthyScanAfterOk returns a tuple with the CancelUnhealthyScanAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationNetwork) GetCancelUnhealthyScanAfterOk() (*float32, bool) {
	if o == nil || IsNil(o.CancelUnhealthyScanAfter) {
		return nil, false
	}
	return o.CancelUnhealthyScanAfter, true
}

// HasCancelUnhealthyScanAfter returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationNetwork) HasCancelUnhealthyScanAfter() bool {
	if o != nil && !IsNil(o.CancelUnhealthyScanAfter) {
		return true
	}

	return false
}

// SetCancelUnhealthyScanAfter gets a reference to the given float32 and assigns it to the CancelUnhealthyScanAfter field.
func (o *ProfileDetailedConfigurationNetwork) SetCancelUnhealthyScanAfter(v float32) {
	o.CancelUnhealthyScanAfter = &v
}

// GetEscapeUser returns the EscapeUser field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationNetwork) GetEscapeUser() bool {
	if o == nil || IsNil(o.EscapeUser) {
		var ret bool
		return ret
	}
	return *o.EscapeUser
}

// GetEscapeUserOk returns a tuple with the EscapeUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationNetwork) GetEscapeUserOk() (*bool, bool) {
	if o == nil || IsNil(o.EscapeUser) {
		return nil, false
	}
	return o.EscapeUser, true
}

// HasEscapeUser returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationNetwork) HasEscapeUser() bool {
	if o != nil && !IsNil(o.EscapeUser) {
		return true
	}

	return false
}

// SetEscapeUser gets a reference to the given bool and assigns it to the EscapeUser field.
func (o *ProfileDetailedConfigurationNetwork) SetEscapeUser(v bool) {
	o.EscapeUser = &v
}

// GetFfFrontendNextSender returns the FfFrontendNextSender field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationNetwork) GetFfFrontendNextSender() bool {
	if o == nil || IsNil(o.FfFrontendNextSender) {
		var ret bool
		return ret
	}
	return *o.FfFrontendNextSender
}

// GetFfFrontendNextSenderOk returns a tuple with the FfFrontendNextSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationNetwork) GetFfFrontendNextSenderOk() (*bool, bool) {
	if o == nil || IsNil(o.FfFrontendNextSender) {
		return nil, false
	}
	return o.FfFrontendNextSender, true
}

// HasFfFrontendNextSender returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationNetwork) HasFfFrontendNextSender() bool {
	if o != nil && !IsNil(o.FfFrontendNextSender) {
		return true
	}

	return false
}

// SetFfFrontendNextSender gets a reference to the given bool and assigns it to the FfFrontendNextSender field.
func (o *ProfileDetailedConfigurationNetwork) SetFfFrontendNextSender(v bool) {
	o.FfFrontendNextSender = &v
}

// GetParallelRequests returns the ParallelRequests field value if set, zero value otherwise.
func (o *ProfileDetailedConfigurationNetwork) GetParallelRequests() float32 {
	if o == nil || IsNil(o.ParallelRequests) {
		var ret float32
		return ret
	}
	return *o.ParallelRequests
}

// GetParallelRequestsOk returns a tuple with the ParallelRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDetailedConfigurationNetwork) GetParallelRequestsOk() (*float32, bool) {
	if o == nil || IsNil(o.ParallelRequests) {
		return nil, false
	}
	return o.ParallelRequests, true
}

// HasParallelRequests returns a boolean if a field has been set.
func (o *ProfileDetailedConfigurationNetwork) HasParallelRequests() bool {
	if o != nil && !IsNil(o.ParallelRequests) {
		return true
	}

	return false
}

// SetParallelRequests gets a reference to the given float32 and assigns it to the ParallelRequests field.
func (o *ProfileDetailedConfigurationNetwork) SetParallelRequests(v float32) {
	o.ParallelRequests = &v
}

func (o ProfileDetailedConfigurationNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDetailedConfigurationNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestTimeoutS) {
		toSerialize["request_timeout_s"] = o.RequestTimeoutS
	}
	if !IsNil(o.RequestsPerSecond) {
		toSerialize["requests_per_second"] = o.RequestsPerSecond
	}
	if !IsNil(o.CustomHeaders) {
		toSerialize["custom_headers"] = o.CustomHeaders
	}
	if !IsNil(o.CancelUnhealthyScanAfter) {
		toSerialize["cancel_unhealthy_scan_after"] = o.CancelUnhealthyScanAfter
	}
	if !IsNil(o.EscapeUser) {
		toSerialize["escape_user"] = o.EscapeUser
	}
	if !IsNil(o.FfFrontendNextSender) {
		toSerialize["ff_frontend_next_sender"] = o.FfFrontendNextSender
	}
	if !IsNil(o.ParallelRequests) {
		toSerialize["parallel_requests"] = o.ParallelRequests
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProfileDetailedConfigurationNetwork) UnmarshalJSON(data []byte) (err error) {
	varProfileDetailedConfigurationNetwork := _ProfileDetailedConfigurationNetwork{}

	err = json.Unmarshal(data, &varProfileDetailedConfigurationNetwork)

	if err != nil {
		return err
	}

	*o = ProfileDetailedConfigurationNetwork(varProfileDetailedConfigurationNetwork)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "request_timeout_s")
		delete(additionalProperties, "requests_per_second")
		delete(additionalProperties, "custom_headers")
		delete(additionalProperties, "cancel_unhealthy_scan_after")
		delete(additionalProperties, "escape_user")
		delete(additionalProperties, "ff_frontend_next_sender")
		delete(additionalProperties, "parallel_requests")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileDetailedConfigurationNetwork struct {
	value *ProfileDetailedConfigurationNetwork
	isSet bool
}

func (v NullableProfileDetailedConfigurationNetwork) Get() *ProfileDetailedConfigurationNetwork {
	return v.value
}

func (v *NullableProfileDetailedConfigurationNetwork) Set(val *ProfileDetailedConfigurationNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDetailedConfigurationNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDetailedConfigurationNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDetailedConfigurationNetwork(val *ProfileDetailedConfigurationNetwork) *NullableProfileDetailedConfigurationNetwork {
	return &NullableProfileDetailedConfigurationNetwork{value: val, isSet: true}
}

func (v NullableProfileDetailedConfigurationNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDetailedConfigurationNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


