/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum66ad4191701e5e8ad147df828a0d18a2 the model 'Enum66ad4191701e5e8ad147df828a0d18a2'
type Enum66ad4191701e5e8ad147df828a0d18a2 string

// List of Enum_66ad4191701e5e8ad147df828a0d18a2
const (
	ENUM66AD4191701E5E8AD147DF828A0D18A2_GRAPHQL_APOLLO Enum66ad4191701e5e8ad147df828a0d18a2 = "GRAPHQL_APOLLO"
	ENUM66AD4191701E5E8AD147DF828A0D18A2_GRAPHQL_GRAPHQLYOGA Enum66ad4191701e5e8ad147df828a0d18a2 = "GRAPHQL_GRAPHQLYOGA"
)

// All allowed values of Enum66ad4191701e5e8ad147df828a0d18a2 enum
var AllowedEnum66ad4191701e5e8ad147df828a0d18a2EnumValues = []Enum66ad4191701e5e8ad147df828a0d18a2{
	"GRAPHQL_APOLLO",
	"GRAPHQL_GRAPHQLYOGA",
}

func (v *Enum66ad4191701e5e8ad147df828a0d18a2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum66ad4191701e5e8ad147df828a0d18a2(value)
	for _, existing := range AllowedEnum66ad4191701e5e8ad147df828a0d18a2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum66ad4191701e5e8ad147df828a0d18a2", value)
}

// NewEnum66ad4191701e5e8ad147df828a0d18a2FromValue returns a pointer to a valid Enum66ad4191701e5e8ad147df828a0d18a2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum66ad4191701e5e8ad147df828a0d18a2FromValue(v string) (*Enum66ad4191701e5e8ad147df828a0d18a2, error) {
	ev := Enum66ad4191701e5e8ad147df828a0d18a2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum66ad4191701e5e8ad147df828a0d18a2: valid values are %v", v, AllowedEnum66ad4191701e5e8ad147df828a0d18a2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum66ad4191701e5e8ad147df828a0d18a2) IsValid() bool {
	for _, existing := range AllowedEnum66ad4191701e5e8ad147df828a0d18a2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_66ad4191701e5e8ad147df828a0d18a2 value
func (v Enum66ad4191701e5e8ad147df828a0d18a2) Ptr() *Enum66ad4191701e5e8ad147df828a0d18a2 {
	return &v
}

type NullableEnum66ad4191701e5e8ad147df828a0d18a2 struct {
	value *Enum66ad4191701e5e8ad147df828a0d18a2
	isSet bool
}

func (v NullableEnum66ad4191701e5e8ad147df828a0d18a2) Get() *Enum66ad4191701e5e8ad147df828a0d18a2 {
	return v.value
}

func (v *NullableEnum66ad4191701e5e8ad147df828a0d18a2) Set(val *Enum66ad4191701e5e8ad147df828a0d18a2) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum66ad4191701e5e8ad147df828a0d18a2) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum66ad4191701e5e8ad147df828a0d18a2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum66ad4191701e5e8ad147df828a0d18a2(val *Enum66ad4191701e5e8ad147df828a0d18a2) *NullableEnum66ad4191701e5e8ad147df828a0d18a2 {
	return &NullableEnum66ad4191701e5e8ad147df828a0d18a2{value: val, isSet: true}
}

func (v NullableEnum66ad4191701e5e8ad147df828a0d18a2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum66ad4191701e5e8ad147df828a0d18a2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

