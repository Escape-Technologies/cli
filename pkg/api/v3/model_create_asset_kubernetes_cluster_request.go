/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `X-ESCAPE-API-KEY` header. For example: `X-ESCAPE-API-KEY: YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAssetKUBERNETESCLUSTERRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetKUBERNETESCLUSTERRequest{}

// CreateAssetKUBERNETESCLUSTERRequest struct for CreateAssetKUBERNETESCLUSTERRequest
type CreateAssetKUBERNETESCLUSTERRequest struct {
	AssetClass ENUMCLOUDHOSTING `json:"asset_class"`
	WizProviderId *string `json:"wiz_provider_id,omitempty"`
	WizCloudPlatform *string `json:"wiz_cloud_platform,omitempty"`
	ExtraMetadata map[string]interface{} `json:"extra_metadata,omitempty"`
	AssetType ENUMKUBERNETESCLUSTER `json:"asset_type"`
	Name *string `json:"name,omitempty"`
	ImmutableKey string `json:"immutable_key"`
	PrivateLocationId string `json:"private_location_id"`
	AdditionalProperties map[string]interface{}
}

type _CreateAssetKUBERNETESCLUSTERRequest CreateAssetKUBERNETESCLUSTERRequest

// NewCreateAssetKUBERNETESCLUSTERRequest instantiates a new CreateAssetKUBERNETESCLUSTERRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetKUBERNETESCLUSTERRequest(assetClass ENUMCLOUDHOSTING, assetType ENUMKUBERNETESCLUSTER, immutableKey string, privateLocationId string) *CreateAssetKUBERNETESCLUSTERRequest {
	this := CreateAssetKUBERNETESCLUSTERRequest{}
	this.AssetClass = assetClass
	this.AssetType = assetType
	this.ImmutableKey = immutableKey
	this.PrivateLocationId = privateLocationId
	return &this
}

// NewCreateAssetKUBERNETESCLUSTERRequestWithDefaults instantiates a new CreateAssetKUBERNETESCLUSTERRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetKUBERNETESCLUSTERRequestWithDefaults() *CreateAssetKUBERNETESCLUSTERRequest {
	this := CreateAssetKUBERNETESCLUSTERRequest{}
	return &this
}

// GetAssetClass returns the AssetClass field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetAssetClass() ENUMCLOUDHOSTING {
	if o == nil {
		var ret ENUMCLOUDHOSTING
		return ret
	}

	return o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetAssetClassOk() (*ENUMCLOUDHOSTING, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetClass, true
}

// SetAssetClass sets field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetAssetClass(v ENUMCLOUDHOSTING) {
	o.AssetClass = v
}

// GetWizProviderId returns the WizProviderId field value if set, zero value otherwise.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetWizProviderId() string {
	if o == nil || IsNil(o.WizProviderId) {
		var ret string
		return ret
	}
	return *o.WizProviderId
}

// GetWizProviderIdOk returns a tuple with the WizProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetWizProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.WizProviderId) {
		return nil, false
	}
	return o.WizProviderId, true
}

// HasWizProviderId returns a boolean if a field has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) HasWizProviderId() bool {
	if o != nil && !IsNil(o.WizProviderId) {
		return true
	}

	return false
}

// SetWizProviderId gets a reference to the given string and assigns it to the WizProviderId field.
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetWizProviderId(v string) {
	o.WizProviderId = &v
}

// GetWizCloudPlatform returns the WizCloudPlatform field value if set, zero value otherwise.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetWizCloudPlatform() string {
	if o == nil || IsNil(o.WizCloudPlatform) {
		var ret string
		return ret
	}
	return *o.WizCloudPlatform
}

// GetWizCloudPlatformOk returns a tuple with the WizCloudPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetWizCloudPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.WizCloudPlatform) {
		return nil, false
	}
	return o.WizCloudPlatform, true
}

// HasWizCloudPlatform returns a boolean if a field has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) HasWizCloudPlatform() bool {
	if o != nil && !IsNil(o.WizCloudPlatform) {
		return true
	}

	return false
}

// SetWizCloudPlatform gets a reference to the given string and assigns it to the WizCloudPlatform field.
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetWizCloudPlatform(v string) {
	o.WizCloudPlatform = &v
}

// GetExtraMetadata returns the ExtraMetadata field value if set, zero value otherwise.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetExtraMetadata() map[string]interface{} {
	if o == nil || IsNil(o.ExtraMetadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtraMetadata
}

// GetExtraMetadataOk returns a tuple with the ExtraMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetExtraMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtraMetadata) {
		return map[string]interface{}{}, false
	}
	return o.ExtraMetadata, true
}

// HasExtraMetadata returns a boolean if a field has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) HasExtraMetadata() bool {
	if o != nil && !IsNil(o.ExtraMetadata) {
		return true
	}

	return false
}

// SetExtraMetadata gets a reference to the given map[string]interface{} and assigns it to the ExtraMetadata field.
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetExtraMetadata(v map[string]interface{}) {
	o.ExtraMetadata = v
}

// GetAssetType returns the AssetType field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetAssetType() ENUMKUBERNETESCLUSTER {
	if o == nil {
		var ret ENUMKUBERNETESCLUSTER
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetAssetTypeOk() (*ENUMKUBERNETESCLUSTER, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetAssetType(v ENUMKUBERNETESCLUSTER) {
	o.AssetType = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetName(v string) {
	o.Name = &v
}

// GetImmutableKey returns the ImmutableKey field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetImmutableKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImmutableKey
}

// GetImmutableKeyOk returns a tuple with the ImmutableKey field value
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetImmutableKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImmutableKey, true
}

// SetImmutableKey sets field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetImmutableKey(v string) {
	o.ImmutableKey = v
}

// GetPrivateLocationId returns the PrivateLocationId field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetPrivateLocationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateLocationId
}

// GetPrivateLocationIdOk returns a tuple with the PrivateLocationId field value
// and a boolean to check if the value has been set.
func (o *CreateAssetKUBERNETESCLUSTERRequest) GetPrivateLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateLocationId, true
}

// SetPrivateLocationId sets field value
func (o *CreateAssetKUBERNETESCLUSTERRequest) SetPrivateLocationId(v string) {
	o.PrivateLocationId = v
}

func (o CreateAssetKUBERNETESCLUSTERRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetKUBERNETESCLUSTERRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_class"] = o.AssetClass
	if !IsNil(o.WizProviderId) {
		toSerialize["wiz_provider_id"] = o.WizProviderId
	}
	if !IsNil(o.WizCloudPlatform) {
		toSerialize["wiz_cloud_platform"] = o.WizCloudPlatform
	}
	if !IsNil(o.ExtraMetadata) {
		toSerialize["extra_metadata"] = o.ExtraMetadata
	}
	toSerialize["asset_type"] = o.AssetType
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["immutable_key"] = o.ImmutableKey
	toSerialize["private_location_id"] = o.PrivateLocationId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAssetKUBERNETESCLUSTERRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_class",
		"asset_type",
		"immutable_key",
		"private_location_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetKUBERNETESCLUSTERRequest := _CreateAssetKUBERNETESCLUSTERRequest{}

	err = json.Unmarshal(data, &varCreateAssetKUBERNETESCLUSTERRequest)

	if err != nil {
		return err
	}

	*o = CreateAssetKUBERNETESCLUSTERRequest(varCreateAssetKUBERNETESCLUSTERRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asset_class")
		delete(additionalProperties, "wiz_provider_id")
		delete(additionalProperties, "wiz_cloud_platform")
		delete(additionalProperties, "extra_metadata")
		delete(additionalProperties, "asset_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "immutable_key")
		delete(additionalProperties, "private_location_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAssetKUBERNETESCLUSTERRequest struct {
	value *CreateAssetKUBERNETESCLUSTERRequest
	isSet bool
}

func (v NullableCreateAssetKUBERNETESCLUSTERRequest) Get() *CreateAssetKUBERNETESCLUSTERRequest {
	return v.value
}

func (v *NullableCreateAssetKUBERNETESCLUSTERRequest) Set(val *CreateAssetKUBERNETESCLUSTERRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetKUBERNETESCLUSTERRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetKUBERNETESCLUSTERRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetKUBERNETESCLUSTERRequest(val *CreateAssetKUBERNETESCLUSTERRequest) *NullableCreateAssetKUBERNETESCLUSTERRequest {
	return &NullableCreateAssetKUBERNETESCLUSTERRequest{value: val, isSet: true}
}

func (v NullableCreateAssetKUBERNETESCLUSTERRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetKUBERNETESCLUSTERRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


