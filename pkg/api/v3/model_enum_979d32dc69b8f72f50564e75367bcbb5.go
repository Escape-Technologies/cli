/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// Enum979d32dc69b8f72f50564e75367bcbb5 the model 'Enum979d32dc69b8f72f50564e75367bcbb5'
type Enum979d32dc69b8f72f50564e75367bcbb5 string

// List of Enum_979d32dc69b8f72f50564e75367bcbb5
const (
	ENUM979D32DC69B8F72F50564E75367BCBB5_DEPRECATED Enum979d32dc69b8f72f50564e75367bcbb5 = "DEPRECATED"
	ENUM979D32DC69B8F72F50564E75367BCBB5_FALSE_POSITIVE Enum979d32dc69b8f72f50564e75367bcbb5 = "FALSE_POSITIVE"
	ENUM979D32DC69B8F72F50564E75367BCBB5_MONITORED Enum979d32dc69b8f72f50564e75367bcbb5 = "MONITORED"
	ENUM979D32DC69B8F72F50564E75367BCBB5_OUT_OF_SCOPE Enum979d32dc69b8f72f50564e75367bcbb5 = "OUT_OF_SCOPE"
)

// All allowed values of Enum979d32dc69b8f72f50564e75367bcbb5 enum
var AllowedEnum979d32dc69b8f72f50564e75367bcbb5EnumValues = []Enum979d32dc69b8f72f50564e75367bcbb5{
	"DEPRECATED",
	"FALSE_POSITIVE",
	"MONITORED",
	"OUT_OF_SCOPE",
}

func (v *Enum979d32dc69b8f72f50564e75367bcbb5) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum979d32dc69b8f72f50564e75367bcbb5(value)
	for _, existing := range AllowedEnum979d32dc69b8f72f50564e75367bcbb5EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum979d32dc69b8f72f50564e75367bcbb5", value)
}

// NewEnum979d32dc69b8f72f50564e75367bcbb5FromValue returns a pointer to a valid Enum979d32dc69b8f72f50564e75367bcbb5
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum979d32dc69b8f72f50564e75367bcbb5FromValue(v string) (*Enum979d32dc69b8f72f50564e75367bcbb5, error) {
	ev := Enum979d32dc69b8f72f50564e75367bcbb5(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum979d32dc69b8f72f50564e75367bcbb5: valid values are %v", v, AllowedEnum979d32dc69b8f72f50564e75367bcbb5EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum979d32dc69b8f72f50564e75367bcbb5) IsValid() bool {
	for _, existing := range AllowedEnum979d32dc69b8f72f50564e75367bcbb5EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_979d32dc69b8f72f50564e75367bcbb5 value
func (v Enum979d32dc69b8f72f50564e75367bcbb5) Ptr() *Enum979d32dc69b8f72f50564e75367bcbb5 {
	return &v
}

type NullableEnum979d32dc69b8f72f50564e75367bcbb5 struct {
	value *Enum979d32dc69b8f72f50564e75367bcbb5
	isSet bool
}

func (v NullableEnum979d32dc69b8f72f50564e75367bcbb5) Get() *Enum979d32dc69b8f72f50564e75367bcbb5 {
	return v.value
}

func (v *NullableEnum979d32dc69b8f72f50564e75367bcbb5) Set(val *Enum979d32dc69b8f72f50564e75367bcbb5) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum979d32dc69b8f72f50564e75367bcbb5) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum979d32dc69b8f72f50564e75367bcbb5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum979d32dc69b8f72f50564e75367bcbb5(val *Enum979d32dc69b8f72f50564e75367bcbb5) *NullableEnum979d32dc69b8f72f50564e75367bcbb5 {
	return &NullableEnum979d32dc69b8f72f50564e75367bcbb5{value: val, isSet: true}
}

func (v NullableEnum979d32dc69b8f72f50564e75367bcbb5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum979d32dc69b8f72f50564e75367bcbb5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

