/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetLocation200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLocation200Response{}

// GetLocation200Response struct for GetLocation200Response
type GetLocation200Response struct {
	// The location ID.
	Id *string `json:"id,omitempty"`
	// The name of the location.
	Name *string `json:"name,omitempty"`
	// The SSH public key used to connect to the location.
	SshPublicKey *string `json:"sshPublicKey,omitempty"`
}

// NewGetLocation200Response instantiates a new GetLocation200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLocation200Response() *GetLocation200Response {
	this := GetLocation200Response{}
	var id string = "00000000-0000-0000-0000-000000000000"
	this.Id = &id
	var name string = "Location Name"
	this.Name = &name
	var sshPublicKey string = ""
	this.SshPublicKey = &sshPublicKey
	return &this
}

// NewGetLocation200ResponseWithDefaults instantiates a new GetLocation200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLocation200ResponseWithDefaults() *GetLocation200Response {
	this := GetLocation200Response{}
	var id string = "00000000-0000-0000-0000-000000000000"
	this.Id = &id
	var name string = "Location Name"
	this.Name = &name
	var sshPublicKey string = ""
	this.SshPublicKey = &sshPublicKey
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetLocation200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLocation200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetLocation200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetLocation200Response) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetLocation200Response) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLocation200Response) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetLocation200Response) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetLocation200Response) SetName(v string) {
	o.Name = &v
}

// GetSshPublicKey returns the SshPublicKey field value if set, zero value otherwise.
func (o *GetLocation200Response) GetSshPublicKey() string {
	if o == nil || IsNil(o.SshPublicKey) {
		var ret string
		return ret
	}
	return *o.SshPublicKey
}

// GetSshPublicKeyOk returns a tuple with the SshPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLocation200Response) GetSshPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SshPublicKey) {
		return nil, false
	}
	return o.SshPublicKey, true
}

// HasSshPublicKey returns a boolean if a field has been set.
func (o *GetLocation200Response) HasSshPublicKey() bool {
	if o != nil && !IsNil(o.SshPublicKey) {
		return true
	}

	return false
}

// SetSshPublicKey gets a reference to the given string and assigns it to the SshPublicKey field.
func (o *GetLocation200Response) SetSshPublicKey(v string) {
	o.SshPublicKey = &v
}

func (o GetLocation200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLocation200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SshPublicKey) {
		toSerialize["sshPublicKey"] = o.SshPublicKey
	}
	return toSerialize, nil
}

type NullableGetLocation200Response struct {
	value *GetLocation200Response
	isSet bool
}

func (v NullableGetLocation200Response) Get() *GetLocation200Response {
	return v.value
}

func (v *NullableGetLocation200Response) Set(val *GetLocation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLocation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLocation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLocation200Response(val *GetLocation200Response) *NullableGetLocation200Response {
	return &NullableGetLocation200Response{value: val, isSet: true}
}

func (v NullableGetLocation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLocation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


