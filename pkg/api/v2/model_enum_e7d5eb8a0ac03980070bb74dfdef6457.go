/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumE7d5eb8a0ac03980070bb74dfdef6457 the model 'EnumE7d5eb8a0ac03980070bb74dfdef6457'
type EnumE7d5eb8a0ac03980070bb74dfdef6457 string

// List of Enum_e7d5eb8a0ac03980070bb74dfdef6457
const (
	ENUME7D5EB8A0AC03980070BB74DFDEF6457_ARTICLE_21 EnumE7d5eb8a0ac03980070bb74dfdef6457 = "Article-21"
	ENUME7D5EB8A0AC03980070BB74DFDEF6457_ARTICLE_32 EnumE7d5eb8a0ac03980070bb74dfdef6457 = "Article-32"
	ENUME7D5EB8A0AC03980070BB74DFDEF6457_ARTICLE_94 EnumE7d5eb8a0ac03980070bb74dfdef6457 = "Article-94"
	ENUME7D5EB8A0AC03980070BB74DFDEF6457_ARTICLE_95 EnumE7d5eb8a0ac03980070bb74dfdef6457 = "Article-95"
	ENUME7D5EB8A0AC03980070BB74DFDEF6457_ARTICLE_96 EnumE7d5eb8a0ac03980070bb74dfdef6457 = "Article-96"
	ENUME7D5EB8A0AC03980070BB74DFDEF6457_ARTICLE_97 EnumE7d5eb8a0ac03980070bb74dfdef6457 = "Article-97"
	ENUME7D5EB8A0AC03980070BB74DFDEF6457_ARTICLE_98 EnumE7d5eb8a0ac03980070bb74dfdef6457 = "Article-98"
)

// All allowed values of EnumE7d5eb8a0ac03980070bb74dfdef6457 enum
var AllowedEnumE7d5eb8a0ac03980070bb74dfdef6457EnumValues = []EnumE7d5eb8a0ac03980070bb74dfdef6457{
	"Article-21",
	"Article-32",
	"Article-94",
	"Article-95",
	"Article-96",
	"Article-97",
	"Article-98",
}

func (v *EnumE7d5eb8a0ac03980070bb74dfdef6457) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumE7d5eb8a0ac03980070bb74dfdef6457(value)
	for _, existing := range AllowedEnumE7d5eb8a0ac03980070bb74dfdef6457EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumE7d5eb8a0ac03980070bb74dfdef6457", value)
}

// NewEnumE7d5eb8a0ac03980070bb74dfdef6457FromValue returns a pointer to a valid EnumE7d5eb8a0ac03980070bb74dfdef6457
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumE7d5eb8a0ac03980070bb74dfdef6457FromValue(v string) (*EnumE7d5eb8a0ac03980070bb74dfdef6457, error) {
	ev := EnumE7d5eb8a0ac03980070bb74dfdef6457(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumE7d5eb8a0ac03980070bb74dfdef6457: valid values are %v", v, AllowedEnumE7d5eb8a0ac03980070bb74dfdef6457EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumE7d5eb8a0ac03980070bb74dfdef6457) IsValid() bool {
	for _, existing := range AllowedEnumE7d5eb8a0ac03980070bb74dfdef6457EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_e7d5eb8a0ac03980070bb74dfdef6457 value
func (v EnumE7d5eb8a0ac03980070bb74dfdef6457) Ptr() *EnumE7d5eb8a0ac03980070bb74dfdef6457 {
	return &v
}

type NullableEnumE7d5eb8a0ac03980070bb74dfdef6457 struct {
	value *EnumE7d5eb8a0ac03980070bb74dfdef6457
	isSet bool
}

func (v NullableEnumE7d5eb8a0ac03980070bb74dfdef6457) Get() *EnumE7d5eb8a0ac03980070bb74dfdef6457 {
	return v.value
}

func (v *NullableEnumE7d5eb8a0ac03980070bb74dfdef6457) Set(val *EnumE7d5eb8a0ac03980070bb74dfdef6457) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumE7d5eb8a0ac03980070bb74dfdef6457) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumE7d5eb8a0ac03980070bb74dfdef6457) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumE7d5eb8a0ac03980070bb74dfdef6457(val *EnumE7d5eb8a0ac03980070bb74dfdef6457) *NullableEnumE7d5eb8a0ac03980070bb74dfdef6457 {
	return &NullableEnumE7d5eb8a0ac03980070bb74dfdef6457{value: val, isSet: true}
}

func (v NullableEnumE7d5eb8a0ac03980070bb74dfdef6457) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumE7d5eb8a0ac03980070bb74dfdef6457) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

