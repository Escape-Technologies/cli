/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// FrontendConfigurationCustomRulesInnerSeedInner - struct for FrontendConfigurationCustomRulesInnerSeedInner
type FrontendConfigurationCustomRulesInnerSeedInner struct {
	FrontendConfigurationCustomRulesInnerSeedInnerOneOf *FrontendConfigurationCustomRulesInnerSeedInnerOneOf
	FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 *FrontendConfigurationCustomRulesInnerSeedInnerOneOf1
}

// FrontendConfigurationCustomRulesInnerSeedInnerOneOfAsFrontendConfigurationCustomRulesInnerSeedInner is a convenience function that returns FrontendConfigurationCustomRulesInnerSeedInnerOneOf wrapped in FrontendConfigurationCustomRulesInnerSeedInner
func FrontendConfigurationCustomRulesInnerSeedInnerOneOfAsFrontendConfigurationCustomRulesInnerSeedInner(v *FrontendConfigurationCustomRulesInnerSeedInnerOneOf) FrontendConfigurationCustomRulesInnerSeedInner {
	return FrontendConfigurationCustomRulesInnerSeedInner{
		FrontendConfigurationCustomRulesInnerSeedInnerOneOf: v,
	}
}

// FrontendConfigurationCustomRulesInnerSeedInnerOneOf1AsFrontendConfigurationCustomRulesInnerSeedInner is a convenience function that returns FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 wrapped in FrontendConfigurationCustomRulesInnerSeedInner
func FrontendConfigurationCustomRulesInnerSeedInnerOneOf1AsFrontendConfigurationCustomRulesInnerSeedInner(v *FrontendConfigurationCustomRulesInnerSeedInnerOneOf1) FrontendConfigurationCustomRulesInnerSeedInner {
	return FrontendConfigurationCustomRulesInnerSeedInner{
		FrontendConfigurationCustomRulesInnerSeedInnerOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *FrontendConfigurationCustomRulesInnerSeedInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into FrontendConfigurationCustomRulesInnerSeedInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf)
	if err == nil {
		jsonFrontendConfigurationCustomRulesInnerSeedInnerOneOf, _ := json.Marshal(dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf)
		if string(jsonFrontendConfigurationCustomRulesInnerSeedInnerOneOf) == "{}" { // empty struct
			dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf); err != nil {
				dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf = nil
	}

	// try to unmarshal data into FrontendConfigurationCustomRulesInnerSeedInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1)
	if err == nil {
		jsonFrontendConfigurationCustomRulesInnerSeedInnerOneOf1, _ := json.Marshal(dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1)
		if string(jsonFrontendConfigurationCustomRulesInnerSeedInnerOneOf1) == "{}" { // empty struct
			dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1); err != nil {
				dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf = nil
		dst.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(FrontendConfigurationCustomRulesInnerSeedInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(FrontendConfigurationCustomRulesInnerSeedInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FrontendConfigurationCustomRulesInnerSeedInner) MarshalJSON() ([]byte, error) {
	if src.FrontendConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return json.Marshal(&src.FrontendConfigurationCustomRulesInnerSeedInnerOneOf)
	}

	if src.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return json.Marshal(&src.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *FrontendConfigurationCustomRulesInnerSeedInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf
	}

	if obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj FrontendConfigurationCustomRulesInnerSeedInner) GetActualInstanceValue() (interface{}) {
	if obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return *obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf
	}

	if obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return *obj.FrontendConfigurationCustomRulesInnerSeedInnerOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableFrontendConfigurationCustomRulesInnerSeedInner struct {
	value *FrontendConfigurationCustomRulesInnerSeedInner
	isSet bool
}

func (v NullableFrontendConfigurationCustomRulesInnerSeedInner) Get() *FrontendConfigurationCustomRulesInnerSeedInner {
	return v.value
}

func (v *NullableFrontendConfigurationCustomRulesInnerSeedInner) Set(val *FrontendConfigurationCustomRulesInnerSeedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFrontendConfigurationCustomRulesInnerSeedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFrontendConfigurationCustomRulesInnerSeedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrontendConfigurationCustomRulesInnerSeedInner(val *FrontendConfigurationCustomRulesInnerSeedInner) *NullableFrontendConfigurationCustomRulesInnerSeedInner {
	return &NullableFrontendConfigurationCustomRulesInnerSeedInner{value: val, isSet: true}
}

func (v NullableFrontendConfigurationCustomRulesInnerSeedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrontendConfigurationCustomRulesInnerSeedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


