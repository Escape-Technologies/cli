/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateApplicationConfigurationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationConfigurationRequest{}

// CreateApplicationConfigurationRequest struct for CreateApplicationConfigurationRequest
type CreateApplicationConfigurationRequest struct {
	Configuration CreateApplicationConfigurationRequestConfiguration `json:"configuration"`
}

type _CreateApplicationConfigurationRequest CreateApplicationConfigurationRequest

// NewCreateApplicationConfigurationRequest instantiates a new CreateApplicationConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationConfigurationRequest(configuration CreateApplicationConfigurationRequestConfiguration) *CreateApplicationConfigurationRequest {
	this := CreateApplicationConfigurationRequest{}
	this.Configuration = configuration
	return &this
}

// NewCreateApplicationConfigurationRequestWithDefaults instantiates a new CreateApplicationConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationConfigurationRequestWithDefaults() *CreateApplicationConfigurationRequest {
	this := CreateApplicationConfigurationRequest{}
	return &this
}

// GetConfiguration returns the Configuration field value
func (o *CreateApplicationConfigurationRequest) GetConfiguration() CreateApplicationConfigurationRequestConfiguration {
	if o == nil {
		var ret CreateApplicationConfigurationRequestConfiguration
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationConfigurationRequest) GetConfigurationOk() (*CreateApplicationConfigurationRequestConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *CreateApplicationConfigurationRequest) SetConfiguration(v CreateApplicationConfigurationRequestConfiguration) {
	o.Configuration = v
}

func (o CreateApplicationConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationConfigurationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["configuration"] = o.Configuration
	return toSerialize, nil
}

func (o *CreateApplicationConfigurationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"configuration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApplicationConfigurationRequest := _CreateApplicationConfigurationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApplicationConfigurationRequest)

	if err != nil {
		return err
	}

	*o = CreateApplicationConfigurationRequest(varCreateApplicationConfigurationRequest)

	return err
}

type NullableCreateApplicationConfigurationRequest struct {
	value *CreateApplicationConfigurationRequest
	isSet bool
}

func (v NullableCreateApplicationConfigurationRequest) Get() *CreateApplicationConfigurationRequest {
	return v.value
}

func (v *NullableCreateApplicationConfigurationRequest) Set(val *CreateApplicationConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationConfigurationRequest(val *CreateApplicationConfigurationRequest) *NullableCreateApplicationConfigurationRequest {
	return &NullableCreateApplicationConfigurationRequest{value: val, isSet: true}
}

func (v NullableCreateApplicationConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


