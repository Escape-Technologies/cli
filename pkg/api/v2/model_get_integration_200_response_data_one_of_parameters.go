/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetIntegration200ResponseDataOneOfParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegration200ResponseDataOneOfParameters{}

// GetIntegration200ResponseDataOneOfParameters struct for GetIntegration200ResponseDataOneOfParameters
type GetIntegration200ResponseDataOneOfParameters struct {
	ClientSecret string `json:"client_secret"`
	Host string `json:"host"`
	AccessToken string `json:"access_token"`
	ClientToken string `json:"client_token"`
}

type _GetIntegration200ResponseDataOneOfParameters GetIntegration200ResponseDataOneOfParameters

// NewGetIntegration200ResponseDataOneOfParameters instantiates a new GetIntegration200ResponseDataOneOfParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegration200ResponseDataOneOfParameters(clientSecret string, host string, accessToken string, clientToken string) *GetIntegration200ResponseDataOneOfParameters {
	this := GetIntegration200ResponseDataOneOfParameters{}
	this.ClientSecret = clientSecret
	this.Host = host
	this.AccessToken = accessToken
	this.ClientToken = clientToken
	return &this
}

// NewGetIntegration200ResponseDataOneOfParametersWithDefaults instantiates a new GetIntegration200ResponseDataOneOfParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegration200ResponseDataOneOfParametersWithDefaults() *GetIntegration200ResponseDataOneOfParameters {
	this := GetIntegration200ResponseDataOneOfParameters{}
	return &this
}

// GetClientSecret returns the ClientSecret field value
func (o *GetIntegration200ResponseDataOneOfParameters) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOfParameters) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *GetIntegration200ResponseDataOneOfParameters) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetHost returns the Host field value
func (o *GetIntegration200ResponseDataOneOfParameters) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOfParameters) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *GetIntegration200ResponseDataOneOfParameters) SetHost(v string) {
	o.Host = v
}

// GetAccessToken returns the AccessToken field value
func (o *GetIntegration200ResponseDataOneOfParameters) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOfParameters) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *GetIntegration200ResponseDataOneOfParameters) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetClientToken returns the ClientToken field value
func (o *GetIntegration200ResponseDataOneOfParameters) GetClientToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientToken
}

// GetClientTokenOk returns a tuple with the ClientToken field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOfParameters) GetClientTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientToken, true
}

// SetClientToken sets field value
func (o *GetIntegration200ResponseDataOneOfParameters) SetClientToken(v string) {
	o.ClientToken = v
}

func (o GetIntegration200ResponseDataOneOfParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegration200ResponseDataOneOfParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["host"] = o.Host
	toSerialize["access_token"] = o.AccessToken
	toSerialize["client_token"] = o.ClientToken
	return toSerialize, nil
}

func (o *GetIntegration200ResponseDataOneOfParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_secret",
		"host",
		"access_token",
		"client_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetIntegration200ResponseDataOneOfParameters := _GetIntegration200ResponseDataOneOfParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetIntegration200ResponseDataOneOfParameters)

	if err != nil {
		return err
	}

	*o = GetIntegration200ResponseDataOneOfParameters(varGetIntegration200ResponseDataOneOfParameters)

	return err
}

type NullableGetIntegration200ResponseDataOneOfParameters struct {
	value *GetIntegration200ResponseDataOneOfParameters
	isSet bool
}

func (v NullableGetIntegration200ResponseDataOneOfParameters) Get() *GetIntegration200ResponseDataOneOfParameters {
	return v.value
}

func (v *NullableGetIntegration200ResponseDataOneOfParameters) Set(val *GetIntegration200ResponseDataOneOfParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegration200ResponseDataOneOfParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegration200ResponseDataOneOfParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegration200ResponseDataOneOfParameters(val *GetIntegration200ResponseDataOneOfParameters) *NullableGetIntegration200ResponseDataOneOfParameters {
	return &NullableGetIntegration200ResponseDataOneOfParameters{value: val, isSet: true}
}

func (v NullableGetIntegration200ResponseDataOneOfParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegration200ResponseDataOneOfParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


