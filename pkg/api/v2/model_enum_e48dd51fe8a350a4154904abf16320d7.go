/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumE48dd51fe8a350a4154904abf16320d7 the model 'EnumE48dd51fe8a350a4154904abf16320d7'
type EnumE48dd51fe8a350a4154904abf16320d7 string

// List of Enum_e48dd51fe8a350a4154904abf16320d7
const (
	ENUME48DD51FE8A350A4154904ABF16320D7_STARTING EnumE48dd51fe8a350a4154904abf16320d7 = "STARTING"
	ENUME48DD51FE8A350A4154904ABF16320D7_RUNNING EnumE48dd51fe8a350a4154904abf16320d7 = "RUNNING"
	ENUME48DD51FE8A350A4154904ABF16320D7_CANCELED EnumE48dd51fe8a350a4154904abf16320d7 = "CANCELED"
	ENUME48DD51FE8A350A4154904ABF16320D7_FINISHED EnumE48dd51fe8a350a4154904abf16320d7 = "FINISHED"
	ENUME48DD51FE8A350A4154904ABF16320D7_FAILED EnumE48dd51fe8a350a4154904abf16320d7 = "FAILED"
)

// All allowed values of EnumE48dd51fe8a350a4154904abf16320d7 enum
var AllowedEnumE48dd51fe8a350a4154904abf16320d7EnumValues = []EnumE48dd51fe8a350a4154904abf16320d7{
	"STARTING",
	"RUNNING",
	"CANCELED",
	"FINISHED",
	"FAILED",
}

func (v *EnumE48dd51fe8a350a4154904abf16320d7) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumE48dd51fe8a350a4154904abf16320d7(value)
	for _, existing := range AllowedEnumE48dd51fe8a350a4154904abf16320d7EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumE48dd51fe8a350a4154904abf16320d7", value)
}

// NewEnumE48dd51fe8a350a4154904abf16320d7FromValue returns a pointer to a valid EnumE48dd51fe8a350a4154904abf16320d7
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumE48dd51fe8a350a4154904abf16320d7FromValue(v string) (*EnumE48dd51fe8a350a4154904abf16320d7, error) {
	ev := EnumE48dd51fe8a350a4154904abf16320d7(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumE48dd51fe8a350a4154904abf16320d7: valid values are %v", v, AllowedEnumE48dd51fe8a350a4154904abf16320d7EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumE48dd51fe8a350a4154904abf16320d7) IsValid() bool {
	for _, existing := range AllowedEnumE48dd51fe8a350a4154904abf16320d7EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_e48dd51fe8a350a4154904abf16320d7 value
func (v EnumE48dd51fe8a350a4154904abf16320d7) Ptr() *EnumE48dd51fe8a350a4154904abf16320d7 {
	return &v
}

type NullableEnumE48dd51fe8a350a4154904abf16320d7 struct {
	value *EnumE48dd51fe8a350a4154904abf16320d7
	isSet bool
}

func (v NullableEnumE48dd51fe8a350a4154904abf16320d7) Get() *EnumE48dd51fe8a350a4154904abf16320d7 {
	return v.value
}

func (v *NullableEnumE48dd51fe8a350a4154904abf16320d7) Set(val *EnumE48dd51fe8a350a4154904abf16320d7) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumE48dd51fe8a350a4154904abf16320d7) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumE48dd51fe8a350a4154904abf16320d7) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumE48dd51fe8a350a4154904abf16320d7(val *EnumE48dd51fe8a350a4154904abf16320d7) *NullableEnumE48dd51fe8a350a4154904abf16320d7 {
	return &NullableEnumE48dd51fe8a350a4154904abf16320d7{value: val, isSet: true}
}

func (v NullableEnumE48dd51fe8a350a4154904abf16320d7) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumE48dd51fe8a350a4154904abf16320d7) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

