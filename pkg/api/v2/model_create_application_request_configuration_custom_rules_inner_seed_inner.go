/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CreateApplicationRequestConfigurationCustomRulesInnerSeedInner - struct for CreateApplicationRequestConfigurationCustomRulesInnerSeedInner
type CreateApplicationRequestConfigurationCustomRulesInnerSeedInner struct {
	CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf *CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf
	CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 *CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1
}

// CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOfAsCreateApplicationRequestConfigurationCustomRulesInnerSeedInner is a convenience function that returns CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf wrapped in CreateApplicationRequestConfigurationCustomRulesInnerSeedInner
func CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOfAsCreateApplicationRequestConfigurationCustomRulesInnerSeedInner(v *CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf) CreateApplicationRequestConfigurationCustomRulesInnerSeedInner {
	return CreateApplicationRequestConfigurationCustomRulesInnerSeedInner{
		CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf: v,
	}
}

// CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1AsCreateApplicationRequestConfigurationCustomRulesInnerSeedInner is a convenience function that returns CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 wrapped in CreateApplicationRequestConfigurationCustomRulesInnerSeedInner
func CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1AsCreateApplicationRequestConfigurationCustomRulesInnerSeedInner(v *CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1) CreateApplicationRequestConfigurationCustomRulesInnerSeedInner {
	return CreateApplicationRequestConfigurationCustomRulesInnerSeedInner{
		CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateApplicationRequestConfigurationCustomRulesInnerSeedInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf)
	if err == nil {
		jsonCreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf, _ := json.Marshal(dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf)
		if string(jsonCreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf) == "{}" { // empty struct
			dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf); err != nil {
				dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf = nil
	}

	// try to unmarshal data into CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1)
	if err == nil {
		jsonCreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1, _ := json.Marshal(dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1)
		if string(jsonCreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1) == "{}" { // empty struct
			dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1); err != nil {
				dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf = nil
		dst.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateApplicationRequestConfigurationCustomRulesInnerSeedInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateApplicationRequestConfigurationCustomRulesInnerSeedInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateApplicationRequestConfigurationCustomRulesInnerSeedInner) MarshalJSON() ([]byte, error) {
	if src.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return json.Marshal(&src.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf)
	}

	if src.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return json.Marshal(&src.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateApplicationRequestConfigurationCustomRulesInnerSeedInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf
	}

	if obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CreateApplicationRequestConfigurationCustomRulesInnerSeedInner) GetActualInstanceValue() (interface{}) {
	if obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return *obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf
	}

	if obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return *obj.CreateApplicationRequestConfigurationCustomRulesInnerSeedInnerOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner struct {
	value *CreateApplicationRequestConfigurationCustomRulesInnerSeedInner
	isSet bool
}

func (v NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner) Get() *CreateApplicationRequestConfigurationCustomRulesInnerSeedInner {
	return v.value
}

func (v *NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner) Set(val *CreateApplicationRequestConfigurationCustomRulesInnerSeedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner(val *CreateApplicationRequestConfigurationCustomRulesInnerSeedInner) *NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner {
	return &NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner{value: val, isSet: true}
}

func (v NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequestConfigurationCustomRulesInnerSeedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


