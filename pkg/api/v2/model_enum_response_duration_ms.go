/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumRESPONSEDURATIONMS the model 'EnumRESPONSEDURATIONMS'
type EnumRESPONSEDURATIONMS string

// List of Enum_RESPONSE_DURATION_MS
const (
	ENUMRESPONSEDURATIONMS_RESPONSE_DURATION_MS EnumRESPONSEDURATIONMS = "response.duration_ms"
)

// All allowed values of EnumRESPONSEDURATIONMS enum
var AllowedEnumRESPONSEDURATIONMSEnumValues = []EnumRESPONSEDURATIONMS{
	"response.duration_ms",
}

func (v *EnumRESPONSEDURATIONMS) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumRESPONSEDURATIONMS(value)
	for _, existing := range AllowedEnumRESPONSEDURATIONMSEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumRESPONSEDURATIONMS", value)
}

// NewEnumRESPONSEDURATIONMSFromValue returns a pointer to a valid EnumRESPONSEDURATIONMS
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumRESPONSEDURATIONMSFromValue(v string) (*EnumRESPONSEDURATIONMS, error) {
	ev := EnumRESPONSEDURATIONMS(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumRESPONSEDURATIONMS: valid values are %v", v, AllowedEnumRESPONSEDURATIONMSEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumRESPONSEDURATIONMS) IsValid() bool {
	for _, existing := range AllowedEnumRESPONSEDURATIONMSEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_RESPONSE_DURATION_MS value
func (v EnumRESPONSEDURATIONMS) Ptr() *EnumRESPONSEDURATIONMS {
	return &v
}

type NullableEnumRESPONSEDURATIONMS struct {
	value *EnumRESPONSEDURATIONMS
	isSet bool
}

func (v NullableEnumRESPONSEDURATIONMS) Get() *EnumRESPONSEDURATIONMS {
	return v.value
}

func (v *NullableEnumRESPONSEDURATIONMS) Set(val *EnumRESPONSEDURATIONMS) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumRESPONSEDURATIONMS) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumRESPONSEDURATIONMS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumRESPONSEDURATIONMS(val *EnumRESPONSEDURATIONMS) *NullableEnumRESPONSEDURATIONMS {
	return &NullableEnumRESPONSEDURATIONMS{value: val, isSet: true}
}

func (v NullableEnumRESPONSEDURATIONMS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumRESPONSEDURATIONMS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

