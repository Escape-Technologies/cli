/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// Enum517d458bf219c9da2092895cc6b18716 the model 'Enum517d458bf219c9da2092895cc6b18716'
type Enum517d458bf219c9da2092895cc6b18716 string

// List of Enum_517d458bf219c9da2092895cc6b18716
const (
	ENUM517D458BF219C9DA2092895CC6B18716_ACCESS_CONTROL Enum517d458bf219c9da2092895cc6b18716 = "ACCESS_CONTROL"
	ENUM517D458BF219C9DA2092895CC6B18716_CONFIGURATION Enum517d458bf219c9da2092895cc6b18716 = "CONFIGURATION"
	ENUM517D458BF219C9DA2092895CC6B18716_CUSTOM Enum517d458bf219c9da2092895cc6b18716 = "CUSTOM"
	ENUM517D458BF219C9DA2092895CC6B18716_INFORMATION_DISCLOSURE Enum517d458bf219c9da2092895cc6b18716 = "INFORMATION_DISCLOSURE"
	ENUM517D458BF219C9DA2092895CC6B18716_INJECTION Enum517d458bf219c9da2092895cc6b18716 = "INJECTION"
	ENUM517D458BF219C9DA2092895CC6B18716_PROTOCOL Enum517d458bf219c9da2092895cc6b18716 = "PROTOCOL"
	ENUM517D458BF219C9DA2092895CC6B18716_REQUEST_FORGERY Enum517d458bf219c9da2092895cc6b18716 = "REQUEST_FORGERY"
	ENUM517D458BF219C9DA2092895CC6B18716_RESOURCE_LIMITATION Enum517d458bf219c9da2092895cc6b18716 = "RESOURCE_LIMITATION"
	ENUM517D458BF219C9DA2092895CC6B18716_SCHEMA Enum517d458bf219c9da2092895cc6b18716 = "SCHEMA"
)

// All allowed values of Enum517d458bf219c9da2092895cc6b18716 enum
var AllowedEnum517d458bf219c9da2092895cc6b18716EnumValues = []Enum517d458bf219c9da2092895cc6b18716{
	"ACCESS_CONTROL",
	"CONFIGURATION",
	"CUSTOM",
	"INFORMATION_DISCLOSURE",
	"INJECTION",
	"PROTOCOL",
	"REQUEST_FORGERY",
	"RESOURCE_LIMITATION",
	"SCHEMA",
}

func (v *Enum517d458bf219c9da2092895cc6b18716) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum517d458bf219c9da2092895cc6b18716(value)
	for _, existing := range AllowedEnum517d458bf219c9da2092895cc6b18716EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum517d458bf219c9da2092895cc6b18716", value)
}

// NewEnum517d458bf219c9da2092895cc6b18716FromValue returns a pointer to a valid Enum517d458bf219c9da2092895cc6b18716
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum517d458bf219c9da2092895cc6b18716FromValue(v string) (*Enum517d458bf219c9da2092895cc6b18716, error) {
	ev := Enum517d458bf219c9da2092895cc6b18716(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum517d458bf219c9da2092895cc6b18716: valid values are %v", v, AllowedEnum517d458bf219c9da2092895cc6b18716EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum517d458bf219c9da2092895cc6b18716) IsValid() bool {
	for _, existing := range AllowedEnum517d458bf219c9da2092895cc6b18716EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_517d458bf219c9da2092895cc6b18716 value
func (v Enum517d458bf219c9da2092895cc6b18716) Ptr() *Enum517d458bf219c9da2092895cc6b18716 {
	return &v
}

type NullableEnum517d458bf219c9da2092895cc6b18716 struct {
	value *Enum517d458bf219c9da2092895cc6b18716
	isSet bool
}

func (v NullableEnum517d458bf219c9da2092895cc6b18716) Get() *Enum517d458bf219c9da2092895cc6b18716 {
	return v.value
}

func (v *NullableEnum517d458bf219c9da2092895cc6b18716) Set(val *Enum517d458bf219c9da2092895cc6b18716) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum517d458bf219c9da2092895cc6b18716) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum517d458bf219c9da2092895cc6b18716) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum517d458bf219c9da2092895cc6b18716(val *Enum517d458bf219c9da2092895cc6b18716) *NullableEnum517d458bf219c9da2092895cc6b18716 {
	return &NullableEnum517d458bf219c9da2092895cc6b18716{value: val, isSet: true}
}

func (v NullableEnum517d458bf219c9da2092895cc6b18716) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum517d458bf219c9da2092895cc6b18716) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

