/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the FrontendConfigurationScanFrontendLogoutDetectionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrontendConfigurationScanFrontendLogoutDetectionConfig{}

// FrontendConfigurationScanFrontendLogoutDetectionConfig struct for FrontendConfigurationScanFrontendLogoutDetectionConfig
type FrontendConfigurationScanFrontendLogoutDetectionConfig struct {
	Enabled *bool `json:"enabled,omitempty"`
	FrontendLoggedInIndicatorRegexPatterns []string `json:"frontend_logged_in_indicator_regex_patterns,omitempty"`
	FrontendLogoutRedirectionUrlPatterns []string `json:"frontend_logout_redirection_url_patterns,omitempty"`
	FrontendSessionCookieRegexPatterns []string `json:"frontend_session_cookie_regex_patterns,omitempty"`
	FrontendAutoReauthenticate *bool `json:"frontend_auto_reauthenticate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FrontendConfigurationScanFrontendLogoutDetectionConfig FrontendConfigurationScanFrontendLogoutDetectionConfig

// NewFrontendConfigurationScanFrontendLogoutDetectionConfig instantiates a new FrontendConfigurationScanFrontendLogoutDetectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrontendConfigurationScanFrontendLogoutDetectionConfig() *FrontendConfigurationScanFrontendLogoutDetectionConfig {
	this := FrontendConfigurationScanFrontendLogoutDetectionConfig{}
	return &this
}

// NewFrontendConfigurationScanFrontendLogoutDetectionConfigWithDefaults instantiates a new FrontendConfigurationScanFrontendLogoutDetectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrontendConfigurationScanFrontendLogoutDetectionConfigWithDefaults() *FrontendConfigurationScanFrontendLogoutDetectionConfig {
	this := FrontendConfigurationScanFrontendLogoutDetectionConfig{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFrontendLoggedInIndicatorRegexPatterns returns the FrontendLoggedInIndicatorRegexPatterns field value if set, zero value otherwise.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendLoggedInIndicatorRegexPatterns() []string {
	if o == nil || IsNil(o.FrontendLoggedInIndicatorRegexPatterns) {
		var ret []string
		return ret
	}
	return o.FrontendLoggedInIndicatorRegexPatterns
}

// GetFrontendLoggedInIndicatorRegexPatternsOk returns a tuple with the FrontendLoggedInIndicatorRegexPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendLoggedInIndicatorRegexPatternsOk() ([]string, bool) {
	if o == nil || IsNil(o.FrontendLoggedInIndicatorRegexPatterns) {
		return nil, false
	}
	return o.FrontendLoggedInIndicatorRegexPatterns, true
}

// HasFrontendLoggedInIndicatorRegexPatterns returns a boolean if a field has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) HasFrontendLoggedInIndicatorRegexPatterns() bool {
	if o != nil && !IsNil(o.FrontendLoggedInIndicatorRegexPatterns) {
		return true
	}

	return false
}

// SetFrontendLoggedInIndicatorRegexPatterns gets a reference to the given []string and assigns it to the FrontendLoggedInIndicatorRegexPatterns field.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) SetFrontendLoggedInIndicatorRegexPatterns(v []string) {
	o.FrontendLoggedInIndicatorRegexPatterns = v
}

// GetFrontendLogoutRedirectionUrlPatterns returns the FrontendLogoutRedirectionUrlPatterns field value if set, zero value otherwise.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendLogoutRedirectionUrlPatterns() []string {
	if o == nil || IsNil(o.FrontendLogoutRedirectionUrlPatterns) {
		var ret []string
		return ret
	}
	return o.FrontendLogoutRedirectionUrlPatterns
}

// GetFrontendLogoutRedirectionUrlPatternsOk returns a tuple with the FrontendLogoutRedirectionUrlPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendLogoutRedirectionUrlPatternsOk() ([]string, bool) {
	if o == nil || IsNil(o.FrontendLogoutRedirectionUrlPatterns) {
		return nil, false
	}
	return o.FrontendLogoutRedirectionUrlPatterns, true
}

// HasFrontendLogoutRedirectionUrlPatterns returns a boolean if a field has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) HasFrontendLogoutRedirectionUrlPatterns() bool {
	if o != nil && !IsNil(o.FrontendLogoutRedirectionUrlPatterns) {
		return true
	}

	return false
}

// SetFrontendLogoutRedirectionUrlPatterns gets a reference to the given []string and assigns it to the FrontendLogoutRedirectionUrlPatterns field.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) SetFrontendLogoutRedirectionUrlPatterns(v []string) {
	o.FrontendLogoutRedirectionUrlPatterns = v
}

// GetFrontendSessionCookieRegexPatterns returns the FrontendSessionCookieRegexPatterns field value if set, zero value otherwise.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendSessionCookieRegexPatterns() []string {
	if o == nil || IsNil(o.FrontendSessionCookieRegexPatterns) {
		var ret []string
		return ret
	}
	return o.FrontendSessionCookieRegexPatterns
}

// GetFrontendSessionCookieRegexPatternsOk returns a tuple with the FrontendSessionCookieRegexPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendSessionCookieRegexPatternsOk() ([]string, bool) {
	if o == nil || IsNil(o.FrontendSessionCookieRegexPatterns) {
		return nil, false
	}
	return o.FrontendSessionCookieRegexPatterns, true
}

// HasFrontendSessionCookieRegexPatterns returns a boolean if a field has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) HasFrontendSessionCookieRegexPatterns() bool {
	if o != nil && !IsNil(o.FrontendSessionCookieRegexPatterns) {
		return true
	}

	return false
}

// SetFrontendSessionCookieRegexPatterns gets a reference to the given []string and assigns it to the FrontendSessionCookieRegexPatterns field.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) SetFrontendSessionCookieRegexPatterns(v []string) {
	o.FrontendSessionCookieRegexPatterns = v
}

// GetFrontendAutoReauthenticate returns the FrontendAutoReauthenticate field value if set, zero value otherwise.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendAutoReauthenticate() bool {
	if o == nil || IsNil(o.FrontendAutoReauthenticate) {
		var ret bool
		return ret
	}
	return *o.FrontendAutoReauthenticate
}

// GetFrontendAutoReauthenticateOk returns a tuple with the FrontendAutoReauthenticate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) GetFrontendAutoReauthenticateOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontendAutoReauthenticate) {
		return nil, false
	}
	return o.FrontendAutoReauthenticate, true
}

// HasFrontendAutoReauthenticate returns a boolean if a field has been set.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) HasFrontendAutoReauthenticate() bool {
	if o != nil && !IsNil(o.FrontendAutoReauthenticate) {
		return true
	}

	return false
}

// SetFrontendAutoReauthenticate gets a reference to the given bool and assigns it to the FrontendAutoReauthenticate field.
func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) SetFrontendAutoReauthenticate(v bool) {
	o.FrontendAutoReauthenticate = &v
}

func (o FrontendConfigurationScanFrontendLogoutDetectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrontendConfigurationScanFrontendLogoutDetectionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.FrontendLoggedInIndicatorRegexPatterns) {
		toSerialize["frontend_logged_in_indicator_regex_patterns"] = o.FrontendLoggedInIndicatorRegexPatterns
	}
	if !IsNil(o.FrontendLogoutRedirectionUrlPatterns) {
		toSerialize["frontend_logout_redirection_url_patterns"] = o.FrontendLogoutRedirectionUrlPatterns
	}
	if !IsNil(o.FrontendSessionCookieRegexPatterns) {
		toSerialize["frontend_session_cookie_regex_patterns"] = o.FrontendSessionCookieRegexPatterns
	}
	if !IsNil(o.FrontendAutoReauthenticate) {
		toSerialize["frontend_auto_reauthenticate"] = o.FrontendAutoReauthenticate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FrontendConfigurationScanFrontendLogoutDetectionConfig) UnmarshalJSON(data []byte) (err error) {
	varFrontendConfigurationScanFrontendLogoutDetectionConfig := _FrontendConfigurationScanFrontendLogoutDetectionConfig{}

	err = json.Unmarshal(data, &varFrontendConfigurationScanFrontendLogoutDetectionConfig)

	if err != nil {
		return err
	}

	*o = FrontendConfigurationScanFrontendLogoutDetectionConfig(varFrontendConfigurationScanFrontendLogoutDetectionConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "frontend_logged_in_indicator_regex_patterns")
		delete(additionalProperties, "frontend_logout_redirection_url_patterns")
		delete(additionalProperties, "frontend_session_cookie_regex_patterns")
		delete(additionalProperties, "frontend_auto_reauthenticate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFrontendConfigurationScanFrontendLogoutDetectionConfig struct {
	value *FrontendConfigurationScanFrontendLogoutDetectionConfig
	isSet bool
}

func (v NullableFrontendConfigurationScanFrontendLogoutDetectionConfig) Get() *FrontendConfigurationScanFrontendLogoutDetectionConfig {
	return v.value
}

func (v *NullableFrontendConfigurationScanFrontendLogoutDetectionConfig) Set(val *FrontendConfigurationScanFrontendLogoutDetectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFrontendConfigurationScanFrontendLogoutDetectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFrontendConfigurationScanFrontendLogoutDetectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrontendConfigurationScanFrontendLogoutDetectionConfig(val *FrontendConfigurationScanFrontendLogoutDetectionConfig) *NullableFrontendConfigurationScanFrontendLogoutDetectionConfig {
	return &NullableFrontendConfigurationScanFrontendLogoutDetectionConfig{value: val, isSet: true}
}

func (v NullableFrontendConfigurationScanFrontendLogoutDetectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrontendConfigurationScanFrontendLogoutDetectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


