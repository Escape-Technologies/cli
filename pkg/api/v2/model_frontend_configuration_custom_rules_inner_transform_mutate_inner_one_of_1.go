/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// checks if the FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1{}

// FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 struct for FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1
type FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 struct {
	Value *string `json:"value,omitempty"`
	Values []string `json:"values,omitempty"`
	RegexReplace *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOfRegexReplace `json:"regex_replace,omitempty"`
	Key EnumSCHEMAPATHREF `json:"key"`
	AdditionalProperties map[string]interface{}
}

type _FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1

// NewFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 instantiates a new FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1(key EnumSCHEMAPATHREF) *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 {
	this := FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1{}
	this.Key = key
	return &this
}

// NewFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1WithDefaults instantiates a new FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1WithDefaults() *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 {
	this := FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) SetValue(v string) {
	o.Value = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetValues() []string {
	if o == nil || IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) SetValues(v []string) {
	o.Values = v
}

// GetRegexReplace returns the RegexReplace field value if set, zero value otherwise.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetRegexReplace() FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOfRegexReplace {
	if o == nil || IsNil(o.RegexReplace) {
		var ret FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOfRegexReplace
		return ret
	}
	return *o.RegexReplace
}

// GetRegexReplaceOk returns a tuple with the RegexReplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetRegexReplaceOk() (*FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOfRegexReplace, bool) {
	if o == nil || IsNil(o.RegexReplace) {
		return nil, false
	}
	return o.RegexReplace, true
}

// HasRegexReplace returns a boolean if a field has been set.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) HasRegexReplace() bool {
	if o != nil && !IsNil(o.RegexReplace) {
		return true
	}

	return false
}

// SetRegexReplace gets a reference to the given FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOfRegexReplace and assigns it to the RegexReplace field.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) SetRegexReplace(v FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOfRegexReplace) {
	o.RegexReplace = &v
}

// GetKey returns the Key field value
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetKey() EnumSCHEMAPATHREF {
	if o == nil {
		var ret EnumSCHEMAPATHREF
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) GetKeyOk() (*EnumSCHEMAPATHREF, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) SetKey(v EnumSCHEMAPATHREF) {
	o.Key = v
}

func (o FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	if !IsNil(o.RegexReplace) {
		toSerialize["regex_replace"] = o.RegexReplace
	}
	toSerialize["key"] = o.Key

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 := _FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1{}

	err = json.Unmarshal(data, &varFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1)

	if err != nil {
		return err
	}

	*o = FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1(varFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		delete(additionalProperties, "values")
		delete(additionalProperties, "regex_replace")
		delete(additionalProperties, "key")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 struct {
	value *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1
	isSet bool
}

func (v NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) Get() *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 {
	return v.value
}

func (v *NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) Set(val *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1(val *FrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) *NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1 {
	return &NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1{value: val, isSet: true}
}

func (v NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrontendConfigurationCustomRulesInnerTransformMutateInnerOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


