/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetIntegration200ResponseDataOneOf4Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegration200ResponseDataOneOf4Parameters{}

// GetIntegration200ResponseDataOneOf4Parameters struct for GetIntegration200ResponseDataOneOf4Parameters
type GetIntegration200ResponseDataOneOf4Parameters struct {
	ApiKey string `json:"api_key"`
	InstanceUrl string `json:"instance_url"`
}

type _GetIntegration200ResponseDataOneOf4Parameters GetIntegration200ResponseDataOneOf4Parameters

// NewGetIntegration200ResponseDataOneOf4Parameters instantiates a new GetIntegration200ResponseDataOneOf4Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegration200ResponseDataOneOf4Parameters(apiKey string, instanceUrl string) *GetIntegration200ResponseDataOneOf4Parameters {
	this := GetIntegration200ResponseDataOneOf4Parameters{}
	this.ApiKey = apiKey
	this.InstanceUrl = instanceUrl
	return &this
}

// NewGetIntegration200ResponseDataOneOf4ParametersWithDefaults instantiates a new GetIntegration200ResponseDataOneOf4Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegration200ResponseDataOneOf4ParametersWithDefaults() *GetIntegration200ResponseDataOneOf4Parameters {
	this := GetIntegration200ResponseDataOneOf4Parameters{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *GetIntegration200ResponseDataOneOf4Parameters) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf4Parameters) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *GetIntegration200ResponseDataOneOf4Parameters) SetApiKey(v string) {
	o.ApiKey = v
}

// GetInstanceUrl returns the InstanceUrl field value
func (o *GetIntegration200ResponseDataOneOf4Parameters) GetInstanceUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceUrl
}

// GetInstanceUrlOk returns a tuple with the InstanceUrl field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf4Parameters) GetInstanceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceUrl, true
}

// SetInstanceUrl sets field value
func (o *GetIntegration200ResponseDataOneOf4Parameters) SetInstanceUrl(v string) {
	o.InstanceUrl = v
}

func (o GetIntegration200ResponseDataOneOf4Parameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegration200ResponseDataOneOf4Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key"] = o.ApiKey
	toSerialize["instance_url"] = o.InstanceUrl
	return toSerialize, nil
}

func (o *GetIntegration200ResponseDataOneOf4Parameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key",
		"instance_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetIntegration200ResponseDataOneOf4Parameters := _GetIntegration200ResponseDataOneOf4Parameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetIntegration200ResponseDataOneOf4Parameters)

	if err != nil {
		return err
	}

	*o = GetIntegration200ResponseDataOneOf4Parameters(varGetIntegration200ResponseDataOneOf4Parameters)

	return err
}

type NullableGetIntegration200ResponseDataOneOf4Parameters struct {
	value *GetIntegration200ResponseDataOneOf4Parameters
	isSet bool
}

func (v NullableGetIntegration200ResponseDataOneOf4Parameters) Get() *GetIntegration200ResponseDataOneOf4Parameters {
	return v.value
}

func (v *NullableGetIntegration200ResponseDataOneOf4Parameters) Set(val *GetIntegration200ResponseDataOneOf4Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegration200ResponseDataOneOf4Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegration200ResponseDataOneOf4Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegration200ResponseDataOneOf4Parameters(val *GetIntegration200ResponseDataOneOf4Parameters) *NullableGetIntegration200ResponseDataOneOf4Parameters {
	return &NullableGetIntegration200ResponseDataOneOf4Parameters{value: val, isSet: true}
}

func (v NullableGetIntegration200ResponseDataOneOf4Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegration200ResponseDataOneOf4Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


