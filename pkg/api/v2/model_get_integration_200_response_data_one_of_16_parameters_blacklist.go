/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetIntegration200ResponseDataOneOf16ParametersBlacklist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegration200ResponseDataOneOf16ParametersBlacklist{}

// GetIntegration200ResponseDataOneOf16ParametersBlacklist struct for GetIntegration200ResponseDataOneOf16ParametersBlacklist
type GetIntegration200ResponseDataOneOf16ParametersBlacklist struct {
	Namespaces []string `json:"namespaces,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetIntegration200ResponseDataOneOf16ParametersBlacklist GetIntegration200ResponseDataOneOf16ParametersBlacklist

// NewGetIntegration200ResponseDataOneOf16ParametersBlacklist instantiates a new GetIntegration200ResponseDataOneOf16ParametersBlacklist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegration200ResponseDataOneOf16ParametersBlacklist() *GetIntegration200ResponseDataOneOf16ParametersBlacklist {
	this := GetIntegration200ResponseDataOneOf16ParametersBlacklist{}
	return &this
}

// NewGetIntegration200ResponseDataOneOf16ParametersBlacklistWithDefaults instantiates a new GetIntegration200ResponseDataOneOf16ParametersBlacklist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegration200ResponseDataOneOf16ParametersBlacklistWithDefaults() *GetIntegration200ResponseDataOneOf16ParametersBlacklist {
	this := GetIntegration200ResponseDataOneOf16ParametersBlacklist{}
	return &this
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *GetIntegration200ResponseDataOneOf16ParametersBlacklist) GetNamespaces() []string {
	if o == nil || IsNil(o.Namespaces) {
		var ret []string
		return ret
	}
	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf16ParametersBlacklist) GetNamespacesOk() ([]string, bool) {
	if o == nil || IsNil(o.Namespaces) {
		return nil, false
	}
	return o.Namespaces, true
}

// HasNamespaces returns a boolean if a field has been set.
func (o *GetIntegration200ResponseDataOneOf16ParametersBlacklist) HasNamespaces() bool {
	if o != nil && !IsNil(o.Namespaces) {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given []string and assigns it to the Namespaces field.
func (o *GetIntegration200ResponseDataOneOf16ParametersBlacklist) SetNamespaces(v []string) {
	o.Namespaces = v
}

func (o GetIntegration200ResponseDataOneOf16ParametersBlacklist) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegration200ResponseDataOneOf16ParametersBlacklist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Namespaces) {
		toSerialize["namespaces"] = o.Namespaces
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetIntegration200ResponseDataOneOf16ParametersBlacklist) UnmarshalJSON(data []byte) (err error) {
	varGetIntegration200ResponseDataOneOf16ParametersBlacklist := _GetIntegration200ResponseDataOneOf16ParametersBlacklist{}

	err = json.Unmarshal(data, &varGetIntegration200ResponseDataOneOf16ParametersBlacklist)

	if err != nil {
		return err
	}

	*o = GetIntegration200ResponseDataOneOf16ParametersBlacklist(varGetIntegration200ResponseDataOneOf16ParametersBlacklist)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "namespaces")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist struct {
	value *GetIntegration200ResponseDataOneOf16ParametersBlacklist
	isSet bool
}

func (v NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist) Get() *GetIntegration200ResponseDataOneOf16ParametersBlacklist {
	return v.value
}

func (v *NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist) Set(val *GetIntegration200ResponseDataOneOf16ParametersBlacklist) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegration200ResponseDataOneOf16ParametersBlacklist(val *GetIntegration200ResponseDataOneOf16ParametersBlacklist) *NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist {
	return &NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist{value: val, isSet: true}
}

func (v NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegration200ResponseDataOneOf16ParametersBlacklist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


