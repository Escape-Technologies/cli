/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// GetApplication200ResponseConfigurationCustomRulesInnerSeedInner - struct for GetApplication200ResponseConfigurationCustomRulesInnerSeedInner
type GetApplication200ResponseConfigurationCustomRulesInnerSeedInner struct {
	GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf *GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf
	GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 *GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1
}

// GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOfAsGetApplication200ResponseConfigurationCustomRulesInnerSeedInner is a convenience function that returns GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf wrapped in GetApplication200ResponseConfigurationCustomRulesInnerSeedInner
func GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOfAsGetApplication200ResponseConfigurationCustomRulesInnerSeedInner(v *GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf) GetApplication200ResponseConfigurationCustomRulesInnerSeedInner {
	return GetApplication200ResponseConfigurationCustomRulesInnerSeedInner{
		GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf: v,
	}
}

// GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1AsGetApplication200ResponseConfigurationCustomRulesInnerSeedInner is a convenience function that returns GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 wrapped in GetApplication200ResponseConfigurationCustomRulesInnerSeedInner
func GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1AsGetApplication200ResponseConfigurationCustomRulesInnerSeedInner(v *GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1) GetApplication200ResponseConfigurationCustomRulesInnerSeedInner {
	return GetApplication200ResponseConfigurationCustomRulesInnerSeedInner{
		GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetApplication200ResponseConfigurationCustomRulesInnerSeedInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf)
	if err == nil {
		jsonGetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf, _ := json.Marshal(dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf)
		if string(jsonGetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf) == "{}" { // empty struct
			dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf); err != nil {
				dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf = nil
	}

	// try to unmarshal data into GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1)
	if err == nil {
		jsonGetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1, _ := json.Marshal(dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1)
		if string(jsonGetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1) == "{}" { // empty struct
			dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1); err != nil {
				dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf = nil
		dst.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetApplication200ResponseConfigurationCustomRulesInnerSeedInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetApplication200ResponseConfigurationCustomRulesInnerSeedInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetApplication200ResponseConfigurationCustomRulesInnerSeedInner) MarshalJSON() ([]byte, error) {
	if src.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return json.Marshal(&src.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf)
	}

	if src.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return json.Marshal(&src.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetApplication200ResponseConfigurationCustomRulesInnerSeedInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf
	}

	if obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj GetApplication200ResponseConfigurationCustomRulesInnerSeedInner) GetActualInstanceValue() (interface{}) {
	if obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf != nil {
		return *obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf
	}

	if obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1 != nil {
		return *obj.GetApplication200ResponseConfigurationCustomRulesInnerSeedInnerOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner struct {
	value *GetApplication200ResponseConfigurationCustomRulesInnerSeedInner
	isSet bool
}

func (v NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner) Get() *GetApplication200ResponseConfigurationCustomRulesInnerSeedInner {
	return v.value
}

func (v *NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner) Set(val *GetApplication200ResponseConfigurationCustomRulesInnerSeedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner(val *GetApplication200ResponseConfigurationCustomRulesInnerSeedInner) *NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner {
	return &NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner{value: val, isSet: true}
}

func (v NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApplication200ResponseConfigurationCustomRulesInnerSeedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


