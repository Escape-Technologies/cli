/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the FrontendConfigurationSecurityTestsHighNumberOfCustomScalars type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrontendConfigurationSecurityTestsHighNumberOfCustomScalars{}

// FrontendConfigurationSecurityTestsHighNumberOfCustomScalars struct for FrontendConfigurationSecurityTestsHighNumberOfCustomScalars
type FrontendConfigurationSecurityTestsHighNumberOfCustomScalars struct {
	DetectionThreshold *float32 `json:"detection_threshold,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FrontendConfigurationSecurityTestsHighNumberOfCustomScalars FrontendConfigurationSecurityTestsHighNumberOfCustomScalars

// NewFrontendConfigurationSecurityTestsHighNumberOfCustomScalars instantiates a new FrontendConfigurationSecurityTestsHighNumberOfCustomScalars object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrontendConfigurationSecurityTestsHighNumberOfCustomScalars() *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars {
	this := FrontendConfigurationSecurityTestsHighNumberOfCustomScalars{}
	return &this
}

// NewFrontendConfigurationSecurityTestsHighNumberOfCustomScalarsWithDefaults instantiates a new FrontendConfigurationSecurityTestsHighNumberOfCustomScalars object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrontendConfigurationSecurityTestsHighNumberOfCustomScalarsWithDefaults() *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars {
	this := FrontendConfigurationSecurityTestsHighNumberOfCustomScalars{}
	return &this
}

// GetDetectionThreshold returns the DetectionThreshold field value if set, zero value otherwise.
func (o *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) GetDetectionThreshold() float32 {
	if o == nil || IsNil(o.DetectionThreshold) {
		var ret float32
		return ret
	}
	return *o.DetectionThreshold
}

// GetDetectionThresholdOk returns a tuple with the DetectionThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) GetDetectionThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.DetectionThreshold) {
		return nil, false
	}
	return o.DetectionThreshold, true
}

// HasDetectionThreshold returns a boolean if a field has been set.
func (o *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) HasDetectionThreshold() bool {
	if o != nil && !IsNil(o.DetectionThreshold) {
		return true
	}

	return false
}

// SetDetectionThreshold gets a reference to the given float32 and assigns it to the DetectionThreshold field.
func (o *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) SetDetectionThreshold(v float32) {
	o.DetectionThreshold = &v
}

func (o FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DetectionThreshold) {
		toSerialize["detection_threshold"] = o.DetectionThreshold
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) UnmarshalJSON(data []byte) (err error) {
	varFrontendConfigurationSecurityTestsHighNumberOfCustomScalars := _FrontendConfigurationSecurityTestsHighNumberOfCustomScalars{}

	err = json.Unmarshal(data, &varFrontendConfigurationSecurityTestsHighNumberOfCustomScalars)

	if err != nil {
		return err
	}

	*o = FrontendConfigurationSecurityTestsHighNumberOfCustomScalars(varFrontendConfigurationSecurityTestsHighNumberOfCustomScalars)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "detection_threshold")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars struct {
	value *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars
	isSet bool
}

func (v NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars) Get() *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars {
	return v.value
}

func (v *NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars) Set(val *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) {
	v.value = val
	v.isSet = true
}

func (v NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars) IsSet() bool {
	return v.isSet
}

func (v *NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars(val *FrontendConfigurationSecurityTestsHighNumberOfCustomScalars) *NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars {
	return &NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars{value: val, isSet: true}
}

func (v NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrontendConfigurationSecurityTestsHighNumberOfCustomScalars) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


