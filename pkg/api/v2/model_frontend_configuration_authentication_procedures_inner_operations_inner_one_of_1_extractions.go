/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)


// FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions struct for FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions
type FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions struct {
	ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner *[]FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner
	ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner *[]FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner
	err = json.Unmarshal(data, &dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner);
	if err == nil {
		jsonArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner, _ := json.Marshal(dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner)
		if string(jsonArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner) == "{}" { // empty struct
			dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner = nil
		} else {
			return nil // data stored in dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner, return on the first match
		}
	} else {
		dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner = nil
	}

	// try to unmarshal JSON data into ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner
	err = json.Unmarshal(data, &dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner);
	if err == nil {
		jsonArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner, _ := json.Marshal(dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner)
		if string(jsonArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner) == "{}" { // empty struct
			dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner = nil
		} else {
			return nil // data stored in dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner, return on the first match
		}
	} else {
		dst.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) MarshalJSON() ([]byte, error) {
	if src.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner != nil {
		return json.Marshal(&src.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1ExtractionsAnyOfInner)
	}

	if src.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner != nil {
		return json.Marshal(&src.ArrayOfFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOfExtractionsInner)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions struct {
	value *FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions
	isSet bool
}

func (v NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) Get() *FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions {
	return v.value
}

func (v *NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) Set(val *FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) {
	v.value = val
	v.isSet = true
}

func (v NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) IsSet() bool {
	return v.isSet
}

func (v *NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions(val *FrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) *NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions {
	return &NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions{value: val, isSet: true}
}

func (v NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrontendConfigurationAuthenticationProceduresInnerOperationsInnerOneOf1Extractions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


