/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetIntegration200ResponseDataOneOf16ParametersTags type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegration200ResponseDataOneOf16ParametersTags{}

// GetIntegration200ResponseDataOneOf16ParametersTags struct for GetIntegration200ResponseDataOneOf16ParametersTags
type GetIntegration200ResponseDataOneOf16ParametersTags struct {
	Labels []string `json:"labels,omitempty"`
	Namespaces *bool `json:"namespaces,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetIntegration200ResponseDataOneOf16ParametersTags GetIntegration200ResponseDataOneOf16ParametersTags

// NewGetIntegration200ResponseDataOneOf16ParametersTags instantiates a new GetIntegration200ResponseDataOneOf16ParametersTags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegration200ResponseDataOneOf16ParametersTags() *GetIntegration200ResponseDataOneOf16ParametersTags {
	this := GetIntegration200ResponseDataOneOf16ParametersTags{}
	return &this
}

// NewGetIntegration200ResponseDataOneOf16ParametersTagsWithDefaults instantiates a new GetIntegration200ResponseDataOneOf16ParametersTags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegration200ResponseDataOneOf16ParametersTagsWithDefaults() *GetIntegration200ResponseDataOneOf16ParametersTags {
	this := GetIntegration200ResponseDataOneOf16ParametersTags{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) SetLabels(v []string) {
	o.Labels = v
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) GetNamespaces() bool {
	if o == nil || IsNil(o.Namespaces) {
		var ret bool
		return ret
	}
	return *o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) GetNamespacesOk() (*bool, bool) {
	if o == nil || IsNil(o.Namespaces) {
		return nil, false
	}
	return o.Namespaces, true
}

// HasNamespaces returns a boolean if a field has been set.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) HasNamespaces() bool {
	if o != nil && !IsNil(o.Namespaces) {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given bool and assigns it to the Namespaces field.
func (o *GetIntegration200ResponseDataOneOf16ParametersTags) SetNamespaces(v bool) {
	o.Namespaces = &v
}

func (o GetIntegration200ResponseDataOneOf16ParametersTags) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegration200ResponseDataOneOf16ParametersTags) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Namespaces) {
		toSerialize["namespaces"] = o.Namespaces
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetIntegration200ResponseDataOneOf16ParametersTags) UnmarshalJSON(data []byte) (err error) {
	varGetIntegration200ResponseDataOneOf16ParametersTags := _GetIntegration200ResponseDataOneOf16ParametersTags{}

	err = json.Unmarshal(data, &varGetIntegration200ResponseDataOneOf16ParametersTags)

	if err != nil {
		return err
	}

	*o = GetIntegration200ResponseDataOneOf16ParametersTags(varGetIntegration200ResponseDataOneOf16ParametersTags)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "labels")
		delete(additionalProperties, "namespaces")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetIntegration200ResponseDataOneOf16ParametersTags struct {
	value *GetIntegration200ResponseDataOneOf16ParametersTags
	isSet bool
}

func (v NullableGetIntegration200ResponseDataOneOf16ParametersTags) Get() *GetIntegration200ResponseDataOneOf16ParametersTags {
	return v.value
}

func (v *NullableGetIntegration200ResponseDataOneOf16ParametersTags) Set(val *GetIntegration200ResponseDataOneOf16ParametersTags) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegration200ResponseDataOneOf16ParametersTags) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegration200ResponseDataOneOf16ParametersTags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegration200ResponseDataOneOf16ParametersTags(val *GetIntegration200ResponseDataOneOf16ParametersTags) *NullableGetIntegration200ResponseDataOneOf16ParametersTags {
	return &NullableGetIntegration200ResponseDataOneOf16ParametersTags{value: val, isSet: true}
}

func (v NullableGetIntegration200ResponseDataOneOf16ParametersTags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegration200ResponseDataOneOf16ParametersTags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


