/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateIntegrationRequestDataOneOf12Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIntegrationRequestDataOneOf12Parameters{}

// UpdateIntegrationRequestDataOneOf12Parameters struct for UpdateIntegrationRequestDataOneOf12Parameters
type UpdateIntegrationRequestDataOneOf12Parameters struct {
	Name string `json:"name"`
	AccountId string `json:"account_id"`
	Email string `json:"email"`
	ApiKey string `json:"api_key"`
	InstanceUrl string `json:"instance_url"`
	Templates []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner `json:"templates,omitempty"`
}

type _UpdateIntegrationRequestDataOneOf12Parameters UpdateIntegrationRequestDataOneOf12Parameters

// NewUpdateIntegrationRequestDataOneOf12Parameters instantiates a new UpdateIntegrationRequestDataOneOf12Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIntegrationRequestDataOneOf12Parameters(name string, accountId string, email string, apiKey string, instanceUrl string) *UpdateIntegrationRequestDataOneOf12Parameters {
	this := UpdateIntegrationRequestDataOneOf12Parameters{}
	this.Name = name
	this.AccountId = accountId
	this.Email = email
	this.ApiKey = apiKey
	this.InstanceUrl = instanceUrl
	return &this
}

// NewUpdateIntegrationRequestDataOneOf12ParametersWithDefaults instantiates a new UpdateIntegrationRequestDataOneOf12Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIntegrationRequestDataOneOf12ParametersWithDefaults() *UpdateIntegrationRequestDataOneOf12Parameters {
	this := UpdateIntegrationRequestDataOneOf12Parameters{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) SetName(v string) {
	o.Name = v
}

// GetAccountId returns the AccountId field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) SetAccountId(v string) {
	o.AccountId = v
}

// GetEmail returns the Email field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) SetEmail(v string) {
	o.Email = v
}

// GetApiKey returns the ApiKey field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) SetApiKey(v string) {
	o.ApiKey = v
}

// GetInstanceUrl returns the InstanceUrl field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetInstanceUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceUrl
}

// GetInstanceUrlOk returns a tuple with the InstanceUrl field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetInstanceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceUrl, true
}

// SetInstanceUrl sets field value
func (o *UpdateIntegrationRequestDataOneOf12Parameters) SetInstanceUrl(v string) {
	o.InstanceUrl = v
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetTemplates() []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner {
	if o == nil || IsNil(o.Templates) {
		var ret []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner
		return ret
	}
	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) GetTemplatesOk() ([]UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner, bool) {
	if o == nil || IsNil(o.Templates) {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) HasTemplates() bool {
	if o != nil && !IsNil(o.Templates) {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner and assigns it to the Templates field.
func (o *UpdateIntegrationRequestDataOneOf12Parameters) SetTemplates(v []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) {
	o.Templates = v
}

func (o UpdateIntegrationRequestDataOneOf12Parameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIntegrationRequestDataOneOf12Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["account_id"] = o.AccountId
	toSerialize["email"] = o.Email
	toSerialize["api_key"] = o.ApiKey
	toSerialize["instance_url"] = o.InstanceUrl
	if !IsNil(o.Templates) {
		toSerialize["templates"] = o.Templates
	}
	return toSerialize, nil
}

func (o *UpdateIntegrationRequestDataOneOf12Parameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"account_id",
		"email",
		"api_key",
		"instance_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateIntegrationRequestDataOneOf12Parameters := _UpdateIntegrationRequestDataOneOf12Parameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateIntegrationRequestDataOneOf12Parameters)

	if err != nil {
		return err
	}

	*o = UpdateIntegrationRequestDataOneOf12Parameters(varUpdateIntegrationRequestDataOneOf12Parameters)

	return err
}

type NullableUpdateIntegrationRequestDataOneOf12Parameters struct {
	value *UpdateIntegrationRequestDataOneOf12Parameters
	isSet bool
}

func (v NullableUpdateIntegrationRequestDataOneOf12Parameters) Get() *UpdateIntegrationRequestDataOneOf12Parameters {
	return v.value
}

func (v *NullableUpdateIntegrationRequestDataOneOf12Parameters) Set(val *UpdateIntegrationRequestDataOneOf12Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIntegrationRequestDataOneOf12Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIntegrationRequestDataOneOf12Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIntegrationRequestDataOneOf12Parameters(val *UpdateIntegrationRequestDataOneOf12Parameters) *NullableUpdateIntegrationRequestDataOneOf12Parameters {
	return &NullableUpdateIntegrationRequestDataOneOf12Parameters{value: val, isSet: true}
}

func (v NullableUpdateIntegrationRequestDataOneOf12Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIntegrationRequestDataOneOf12Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


