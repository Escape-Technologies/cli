/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumA59e4e0f7039345a12220706339ba411 the model 'EnumA59e4e0f7039345a12220706339ba411'
type EnumA59e4e0f7039345a12220706339ba411 string

// List of Enum_a59e4e0f7039345a12220706339ba411
const (
	ENUMA59E4E0F7039345A12220706339BA411_GRAPHQL EnumA59e4e0f7039345a12220706339ba411 = "GRAPHQL"
	ENUMA59E4E0F7039345A12220706339BA411_REST EnumA59e4e0f7039345a12220706339ba411 = "REST"
	ENUMA59E4E0F7039345A12220706339BA411_FRONTEND EnumA59e4e0f7039345a12220706339ba411 = "FRONTEND"
	ENUMA59E4E0F7039345A12220706339BA411_GRPC EnumA59e4e0f7039345a12220706339ba411 = "GRPC"
	ENUMA59E4E0F7039345A12220706339BA411_SOAP EnumA59e4e0f7039345a12220706339ba411 = "SOAP"
	ENUMA59E4E0F7039345A12220706339BA411_WEBSOCKET EnumA59e4e0f7039345a12220706339ba411 = "WEBSOCKET"
)

// All allowed values of EnumA59e4e0f7039345a12220706339ba411 enum
var AllowedEnumA59e4e0f7039345a12220706339ba411EnumValues = []EnumA59e4e0f7039345a12220706339ba411{
	"GRAPHQL",
	"REST",
	"FRONTEND",
	"GRPC",
	"SOAP",
	"WEBSOCKET",
}

func (v *EnumA59e4e0f7039345a12220706339ba411) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumA59e4e0f7039345a12220706339ba411(value)
	for _, existing := range AllowedEnumA59e4e0f7039345a12220706339ba411EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumA59e4e0f7039345a12220706339ba411", value)
}

// NewEnumA59e4e0f7039345a12220706339ba411FromValue returns a pointer to a valid EnumA59e4e0f7039345a12220706339ba411
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumA59e4e0f7039345a12220706339ba411FromValue(v string) (*EnumA59e4e0f7039345a12220706339ba411, error) {
	ev := EnumA59e4e0f7039345a12220706339ba411(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumA59e4e0f7039345a12220706339ba411: valid values are %v", v, AllowedEnumA59e4e0f7039345a12220706339ba411EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumA59e4e0f7039345a12220706339ba411) IsValid() bool {
	for _, existing := range AllowedEnumA59e4e0f7039345a12220706339ba411EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_a59e4e0f7039345a12220706339ba411 value
func (v EnumA59e4e0f7039345a12220706339ba411) Ptr() *EnumA59e4e0f7039345a12220706339ba411 {
	return &v
}

type NullableEnumA59e4e0f7039345a12220706339ba411 struct {
	value *EnumA59e4e0f7039345a12220706339ba411
	isSet bool
}

func (v NullableEnumA59e4e0f7039345a12220706339ba411) Get() *EnumA59e4e0f7039345a12220706339ba411 {
	return v.value
}

func (v *NullableEnumA59e4e0f7039345a12220706339ba411) Set(val *EnumA59e4e0f7039345a12220706339ba411) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumA59e4e0f7039345a12220706339ba411) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumA59e4e0f7039345a12220706339ba411) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumA59e4e0f7039345a12220706339ba411(val *EnumA59e4e0f7039345a12220706339ba411) *NullableEnumA59e4e0f7039345a12220706339ba411 {
	return &NullableEnumA59e4e0f7039345a12220706339ba411{value: val, isSet: true}
}

func (v NullableEnumA59e4e0f7039345a12220706339ba411) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumA59e4e0f7039345a12220706339ba411) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

