/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS the model 'ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS'
type ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS string

// List of ENUM_0_PROPERTIES_CONFIGURATION_PROPERTIES_SCAN_PROPERTIES_SCALARS_ADDITIONALPROPERTIES_PROPERTIES_PARENTS_ITEMS
const (
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS_STRING ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS = "String"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS_INT ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS = "Int"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS_FLOAT ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS = "Float"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS_BOOLEAN ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS = "Boolean"
)

// All allowed values of ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS enum
var AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMSEnumValues = []ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS{
	"String",
	"Int",
	"Float",
	"Boolean",
}

func (v *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS(value)
	for _, existing := range AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMSEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS", value)
}

// NewENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMSFromValue returns a pointer to a valid ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMSFromValue(v string) (*ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS, error) {
	ev := ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS: valid values are %v", v, AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMSEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) IsValid() bool {
	for _, existing := range AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMSEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_0_PROPERTIES_CONFIGURATION_PROPERTIES_SCAN_PROPERTIES_SCALARS_ADDITIONALPROPERTIES_PROPERTIES_PARENTS_ITEMS value
func (v ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) Ptr() *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS {
	return &v
}

type NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS struct {
	value *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS
	isSet bool
}

func (v NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) Get() *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS {
	return v.value
}

func (v *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) Set(val *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) {
	v.value = val
	v.isSet = true
}

func (v NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) IsSet() bool {
	return v.isSet
}

func (v *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS(val *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS {
	return &NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS{value: val, isSet: true}
}

func (v NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESSCALARSADDITIONALPROPERTIESPROPERTIESPARENTSITEMS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

