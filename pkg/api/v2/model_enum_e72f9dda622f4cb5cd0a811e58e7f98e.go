/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumE72f9dda622f4cb5cd0a811e58e7f98e the model 'EnumE72f9dda622f4cb5cd0a811e58e7f98e'
type EnumE72f9dda622f4cb5cd0a811e58e7f98e string

// List of Enum_e72f9dda622f4cb5cd0a811e58e7f98e
const (
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_2 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-2"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_3 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-3"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_4 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-4"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_6 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-6"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_7 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-7"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_14 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-14"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_17 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-17"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_AC_22 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "AC-22"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_CM_2 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "CM-2"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_CM_3 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "CM-3"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SA_11 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SA-11"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_5 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-5"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_7 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-7"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_8 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-8"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_12 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-12"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_13 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-13"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_17 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-17"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_18 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-18"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_20 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-20"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SC_28 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SC-28"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SI_2 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SI-2"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SI_3 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SI-3"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SI_4 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SI-4"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SI_7 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SI-7"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SI_10 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SI-10"
	ENUME72F9DDA622F4CB5CD0A811E58E7F98E_SI_11 EnumE72f9dda622f4cb5cd0a811e58e7f98e = "SI-11"
)

// All allowed values of EnumE72f9dda622f4cb5cd0a811e58e7f98e enum
var AllowedEnumE72f9dda622f4cb5cd0a811e58e7f98eEnumValues = []EnumE72f9dda622f4cb5cd0a811e58e7f98e{
	"AC-2",
	"AC-3",
	"AC-4",
	"AC-6",
	"AC-7",
	"AC-14",
	"AC-17",
	"AC-22",
	"CM-2",
	"CM-3",
	"SA-11",
	"SC-5",
	"SC-7",
	"SC-8",
	"SC-12",
	"SC-13",
	"SC-17",
	"SC-18",
	"SC-20",
	"SC-28",
	"SI-2",
	"SI-3",
	"SI-4",
	"SI-7",
	"SI-10",
	"SI-11",
}

func (v *EnumE72f9dda622f4cb5cd0a811e58e7f98e) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumE72f9dda622f4cb5cd0a811e58e7f98e(value)
	for _, existing := range AllowedEnumE72f9dda622f4cb5cd0a811e58e7f98eEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumE72f9dda622f4cb5cd0a811e58e7f98e", value)
}

// NewEnumE72f9dda622f4cb5cd0a811e58e7f98eFromValue returns a pointer to a valid EnumE72f9dda622f4cb5cd0a811e58e7f98e
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumE72f9dda622f4cb5cd0a811e58e7f98eFromValue(v string) (*EnumE72f9dda622f4cb5cd0a811e58e7f98e, error) {
	ev := EnumE72f9dda622f4cb5cd0a811e58e7f98e(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumE72f9dda622f4cb5cd0a811e58e7f98e: valid values are %v", v, AllowedEnumE72f9dda622f4cb5cd0a811e58e7f98eEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumE72f9dda622f4cb5cd0a811e58e7f98e) IsValid() bool {
	for _, existing := range AllowedEnumE72f9dda622f4cb5cd0a811e58e7f98eEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_e72f9dda622f4cb5cd0a811e58e7f98e value
func (v EnumE72f9dda622f4cb5cd0a811e58e7f98e) Ptr() *EnumE72f9dda622f4cb5cd0a811e58e7f98e {
	return &v
}

type NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e struct {
	value *EnumE72f9dda622f4cb5cd0a811e58e7f98e
	isSet bool
}

func (v NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e) Get() *EnumE72f9dda622f4cb5cd0a811e58e7f98e {
	return v.value
}

func (v *NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e) Set(val *EnumE72f9dda622f4cb5cd0a811e58e7f98e) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumE72f9dda622f4cb5cd0a811e58e7f98e(val *EnumE72f9dda622f4cb5cd0a811e58e7f98e) *NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e {
	return &NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e{value: val, isSet: true}
}

func (v NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumE72f9dda622f4cb5cd0a811e58e7f98e) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

