/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GetApplicationScans200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApplicationScans200ResponseDataInner{}

// GetApplicationScans200ResponseDataInner struct for GetApplicationScans200ResponseDataInner
type GetApplicationScans200ResponseDataInner struct {
	Id string `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
	Status string `json:"status"`
}

type _GetApplicationScans200ResponseDataInner GetApplicationScans200ResponseDataInner

// NewGetApplicationScans200ResponseDataInner instantiates a new GetApplicationScans200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApplicationScans200ResponseDataInner(id string, createdAt time.Time, status string) *GetApplicationScans200ResponseDataInner {
	this := GetApplicationScans200ResponseDataInner{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Status = status
	return &this
}

// NewGetApplicationScans200ResponseDataInnerWithDefaults instantiates a new GetApplicationScans200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApplicationScans200ResponseDataInnerWithDefaults() *GetApplicationScans200ResponseDataInner {
	this := GetApplicationScans200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetApplicationScans200ResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetApplicationScans200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetApplicationScans200ResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetApplicationScans200ResponseDataInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetApplicationScans200ResponseDataInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetApplicationScans200ResponseDataInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetStatus returns the Status field value
func (o *GetApplicationScans200ResponseDataInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetApplicationScans200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetApplicationScans200ResponseDataInner) SetStatus(v string) {
	o.Status = v
}

func (o GetApplicationScans200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApplicationScans200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *GetApplicationScans200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApplicationScans200ResponseDataInner := _GetApplicationScans200ResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetApplicationScans200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetApplicationScans200ResponseDataInner(varGetApplicationScans200ResponseDataInner)

	return err
}

type NullableGetApplicationScans200ResponseDataInner struct {
	value *GetApplicationScans200ResponseDataInner
	isSet bool
}

func (v NullableGetApplicationScans200ResponseDataInner) Get() *GetApplicationScans200ResponseDataInner {
	return v.value
}

func (v *NullableGetApplicationScans200ResponseDataInner) Set(val *GetApplicationScans200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApplicationScans200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApplicationScans200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApplicationScans200ResponseDataInner(val *GetApplicationScans200ResponseDataInner) *NullableGetApplicationScans200ResponseDataInner {
	return &NullableGetApplicationScans200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetApplicationScans200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApplicationScans200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


