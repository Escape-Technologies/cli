/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// Enum9cbca20c0e69ac71eb9dafe686cc2ad7 the model 'Enum9cbca20c0e69ac71eb9dafe686cc2ad7'
type Enum9cbca20c0e69ac71eb9dafe686cc2ad7 string

// List of Enum_9cbca20c0e69ac71eb9dafe686cc2ad7
const (
	ENUM9CBCA20C0E69AC71EB9DAFE686CC2AD7_CC1 Enum9cbca20c0e69ac71eb9dafe686cc2ad7 = "CC1"
	ENUM9CBCA20C0E69AC71EB9DAFE686CC2AD7_CC2 Enum9cbca20c0e69ac71eb9dafe686cc2ad7 = "CC2"
	ENUM9CBCA20C0E69AC71EB9DAFE686CC2AD7_CC5 Enum9cbca20c0e69ac71eb9dafe686cc2ad7 = "CC5"
	ENUM9CBCA20C0E69AC71EB9DAFE686CC2AD7_CC6 Enum9cbca20c0e69ac71eb9dafe686cc2ad7 = "CC6"
	ENUM9CBCA20C0E69AC71EB9DAFE686CC2AD7_CC7 Enum9cbca20c0e69ac71eb9dafe686cc2ad7 = "CC7"
	ENUM9CBCA20C0E69AC71EB9DAFE686CC2AD7_CC9 Enum9cbca20c0e69ac71eb9dafe686cc2ad7 = "CC9"
)

// All allowed values of Enum9cbca20c0e69ac71eb9dafe686cc2ad7 enum
var AllowedEnum9cbca20c0e69ac71eb9dafe686cc2ad7EnumValues = []Enum9cbca20c0e69ac71eb9dafe686cc2ad7{
	"CC1",
	"CC2",
	"CC5",
	"CC6",
	"CC7",
	"CC9",
}

func (v *Enum9cbca20c0e69ac71eb9dafe686cc2ad7) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum9cbca20c0e69ac71eb9dafe686cc2ad7(value)
	for _, existing := range AllowedEnum9cbca20c0e69ac71eb9dafe686cc2ad7EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum9cbca20c0e69ac71eb9dafe686cc2ad7", value)
}

// NewEnum9cbca20c0e69ac71eb9dafe686cc2ad7FromValue returns a pointer to a valid Enum9cbca20c0e69ac71eb9dafe686cc2ad7
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum9cbca20c0e69ac71eb9dafe686cc2ad7FromValue(v string) (*Enum9cbca20c0e69ac71eb9dafe686cc2ad7, error) {
	ev := Enum9cbca20c0e69ac71eb9dafe686cc2ad7(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum9cbca20c0e69ac71eb9dafe686cc2ad7: valid values are %v", v, AllowedEnum9cbca20c0e69ac71eb9dafe686cc2ad7EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum9cbca20c0e69ac71eb9dafe686cc2ad7) IsValid() bool {
	for _, existing := range AllowedEnum9cbca20c0e69ac71eb9dafe686cc2ad7EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_9cbca20c0e69ac71eb9dafe686cc2ad7 value
func (v Enum9cbca20c0e69ac71eb9dafe686cc2ad7) Ptr() *Enum9cbca20c0e69ac71eb9dafe686cc2ad7 {
	return &v
}

type NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7 struct {
	value *Enum9cbca20c0e69ac71eb9dafe686cc2ad7
	isSet bool
}

func (v NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7) Get() *Enum9cbca20c0e69ac71eb9dafe686cc2ad7 {
	return v.value
}

func (v *NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7) Set(val *Enum9cbca20c0e69ac71eb9dafe686cc2ad7) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7(val *Enum9cbca20c0e69ac71eb9dafe686cc2ad7) *NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7 {
	return &NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7{value: val, isSet: true}
}

func (v NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum9cbca20c0e69ac71eb9dafe686cc2ad7) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

