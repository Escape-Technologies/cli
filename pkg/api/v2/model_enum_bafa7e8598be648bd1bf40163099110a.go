/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumBafa7e8598be648bd1bf40163099110a the model 'EnumBafa7e8598be648bd1bf40163099110a'
type EnumBafa7e8598be648bd1bf40163099110a string

// List of Enum_bafa7e8598be648bd1bf40163099110a
const (
	ENUMBAFA7E8598BE648BD1BF40163099110A_KEY EnumBafa7e8598be648bd1bf40163099110a = "key"
	ENUMBAFA7E8598BE648BD1BF40163099110A_KEY_STRICT EnumBafa7e8598be648bd1bf40163099110a = "key_strict"
	ENUMBAFA7E8598BE648BD1BF40163099110A_VALUE EnumBafa7e8598be648bd1bf40163099110a = "value"
	ENUMBAFA7E8598BE648BD1BF40163099110A_VALUE_STRICT EnumBafa7e8598be648bd1bf40163099110a = "value_strict"
	ENUMBAFA7E8598BE648BD1BF40163099110A_KEY_OR_VALUE EnumBafa7e8598be648bd1bf40163099110a = "key_or_value"
	ENUMBAFA7E8598BE648BD1BF40163099110A_KEY_OR_VALUE_STRICT EnumBafa7e8598be648bd1bf40163099110a = "key_or_value_strict"
	ENUMBAFA7E8598BE648BD1BF40163099110A_KEY_STRICT_OR_VALUE EnumBafa7e8598be648bd1bf40163099110a = "key_strict_or_value"
	ENUMBAFA7E8598BE648BD1BF40163099110A_KEY_AND_VALUE_STRICT EnumBafa7e8598be648bd1bf40163099110a = "key_and_value_strict"
)

// All allowed values of EnumBafa7e8598be648bd1bf40163099110a enum
var AllowedEnumBafa7e8598be648bd1bf40163099110aEnumValues = []EnumBafa7e8598be648bd1bf40163099110a{
	"key",
	"key_strict",
	"value",
	"value_strict",
	"key_or_value",
	"key_or_value_strict",
	"key_strict_or_value",
	"key_and_value_strict",
}

func (v *EnumBafa7e8598be648bd1bf40163099110a) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumBafa7e8598be648bd1bf40163099110a(value)
	for _, existing := range AllowedEnumBafa7e8598be648bd1bf40163099110aEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumBafa7e8598be648bd1bf40163099110a", value)
}

// NewEnumBafa7e8598be648bd1bf40163099110aFromValue returns a pointer to a valid EnumBafa7e8598be648bd1bf40163099110a
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumBafa7e8598be648bd1bf40163099110aFromValue(v string) (*EnumBafa7e8598be648bd1bf40163099110a, error) {
	ev := EnumBafa7e8598be648bd1bf40163099110a(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumBafa7e8598be648bd1bf40163099110a: valid values are %v", v, AllowedEnumBafa7e8598be648bd1bf40163099110aEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumBafa7e8598be648bd1bf40163099110a) IsValid() bool {
	for _, existing := range AllowedEnumBafa7e8598be648bd1bf40163099110aEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_bafa7e8598be648bd1bf40163099110a value
func (v EnumBafa7e8598be648bd1bf40163099110a) Ptr() *EnumBafa7e8598be648bd1bf40163099110a {
	return &v
}

type NullableEnumBafa7e8598be648bd1bf40163099110a struct {
	value *EnumBafa7e8598be648bd1bf40163099110a
	isSet bool
}

func (v NullableEnumBafa7e8598be648bd1bf40163099110a) Get() *EnumBafa7e8598be648bd1bf40163099110a {
	return v.value
}

func (v *NullableEnumBafa7e8598be648bd1bf40163099110a) Set(val *EnumBafa7e8598be648bd1bf40163099110a) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumBafa7e8598be648bd1bf40163099110a) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumBafa7e8598be648bd1bf40163099110a) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumBafa7e8598be648bd1bf40163099110a(val *EnumBafa7e8598be648bd1bf40163099110a) *NullableEnumBafa7e8598be648bd1bf40163099110a {
	return &NullableEnumBafa7e8598be648bd1bf40163099110a{value: val, isSet: true}
}

func (v NullableEnumBafa7e8598be648bd1bf40163099110a) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumBafa7e8598be648bd1bf40163099110a) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

