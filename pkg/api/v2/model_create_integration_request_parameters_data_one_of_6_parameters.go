/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateIntegrationRequestParametersDataOneOf6Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIntegrationRequestParametersDataOneOf6Parameters{}

// CreateIntegrationRequestParametersDataOneOf6Parameters struct for CreateIntegrationRequestParametersDataOneOf6Parameters
type CreateIntegrationRequestParametersDataOneOf6Parameters struct {
	ApiKey string `json:"api_key"`
}

type _CreateIntegrationRequestParametersDataOneOf6Parameters CreateIntegrationRequestParametersDataOneOf6Parameters

// NewCreateIntegrationRequestParametersDataOneOf6Parameters instantiates a new CreateIntegrationRequestParametersDataOneOf6Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIntegrationRequestParametersDataOneOf6Parameters(apiKey string) *CreateIntegrationRequestParametersDataOneOf6Parameters {
	this := CreateIntegrationRequestParametersDataOneOf6Parameters{}
	this.ApiKey = apiKey
	return &this
}

// NewCreateIntegrationRequestParametersDataOneOf6ParametersWithDefaults instantiates a new CreateIntegrationRequestParametersDataOneOf6Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIntegrationRequestParametersDataOneOf6ParametersWithDefaults() *CreateIntegrationRequestParametersDataOneOf6Parameters {
	this := CreateIntegrationRequestParametersDataOneOf6Parameters{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *CreateIntegrationRequestParametersDataOneOf6Parameters) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf6Parameters) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *CreateIntegrationRequestParametersDataOneOf6Parameters) SetApiKey(v string) {
	o.ApiKey = v
}

func (o CreateIntegrationRequestParametersDataOneOf6Parameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIntegrationRequestParametersDataOneOf6Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key"] = o.ApiKey
	return toSerialize, nil
}

func (o *CreateIntegrationRequestParametersDataOneOf6Parameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIntegrationRequestParametersDataOneOf6Parameters := _CreateIntegrationRequestParametersDataOneOf6Parameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIntegrationRequestParametersDataOneOf6Parameters)

	if err != nil {
		return err
	}

	*o = CreateIntegrationRequestParametersDataOneOf6Parameters(varCreateIntegrationRequestParametersDataOneOf6Parameters)

	return err
}

type NullableCreateIntegrationRequestParametersDataOneOf6Parameters struct {
	value *CreateIntegrationRequestParametersDataOneOf6Parameters
	isSet bool
}

func (v NullableCreateIntegrationRequestParametersDataOneOf6Parameters) Get() *CreateIntegrationRequestParametersDataOneOf6Parameters {
	return v.value
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf6Parameters) Set(val *CreateIntegrationRequestParametersDataOneOf6Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIntegrationRequestParametersDataOneOf6Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf6Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIntegrationRequestParametersDataOneOf6Parameters(val *CreateIntegrationRequestParametersDataOneOf6Parameters) *NullableCreateIntegrationRequestParametersDataOneOf6Parameters {
	return &NullableCreateIntegrationRequestParametersDataOneOf6Parameters{value: val, isSet: true}
}

func (v NullableCreateIntegrationRequestParametersDataOneOf6Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf6Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


