/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GetScan200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetScan200Response{}

// GetScan200Response struct for GetScan200Response
type GetScan200Response struct {
	Id string `json:"id"`
	Status string `json:"status"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	FinishedAt time.Time `json:"finishedAt"`
	ProgressRatio float32 `json:"progressRatio"`
	Score float32 `json:"score"`
	Initiator string `json:"initiator"`
}

type _GetScan200Response GetScan200Response

// NewGetScan200Response instantiates a new GetScan200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetScan200Response(id string, status string, createdAt time.Time, updatedAt time.Time, finishedAt time.Time, progressRatio float32, score float32, initiator string) *GetScan200Response {
	this := GetScan200Response{}
	this.Id = id
	this.Status = status
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.FinishedAt = finishedAt
	this.ProgressRatio = progressRatio
	this.Score = score
	this.Initiator = initiator
	return &this
}

// NewGetScan200ResponseWithDefaults instantiates a new GetScan200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetScan200ResponseWithDefaults() *GetScan200Response {
	this := GetScan200Response{}
	return &this
}

// GetId returns the Id field value
func (o *GetScan200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetScan200Response) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *GetScan200Response) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetScan200Response) SetStatus(v string) {
	o.Status = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetScan200Response) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetScan200Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *GetScan200Response) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *GetScan200Response) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetFinishedAt returns the FinishedAt field value
func (o *GetScan200Response) GetFinishedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinishedAt, true
}

// SetFinishedAt sets field value
func (o *GetScan200Response) SetFinishedAt(v time.Time) {
	o.FinishedAt = v
}

// GetProgressRatio returns the ProgressRatio field value
func (o *GetScan200Response) GetProgressRatio() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProgressRatio
}

// GetProgressRatioOk returns a tuple with the ProgressRatio field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetProgressRatioOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgressRatio, true
}

// SetProgressRatio sets field value
func (o *GetScan200Response) SetProgressRatio(v float32) {
	o.ProgressRatio = v
}

// GetScore returns the Score field value
func (o *GetScan200Response) GetScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *GetScan200Response) SetScore(v float32) {
	o.Score = v
}

// GetInitiator returns the Initiator field value
func (o *GetScan200Response) GetInitiator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value
// and a boolean to check if the value has been set.
func (o *GetScan200Response) GetInitiatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Initiator, true
}

// SetInitiator sets field value
func (o *GetScan200Response) SetInitiator(v string) {
	o.Initiator = v
}

func (o GetScan200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetScan200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["finishedAt"] = o.FinishedAt
	toSerialize["progressRatio"] = o.ProgressRatio
	toSerialize["score"] = o.Score
	toSerialize["initiator"] = o.Initiator
	return toSerialize, nil
}

func (o *GetScan200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"status",
		"createdAt",
		"updatedAt",
		"finishedAt",
		"progressRatio",
		"score",
		"initiator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetScan200Response := _GetScan200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetScan200Response)

	if err != nil {
		return err
	}

	*o = GetScan200Response(varGetScan200Response)

	return err
}

type NullableGetScan200Response struct {
	value *GetScan200Response
	isSet bool
}

func (v NullableGetScan200Response) Get() *GetScan200Response {
	return v.value
}

func (v *NullableGetScan200Response) Set(val *GetScan200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScan200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScan200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScan200Response(val *GetScan200Response) *NullableGetScan200Response {
	return &NullableGetScan200Response{value: val, isSet: true}
}

func (v NullableGetScan200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScan200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


