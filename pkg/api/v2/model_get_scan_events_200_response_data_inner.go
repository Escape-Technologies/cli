/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GetScanEvents200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetScanEvents200ResponseDataInner{}

// GetScanEvents200ResponseDataInner struct for GetScanEvents200ResponseDataInner
type GetScanEvents200ResponseDataInner struct {
	Id string `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
	Description string `json:"description"`
	Level string `json:"level"`
	Title string `json:"title"`
}

type _GetScanEvents200ResponseDataInner GetScanEvents200ResponseDataInner

// NewGetScanEvents200ResponseDataInner instantiates a new GetScanEvents200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetScanEvents200ResponseDataInner(id string, createdAt time.Time, description string, level string, title string) *GetScanEvents200ResponseDataInner {
	this := GetScanEvents200ResponseDataInner{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Description = description
	this.Level = level
	this.Title = title
	return &this
}

// NewGetScanEvents200ResponseDataInnerWithDefaults instantiates a new GetScanEvents200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetScanEvents200ResponseDataInnerWithDefaults() *GetScanEvents200ResponseDataInner {
	this := GetScanEvents200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetScanEvents200ResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetScanEvents200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetScanEvents200ResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetScanEvents200ResponseDataInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetScanEvents200ResponseDataInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetScanEvents200ResponseDataInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value
func (o *GetScanEvents200ResponseDataInner) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *GetScanEvents200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *GetScanEvents200ResponseDataInner) SetDescription(v string) {
	o.Description = v
}

// GetLevel returns the Level field value
func (o *GetScanEvents200ResponseDataInner) GetLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *GetScanEvents200ResponseDataInner) GetLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *GetScanEvents200ResponseDataInner) SetLevel(v string) {
	o.Level = v
}

// GetTitle returns the Title field value
func (o *GetScanEvents200ResponseDataInner) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *GetScanEvents200ResponseDataInner) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *GetScanEvents200ResponseDataInner) SetTitle(v string) {
	o.Title = v
}

func (o GetScanEvents200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetScanEvents200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["description"] = o.Description
	toSerialize["level"] = o.Level
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *GetScanEvents200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
		"description",
		"level",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetScanEvents200ResponseDataInner := _GetScanEvents200ResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetScanEvents200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetScanEvents200ResponseDataInner(varGetScanEvents200ResponseDataInner)

	return err
}

type NullableGetScanEvents200ResponseDataInner struct {
	value *GetScanEvents200ResponseDataInner
	isSet bool
}

func (v NullableGetScanEvents200ResponseDataInner) Get() *GetScanEvents200ResponseDataInner {
	return v.value
}

func (v *NullableGetScanEvents200ResponseDataInner) Set(val *GetScanEvents200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScanEvents200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScanEvents200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScanEvents200ResponseDataInner(val *GetScanEvents200ResponseDataInner) *NullableGetScanEvents200ResponseDataInner {
	return &NullableGetScanEvents200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetScanEvents200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScanEvents200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


