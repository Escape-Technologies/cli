/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ListAuditLogs200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuditLogs200ResponseDataInner{}

// ListAuditLogs200ResponseDataInner struct for ListAuditLogs200ResponseDataInner
type ListAuditLogs200ResponseDataInner struct {
	// The ID of the audit log.
	Id string `json:"id"`
	// The date and time the audit log was created.
	Date time.Time `json:"date"`
	// The action that was performed.
	Action string `json:"action"`
	// The name of the audit log.
	Name string `json:"name"`
	// The actor that performed the action.
	Actor string `json:"actor"`
	// The email of the actor that performed the action.
	ActorEmail string `json:"actorEmail"`
	AdditionalProperties map[string]interface{}
}

type _ListAuditLogs200ResponseDataInner ListAuditLogs200ResponseDataInner

// NewListAuditLogs200ResponseDataInner instantiates a new ListAuditLogs200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuditLogs200ResponseDataInner(id string, date time.Time, action string, name string, actor string, actorEmail string) *ListAuditLogs200ResponseDataInner {
	this := ListAuditLogs200ResponseDataInner{}
	this.Id = id
	this.Date = date
	this.Action = action
	this.Name = name
	this.Actor = actor
	this.ActorEmail = actorEmail
	return &this
}

// NewListAuditLogs200ResponseDataInnerWithDefaults instantiates a new ListAuditLogs200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuditLogs200ResponseDataInnerWithDefaults() *ListAuditLogs200ResponseDataInner {
	this := ListAuditLogs200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListAuditLogs200ResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListAuditLogs200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListAuditLogs200ResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetDate returns the Date field value
func (o *ListAuditLogs200ResponseDataInner) GetDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *ListAuditLogs200ResponseDataInner) GetDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *ListAuditLogs200ResponseDataInner) SetDate(v time.Time) {
	o.Date = v
}

// GetAction returns the Action field value
func (o *ListAuditLogs200ResponseDataInner) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ListAuditLogs200ResponseDataInner) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ListAuditLogs200ResponseDataInner) SetAction(v string) {
	o.Action = v
}

// GetName returns the Name field value
func (o *ListAuditLogs200ResponseDataInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListAuditLogs200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListAuditLogs200ResponseDataInner) SetName(v string) {
	o.Name = v
}

// GetActor returns the Actor field value
func (o *ListAuditLogs200ResponseDataInner) GetActor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Actor
}

// GetActorOk returns a tuple with the Actor field value
// and a boolean to check if the value has been set.
func (o *ListAuditLogs200ResponseDataInner) GetActorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actor, true
}

// SetActor sets field value
func (o *ListAuditLogs200ResponseDataInner) SetActor(v string) {
	o.Actor = v
}

// GetActorEmail returns the ActorEmail field value
func (o *ListAuditLogs200ResponseDataInner) GetActorEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorEmail
}

// GetActorEmailOk returns a tuple with the ActorEmail field value
// and a boolean to check if the value has been set.
func (o *ListAuditLogs200ResponseDataInner) GetActorEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorEmail, true
}

// SetActorEmail sets field value
func (o *ListAuditLogs200ResponseDataInner) SetActorEmail(v string) {
	o.ActorEmail = v
}

func (o ListAuditLogs200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAuditLogs200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["date"] = o.Date
	toSerialize["action"] = o.Action
	toSerialize["name"] = o.Name
	toSerialize["actor"] = o.Actor
	toSerialize["actorEmail"] = o.ActorEmail

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListAuditLogs200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"date",
		"action",
		"name",
		"actor",
		"actorEmail",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListAuditLogs200ResponseDataInner := _ListAuditLogs200ResponseDataInner{}

	err = json.Unmarshal(data, &varListAuditLogs200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = ListAuditLogs200ResponseDataInner(varListAuditLogs200ResponseDataInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "date")
		delete(additionalProperties, "action")
		delete(additionalProperties, "name")
		delete(additionalProperties, "actor")
		delete(additionalProperties, "actorEmail")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListAuditLogs200ResponseDataInner struct {
	value *ListAuditLogs200ResponseDataInner
	isSet bool
}

func (v NullableListAuditLogs200ResponseDataInner) Get() *ListAuditLogs200ResponseDataInner {
	return v.value
}

func (v *NullableListAuditLogs200ResponseDataInner) Set(val *ListAuditLogs200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuditLogs200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuditLogs200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuditLogs200ResponseDataInner(val *ListAuditLogs200ResponseDataInner) *NullableListAuditLogs200ResponseDataInner {
	return &NullableListAuditLogs200ResponseDataInner{value: val, isSet: true}
}

func (v NullableListAuditLogs200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuditLogs200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


