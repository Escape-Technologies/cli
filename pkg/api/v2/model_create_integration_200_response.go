/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CreateIntegration200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIntegration200Response{}

// CreateIntegration200Response struct for CreateIntegration200Response
type CreateIntegration200Response struct {
	Id string `json:"id"`
	Name string `json:"name"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	Parameters CreateIntegrationRequestParameters `json:"parameters"`
	LastValidationAt time.Time `json:"lastValidationAt"`
}

type _CreateIntegration200Response CreateIntegration200Response

// NewCreateIntegration200Response instantiates a new CreateIntegration200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIntegration200Response(id string, name string, createdAt time.Time, updatedAt time.Time, parameters CreateIntegrationRequestParameters, lastValidationAt time.Time) *CreateIntegration200Response {
	this := CreateIntegration200Response{}
	this.Id = id
	this.Name = name
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Parameters = parameters
	this.LastValidationAt = lastValidationAt
	return &this
}

// NewCreateIntegration200ResponseWithDefaults instantiates a new CreateIntegration200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIntegration200ResponseWithDefaults() *CreateIntegration200Response {
	this := CreateIntegration200Response{}
	return &this
}

// GetId returns the Id field value
func (o *CreateIntegration200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateIntegration200Response) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CreateIntegration200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateIntegration200Response) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateIntegration200Response) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateIntegration200Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CreateIntegration200Response) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CreateIntegration200Response) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetParameters returns the Parameters field value
func (o *CreateIntegration200Response) GetParameters() CreateIntegrationRequestParameters {
	if o == nil {
		var ret CreateIntegrationRequestParameters
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetParametersOk() (*CreateIntegrationRequestParameters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parameters, true
}

// SetParameters sets field value
func (o *CreateIntegration200Response) SetParameters(v CreateIntegrationRequestParameters) {
	o.Parameters = v
}

// GetLastValidationAt returns the LastValidationAt field value
func (o *CreateIntegration200Response) GetLastValidationAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastValidationAt
}

// GetLastValidationAtOk returns a tuple with the LastValidationAt field value
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetLastValidationAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastValidationAt, true
}

// SetLastValidationAt sets field value
func (o *CreateIntegration200Response) SetLastValidationAt(v time.Time) {
	o.LastValidationAt = v
}

func (o CreateIntegration200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIntegration200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["parameters"] = o.Parameters
	toSerialize["lastValidationAt"] = o.LastValidationAt
	return toSerialize, nil
}

func (o *CreateIntegration200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"createdAt",
		"updatedAt",
		"parameters",
		"lastValidationAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIntegration200Response := _CreateIntegration200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIntegration200Response)

	if err != nil {
		return err
	}

	*o = CreateIntegration200Response(varCreateIntegration200Response)

	return err
}

type NullableCreateIntegration200Response struct {
	value *CreateIntegration200Response
	isSet bool
}

func (v NullableCreateIntegration200Response) Get() *CreateIntegration200Response {
	return v.value
}

func (v *NullableCreateIntegration200Response) Set(val *CreateIntegration200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIntegration200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIntegration200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIntegration200Response(val *CreateIntegration200Response) *NullableCreateIntegration200Response {
	return &NullableCreateIntegration200Response{value: val, isSet: true}
}

func (v NullableCreateIntegration200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIntegration200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


