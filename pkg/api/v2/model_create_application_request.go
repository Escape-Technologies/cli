/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateApplicationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationRequest{}

// CreateApplicationRequest struct for CreateApplicationRequest
type CreateApplicationRequest struct {
	ApplicationService string `json:"applicationService"`
	AuthenticationStr *string `json:"authenticationStr,omitempty"`
	Name string `json:"name"`
	OrganizationId string `json:"organizationId"`
	ProxyId *string `json:"proxyId,omitempty"`
	ReadWrite bool `json:"readWrite"`
	Schema CreateApplicationRequestSchema `json:"schema"`
	Type string `json:"type"`
}

type _CreateApplicationRequest CreateApplicationRequest

// NewCreateApplicationRequest instantiates a new CreateApplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationRequest(applicationService string, name string, organizationId string, readWrite bool, schema CreateApplicationRequestSchema, type_ string) *CreateApplicationRequest {
	this := CreateApplicationRequest{}
	this.ApplicationService = applicationService
	this.Name = name
	this.OrganizationId = organizationId
	this.ReadWrite = readWrite
	this.Schema = schema
	this.Type = type_
	return &this
}

// NewCreateApplicationRequestWithDefaults instantiates a new CreateApplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationRequestWithDefaults() *CreateApplicationRequest {
	this := CreateApplicationRequest{}
	return &this
}

// GetApplicationService returns the ApplicationService field value
func (o *CreateApplicationRequest) GetApplicationService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationService
}

// GetApplicationServiceOk returns a tuple with the ApplicationService field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetApplicationServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationService, true
}

// SetApplicationService sets field value
func (o *CreateApplicationRequest) SetApplicationService(v string) {
	o.ApplicationService = v
}

// GetAuthenticationStr returns the AuthenticationStr field value if set, zero value otherwise.
func (o *CreateApplicationRequest) GetAuthenticationStr() string {
	if o == nil || IsNil(o.AuthenticationStr) {
		var ret string
		return ret
	}
	return *o.AuthenticationStr
}

// GetAuthenticationStrOk returns a tuple with the AuthenticationStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetAuthenticationStrOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationStr) {
		return nil, false
	}
	return o.AuthenticationStr, true
}

// HasAuthenticationStr returns a boolean if a field has been set.
func (o *CreateApplicationRequest) HasAuthenticationStr() bool {
	if o != nil && !IsNil(o.AuthenticationStr) {
		return true
	}

	return false
}

// SetAuthenticationStr gets a reference to the given string and assigns it to the AuthenticationStr field.
func (o *CreateApplicationRequest) SetAuthenticationStr(v string) {
	o.AuthenticationStr = &v
}

// GetName returns the Name field value
func (o *CreateApplicationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApplicationRequest) SetName(v string) {
	o.Name = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *CreateApplicationRequest) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *CreateApplicationRequest) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProxyId returns the ProxyId field value if set, zero value otherwise.
func (o *CreateApplicationRequest) GetProxyId() string {
	if o == nil || IsNil(o.ProxyId) {
		var ret string
		return ret
	}
	return *o.ProxyId
}

// GetProxyIdOk returns a tuple with the ProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetProxyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyId) {
		return nil, false
	}
	return o.ProxyId, true
}

// HasProxyId returns a boolean if a field has been set.
func (o *CreateApplicationRequest) HasProxyId() bool {
	if o != nil && !IsNil(o.ProxyId) {
		return true
	}

	return false
}

// SetProxyId gets a reference to the given string and assigns it to the ProxyId field.
func (o *CreateApplicationRequest) SetProxyId(v string) {
	o.ProxyId = &v
}

// GetReadWrite returns the ReadWrite field value
func (o *CreateApplicationRequest) GetReadWrite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadWrite
}

// GetReadWriteOk returns a tuple with the ReadWrite field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetReadWriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadWrite, true
}

// SetReadWrite sets field value
func (o *CreateApplicationRequest) SetReadWrite(v bool) {
	o.ReadWrite = v
}

// GetSchema returns the Schema field value
func (o *CreateApplicationRequest) GetSchema() CreateApplicationRequestSchema {
	if o == nil {
		var ret CreateApplicationRequestSchema
		return ret
	}

	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetSchemaOk() (*CreateApplicationRequestSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schema, true
}

// SetSchema sets field value
func (o *CreateApplicationRequest) SetSchema(v CreateApplicationRequestSchema) {
	o.Schema = v
}

// GetType returns the Type field value
func (o *CreateApplicationRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateApplicationRequest) SetType(v string) {
	o.Type = v
}

func (o CreateApplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["applicationService"] = o.ApplicationService
	if !IsNil(o.AuthenticationStr) {
		toSerialize["authenticationStr"] = o.AuthenticationStr
	}
	toSerialize["name"] = o.Name
	toSerialize["organizationId"] = o.OrganizationId
	if !IsNil(o.ProxyId) {
		toSerialize["proxyId"] = o.ProxyId
	}
	toSerialize["readWrite"] = o.ReadWrite
	toSerialize["schema"] = o.Schema
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *CreateApplicationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"applicationService",
		"name",
		"organizationId",
		"readWrite",
		"schema",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApplicationRequest := _CreateApplicationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApplicationRequest)

	if err != nil {
		return err
	}

	*o = CreateApplicationRequest(varCreateApplicationRequest)

	return err
}

type NullableCreateApplicationRequest struct {
	value *CreateApplicationRequest
	isSet bool
}

func (v NullableCreateApplicationRequest) Get() *CreateApplicationRequest {
	return v.value
}

func (v *NullableCreateApplicationRequest) Set(val *CreateApplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequest(val *CreateApplicationRequest) *NullableCreateApplicationRequest {
	return &NullableCreateApplicationRequest{value: val, isSet: true}
}

func (v NullableCreateApplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


