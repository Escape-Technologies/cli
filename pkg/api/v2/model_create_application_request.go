/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateApplicationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationRequest{}

// CreateApplicationRequest struct for CreateApplicationRequest
type CreateApplicationRequest struct {
	Type EnumE2faa1839c383d205180930f9bfb3583 `json:"type"`
	// Application URL
	Url string `json:"url"`
	Schema CreateApplicationRequestSchema `json:"schema"`
	Configuration *CreateApplicationRequestConfiguration `json:"configuration,omitempty"`
	// Application name
	Name string `json:"name"`
	LocationId string `json:"locationId"`
	Cron string `json:"cron"`
	AdditionalProperties map[string]interface{}
}

type _CreateApplicationRequest CreateApplicationRequest

// NewCreateApplicationRequest instantiates a new CreateApplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationRequest(type_ EnumE2faa1839c383d205180930f9bfb3583, url string, schema CreateApplicationRequestSchema, name string, locationId string, cron string) *CreateApplicationRequest {
	this := CreateApplicationRequest{}
	this.Type = type_
	this.Url = url
	this.Schema = schema
	this.Name = name
	this.LocationId = locationId
	this.Cron = cron
	return &this
}

// NewCreateApplicationRequestWithDefaults instantiates a new CreateApplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationRequestWithDefaults() *CreateApplicationRequest {
	this := CreateApplicationRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateApplicationRequest) GetType() EnumE2faa1839c383d205180930f9bfb3583 {
	if o == nil {
		var ret EnumE2faa1839c383d205180930f9bfb3583
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetTypeOk() (*EnumE2faa1839c383d205180930f9bfb3583, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateApplicationRequest) SetType(v EnumE2faa1839c383d205180930f9bfb3583) {
	o.Type = v
}

// GetUrl returns the Url field value
func (o *CreateApplicationRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CreateApplicationRequest) SetUrl(v string) {
	o.Url = v
}

// GetSchema returns the Schema field value
func (o *CreateApplicationRequest) GetSchema() CreateApplicationRequestSchema {
	if o == nil {
		var ret CreateApplicationRequestSchema
		return ret
	}

	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetSchemaOk() (*CreateApplicationRequestSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schema, true
}

// SetSchema sets field value
func (o *CreateApplicationRequest) SetSchema(v CreateApplicationRequestSchema) {
	o.Schema = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *CreateApplicationRequest) GetConfiguration() CreateApplicationRequestConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret CreateApplicationRequestConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetConfigurationOk() (*CreateApplicationRequestConfiguration, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *CreateApplicationRequest) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given CreateApplicationRequestConfiguration and assigns it to the Configuration field.
func (o *CreateApplicationRequest) SetConfiguration(v CreateApplicationRequestConfiguration) {
	o.Configuration = &v
}

// GetName returns the Name field value
func (o *CreateApplicationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApplicationRequest) SetName(v string) {
	o.Name = v
}

// GetLocationId returns the LocationId field value
func (o *CreateApplicationRequest) GetLocationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationId, true
}

// SetLocationId sets field value
func (o *CreateApplicationRequest) SetLocationId(v string) {
	o.LocationId = v
}

// GetCron returns the Cron field value
func (o *CreateApplicationRequest) GetCron() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cron
}

// GetCronOk returns a tuple with the Cron field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequest) GetCronOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cron, true
}

// SetCron sets field value
func (o *CreateApplicationRequest) SetCron(v string) {
	o.Cron = v
}

func (o CreateApplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["url"] = o.Url
	toSerialize["schema"] = o.Schema
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	toSerialize["name"] = o.Name
	toSerialize["locationId"] = o.LocationId
	toSerialize["cron"] = o.Cron

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateApplicationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"url",
		"schema",
		"name",
		"locationId",
		"cron",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApplicationRequest := _CreateApplicationRequest{}

	err = json.Unmarshal(data, &varCreateApplicationRequest)

	if err != nil {
		return err
	}

	*o = CreateApplicationRequest(varCreateApplicationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "url")
		delete(additionalProperties, "schema")
		delete(additionalProperties, "configuration")
		delete(additionalProperties, "name")
		delete(additionalProperties, "locationId")
		delete(additionalProperties, "cron")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateApplicationRequest struct {
	value *CreateApplicationRequest
	isSet bool
}

func (v NullableCreateApplicationRequest) Get() *CreateApplicationRequest {
	return v.value
}

func (v *NullableCreateApplicationRequest) Set(val *CreateApplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequest(val *CreateApplicationRequest) *NullableCreateApplicationRequest {
	return &NullableCreateApplicationRequest{value: val, isSet: true}
}

func (v NullableCreateApplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


