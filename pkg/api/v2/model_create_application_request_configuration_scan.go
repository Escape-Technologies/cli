/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CreateApplicationRequestConfigurationScan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationRequestConfigurationScan{}

// CreateApplicationRequestConfigurationScan struct for CreateApplicationRequestConfigurationScan
type CreateApplicationRequestConfigurationScan struct {
	Profile *string `json:"profile,omitempty"`
	ReadOnly *bool `json:"read_only,omitempty"`
	Hotstart []string `json:"hotstart,omitempty"`
	Blocklist *CreateApplicationRequestConfigurationScanBlocklist `json:"blocklist,omitempty"`
	Scalars map[string]CreateApplicationRequestConfigurationScanScalarsValue `json:"scalars,omitempty"`
	ApiType *string `json:"api_type,omitempty"`
	NullIsUnauthenticated *bool `json:"null_is_unauthenticated,omitempty"`
	HotstartOnly *bool `json:"hotstart_only,omitempty"`
	ForceFullScan *bool `json:"force_full_scan,omitempty"`
	FrontendInScopeDomains []string `json:"frontend_in_scope_domains,omitempty"`
	MaxDuration *float32 `json:"max_duration,omitempty"`
	FrontendCrawlingOnly *bool `json:"frontend_crawling_only,omitempty"`
	FrontendIntegratedAuthentication *bool `json:"frontend_integrated_authentication,omitempty"`
	FrontendSinglePageWorker *bool `json:"frontend_single_page_worker,omitempty"`
	FrontendParallelWorkers *float32 `json:"frontend_parallel_workers,omitempty"`
	FrontendUserAgent *string `json:"frontend_user_agent,omitempty"`
	FrontendUsePersistence *bool `json:"frontend_use_persistence,omitempty"`
	FrontendEscapeUserHeader *bool `json:"frontend_escape_user_header,omitempty"`
}

// NewCreateApplicationRequestConfigurationScan instantiates a new CreateApplicationRequestConfigurationScan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationRequestConfigurationScan() *CreateApplicationRequestConfigurationScan {
	this := CreateApplicationRequestConfigurationScan{}
	return &this
}

// NewCreateApplicationRequestConfigurationScanWithDefaults instantiates a new CreateApplicationRequestConfigurationScan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationRequestConfigurationScanWithDefaults() *CreateApplicationRequestConfigurationScan {
	this := CreateApplicationRequestConfigurationScan{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *CreateApplicationRequestConfigurationScan) SetProfile(v string) {
	o.Profile = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *CreateApplicationRequestConfigurationScan) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetHotstart returns the Hotstart field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetHotstart() []string {
	if o == nil || IsNil(o.Hotstart) {
		var ret []string
		return ret
	}
	return o.Hotstart
}

// GetHotstartOk returns a tuple with the Hotstart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetHotstartOk() ([]string, bool) {
	if o == nil || IsNil(o.Hotstart) {
		return nil, false
	}
	return o.Hotstart, true
}

// HasHotstart returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasHotstart() bool {
	if o != nil && !IsNil(o.Hotstart) {
		return true
	}

	return false
}

// SetHotstart gets a reference to the given []string and assigns it to the Hotstart field.
func (o *CreateApplicationRequestConfigurationScan) SetHotstart(v []string) {
	o.Hotstart = v
}

// GetBlocklist returns the Blocklist field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetBlocklist() CreateApplicationRequestConfigurationScanBlocklist {
	if o == nil || IsNil(o.Blocklist) {
		var ret CreateApplicationRequestConfigurationScanBlocklist
		return ret
	}
	return *o.Blocklist
}

// GetBlocklistOk returns a tuple with the Blocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetBlocklistOk() (*CreateApplicationRequestConfigurationScanBlocklist, bool) {
	if o == nil || IsNil(o.Blocklist) {
		return nil, false
	}
	return o.Blocklist, true
}

// HasBlocklist returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasBlocklist() bool {
	if o != nil && !IsNil(o.Blocklist) {
		return true
	}

	return false
}

// SetBlocklist gets a reference to the given CreateApplicationRequestConfigurationScanBlocklist and assigns it to the Blocklist field.
func (o *CreateApplicationRequestConfigurationScan) SetBlocklist(v CreateApplicationRequestConfigurationScanBlocklist) {
	o.Blocklist = &v
}

// GetScalars returns the Scalars field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetScalars() map[string]CreateApplicationRequestConfigurationScanScalarsValue {
	if o == nil || IsNil(o.Scalars) {
		var ret map[string]CreateApplicationRequestConfigurationScanScalarsValue
		return ret
	}
	return o.Scalars
}

// GetScalarsOk returns a tuple with the Scalars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetScalarsOk() (map[string]CreateApplicationRequestConfigurationScanScalarsValue, bool) {
	if o == nil || IsNil(o.Scalars) {
		return map[string]CreateApplicationRequestConfigurationScanScalarsValue{}, false
	}
	return o.Scalars, true
}

// HasScalars returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasScalars() bool {
	if o != nil && !IsNil(o.Scalars) {
		return true
	}

	return false
}

// SetScalars gets a reference to the given map[string]CreateApplicationRequestConfigurationScanScalarsValue and assigns it to the Scalars field.
func (o *CreateApplicationRequestConfigurationScan) SetScalars(v map[string]CreateApplicationRequestConfigurationScanScalarsValue) {
	o.Scalars = v
}

// GetApiType returns the ApiType field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetApiType() string {
	if o == nil || IsNil(o.ApiType) {
		var ret string
		return ret
	}
	return *o.ApiType
}

// GetApiTypeOk returns a tuple with the ApiType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetApiTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ApiType) {
		return nil, false
	}
	return o.ApiType, true
}

// HasApiType returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasApiType() bool {
	if o != nil && !IsNil(o.ApiType) {
		return true
	}

	return false
}

// SetApiType gets a reference to the given string and assigns it to the ApiType field.
func (o *CreateApplicationRequestConfigurationScan) SetApiType(v string) {
	o.ApiType = &v
}

// GetNullIsUnauthenticated returns the NullIsUnauthenticated field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetNullIsUnauthenticated() bool {
	if o == nil || IsNil(o.NullIsUnauthenticated) {
		var ret bool
		return ret
	}
	return *o.NullIsUnauthenticated
}

// GetNullIsUnauthenticatedOk returns a tuple with the NullIsUnauthenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetNullIsUnauthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.NullIsUnauthenticated) {
		return nil, false
	}
	return o.NullIsUnauthenticated, true
}

// HasNullIsUnauthenticated returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasNullIsUnauthenticated() bool {
	if o != nil && !IsNil(o.NullIsUnauthenticated) {
		return true
	}

	return false
}

// SetNullIsUnauthenticated gets a reference to the given bool and assigns it to the NullIsUnauthenticated field.
func (o *CreateApplicationRequestConfigurationScan) SetNullIsUnauthenticated(v bool) {
	o.NullIsUnauthenticated = &v
}

// GetHotstartOnly returns the HotstartOnly field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetHotstartOnly() bool {
	if o == nil || IsNil(o.HotstartOnly) {
		var ret bool
		return ret
	}
	return *o.HotstartOnly
}

// GetHotstartOnlyOk returns a tuple with the HotstartOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetHotstartOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.HotstartOnly) {
		return nil, false
	}
	return o.HotstartOnly, true
}

// HasHotstartOnly returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasHotstartOnly() bool {
	if o != nil && !IsNil(o.HotstartOnly) {
		return true
	}

	return false
}

// SetHotstartOnly gets a reference to the given bool and assigns it to the HotstartOnly field.
func (o *CreateApplicationRequestConfigurationScan) SetHotstartOnly(v bool) {
	o.HotstartOnly = &v
}

// GetForceFullScan returns the ForceFullScan field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetForceFullScan() bool {
	if o == nil || IsNil(o.ForceFullScan) {
		var ret bool
		return ret
	}
	return *o.ForceFullScan
}

// GetForceFullScanOk returns a tuple with the ForceFullScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetForceFullScanOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceFullScan) {
		return nil, false
	}
	return o.ForceFullScan, true
}

// HasForceFullScan returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasForceFullScan() bool {
	if o != nil && !IsNil(o.ForceFullScan) {
		return true
	}

	return false
}

// SetForceFullScan gets a reference to the given bool and assigns it to the ForceFullScan field.
func (o *CreateApplicationRequestConfigurationScan) SetForceFullScan(v bool) {
	o.ForceFullScan = &v
}

// GetFrontendInScopeDomains returns the FrontendInScopeDomains field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendInScopeDomains() []string {
	if o == nil || IsNil(o.FrontendInScopeDomains) {
		var ret []string
		return ret
	}
	return o.FrontendInScopeDomains
}

// GetFrontendInScopeDomainsOk returns a tuple with the FrontendInScopeDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendInScopeDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.FrontendInScopeDomains) {
		return nil, false
	}
	return o.FrontendInScopeDomains, true
}

// HasFrontendInScopeDomains returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendInScopeDomains() bool {
	if o != nil && !IsNil(o.FrontendInScopeDomains) {
		return true
	}

	return false
}

// SetFrontendInScopeDomains gets a reference to the given []string and assigns it to the FrontendInScopeDomains field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendInScopeDomains(v []string) {
	o.FrontendInScopeDomains = v
}

// GetMaxDuration returns the MaxDuration field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetMaxDuration() float32 {
	if o == nil || IsNil(o.MaxDuration) {
		var ret float32
		return ret
	}
	return *o.MaxDuration
}

// GetMaxDurationOk returns a tuple with the MaxDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetMaxDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDuration) {
		return nil, false
	}
	return o.MaxDuration, true
}

// HasMaxDuration returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasMaxDuration() bool {
	if o != nil && !IsNil(o.MaxDuration) {
		return true
	}

	return false
}

// SetMaxDuration gets a reference to the given float32 and assigns it to the MaxDuration field.
func (o *CreateApplicationRequestConfigurationScan) SetMaxDuration(v float32) {
	o.MaxDuration = &v
}

// GetFrontendCrawlingOnly returns the FrontendCrawlingOnly field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendCrawlingOnly() bool {
	if o == nil || IsNil(o.FrontendCrawlingOnly) {
		var ret bool
		return ret
	}
	return *o.FrontendCrawlingOnly
}

// GetFrontendCrawlingOnlyOk returns a tuple with the FrontendCrawlingOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendCrawlingOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontendCrawlingOnly) {
		return nil, false
	}
	return o.FrontendCrawlingOnly, true
}

// HasFrontendCrawlingOnly returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendCrawlingOnly() bool {
	if o != nil && !IsNil(o.FrontendCrawlingOnly) {
		return true
	}

	return false
}

// SetFrontendCrawlingOnly gets a reference to the given bool and assigns it to the FrontendCrawlingOnly field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendCrawlingOnly(v bool) {
	o.FrontendCrawlingOnly = &v
}

// GetFrontendIntegratedAuthentication returns the FrontendIntegratedAuthentication field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendIntegratedAuthentication() bool {
	if o == nil || IsNil(o.FrontendIntegratedAuthentication) {
		var ret bool
		return ret
	}
	return *o.FrontendIntegratedAuthentication
}

// GetFrontendIntegratedAuthenticationOk returns a tuple with the FrontendIntegratedAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendIntegratedAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontendIntegratedAuthentication) {
		return nil, false
	}
	return o.FrontendIntegratedAuthentication, true
}

// HasFrontendIntegratedAuthentication returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendIntegratedAuthentication() bool {
	if o != nil && !IsNil(o.FrontendIntegratedAuthentication) {
		return true
	}

	return false
}

// SetFrontendIntegratedAuthentication gets a reference to the given bool and assigns it to the FrontendIntegratedAuthentication field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendIntegratedAuthentication(v bool) {
	o.FrontendIntegratedAuthentication = &v
}

// GetFrontendSinglePageWorker returns the FrontendSinglePageWorker field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendSinglePageWorker() bool {
	if o == nil || IsNil(o.FrontendSinglePageWorker) {
		var ret bool
		return ret
	}
	return *o.FrontendSinglePageWorker
}

// GetFrontendSinglePageWorkerOk returns a tuple with the FrontendSinglePageWorker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendSinglePageWorkerOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontendSinglePageWorker) {
		return nil, false
	}
	return o.FrontendSinglePageWorker, true
}

// HasFrontendSinglePageWorker returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendSinglePageWorker() bool {
	if o != nil && !IsNil(o.FrontendSinglePageWorker) {
		return true
	}

	return false
}

// SetFrontendSinglePageWorker gets a reference to the given bool and assigns it to the FrontendSinglePageWorker field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendSinglePageWorker(v bool) {
	o.FrontendSinglePageWorker = &v
}

// GetFrontendParallelWorkers returns the FrontendParallelWorkers field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendParallelWorkers() float32 {
	if o == nil || IsNil(o.FrontendParallelWorkers) {
		var ret float32
		return ret
	}
	return *o.FrontendParallelWorkers
}

// GetFrontendParallelWorkersOk returns a tuple with the FrontendParallelWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendParallelWorkersOk() (*float32, bool) {
	if o == nil || IsNil(o.FrontendParallelWorkers) {
		return nil, false
	}
	return o.FrontendParallelWorkers, true
}

// HasFrontendParallelWorkers returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendParallelWorkers() bool {
	if o != nil && !IsNil(o.FrontendParallelWorkers) {
		return true
	}

	return false
}

// SetFrontendParallelWorkers gets a reference to the given float32 and assigns it to the FrontendParallelWorkers field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendParallelWorkers(v float32) {
	o.FrontendParallelWorkers = &v
}

// GetFrontendUserAgent returns the FrontendUserAgent field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendUserAgent() string {
	if o == nil || IsNil(o.FrontendUserAgent) {
		var ret string
		return ret
	}
	return *o.FrontendUserAgent
}

// GetFrontendUserAgentOk returns a tuple with the FrontendUserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.FrontendUserAgent) {
		return nil, false
	}
	return o.FrontendUserAgent, true
}

// HasFrontendUserAgent returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendUserAgent() bool {
	if o != nil && !IsNil(o.FrontendUserAgent) {
		return true
	}

	return false
}

// SetFrontendUserAgent gets a reference to the given string and assigns it to the FrontendUserAgent field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendUserAgent(v string) {
	o.FrontendUserAgent = &v
}

// GetFrontendUsePersistence returns the FrontendUsePersistence field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendUsePersistence() bool {
	if o == nil || IsNil(o.FrontendUsePersistence) {
		var ret bool
		return ret
	}
	return *o.FrontendUsePersistence
}

// GetFrontendUsePersistenceOk returns a tuple with the FrontendUsePersistence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendUsePersistenceOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontendUsePersistence) {
		return nil, false
	}
	return o.FrontendUsePersistence, true
}

// HasFrontendUsePersistence returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendUsePersistence() bool {
	if o != nil && !IsNil(o.FrontendUsePersistence) {
		return true
	}

	return false
}

// SetFrontendUsePersistence gets a reference to the given bool and assigns it to the FrontendUsePersistence field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendUsePersistence(v bool) {
	o.FrontendUsePersistence = &v
}

// GetFrontendEscapeUserHeader returns the FrontendEscapeUserHeader field value if set, zero value otherwise.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendEscapeUserHeader() bool {
	if o == nil || IsNil(o.FrontendEscapeUserHeader) {
		var ret bool
		return ret
	}
	return *o.FrontendEscapeUserHeader
}

// GetFrontendEscapeUserHeaderOk returns a tuple with the FrontendEscapeUserHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestConfigurationScan) GetFrontendEscapeUserHeaderOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontendEscapeUserHeader) {
		return nil, false
	}
	return o.FrontendEscapeUserHeader, true
}

// HasFrontendEscapeUserHeader returns a boolean if a field has been set.
func (o *CreateApplicationRequestConfigurationScan) HasFrontendEscapeUserHeader() bool {
	if o != nil && !IsNil(o.FrontendEscapeUserHeader) {
		return true
	}

	return false
}

// SetFrontendEscapeUserHeader gets a reference to the given bool and assigns it to the FrontendEscapeUserHeader field.
func (o *CreateApplicationRequestConfigurationScan) SetFrontendEscapeUserHeader(v bool) {
	o.FrontendEscapeUserHeader = &v
}

func (o CreateApplicationRequestConfigurationScan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationRequestConfigurationScan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.ReadOnly) {
		toSerialize["read_only"] = o.ReadOnly
	}
	if !IsNil(o.Hotstart) {
		toSerialize["hotstart"] = o.Hotstart
	}
	if !IsNil(o.Blocklist) {
		toSerialize["blocklist"] = o.Blocklist
	}
	if !IsNil(o.Scalars) {
		toSerialize["scalars"] = o.Scalars
	}
	if !IsNil(o.ApiType) {
		toSerialize["api_type"] = o.ApiType
	}
	if !IsNil(o.NullIsUnauthenticated) {
		toSerialize["null_is_unauthenticated"] = o.NullIsUnauthenticated
	}
	if !IsNil(o.HotstartOnly) {
		toSerialize["hotstart_only"] = o.HotstartOnly
	}
	if !IsNil(o.ForceFullScan) {
		toSerialize["force_full_scan"] = o.ForceFullScan
	}
	if !IsNil(o.FrontendInScopeDomains) {
		toSerialize["frontend_in_scope_domains"] = o.FrontendInScopeDomains
	}
	if !IsNil(o.MaxDuration) {
		toSerialize["max_duration"] = o.MaxDuration
	}
	if !IsNil(o.FrontendCrawlingOnly) {
		toSerialize["frontend_crawling_only"] = o.FrontendCrawlingOnly
	}
	if !IsNil(o.FrontendIntegratedAuthentication) {
		toSerialize["frontend_integrated_authentication"] = o.FrontendIntegratedAuthentication
	}
	if !IsNil(o.FrontendSinglePageWorker) {
		toSerialize["frontend_single_page_worker"] = o.FrontendSinglePageWorker
	}
	if !IsNil(o.FrontendParallelWorkers) {
		toSerialize["frontend_parallel_workers"] = o.FrontendParallelWorkers
	}
	if !IsNil(o.FrontendUserAgent) {
		toSerialize["frontend_user_agent"] = o.FrontendUserAgent
	}
	if !IsNil(o.FrontendUsePersistence) {
		toSerialize["frontend_use_persistence"] = o.FrontendUsePersistence
	}
	if !IsNil(o.FrontendEscapeUserHeader) {
		toSerialize["frontend_escape_user_header"] = o.FrontendEscapeUserHeader
	}
	return toSerialize, nil
}

type NullableCreateApplicationRequestConfigurationScan struct {
	value *CreateApplicationRequestConfigurationScan
	isSet bool
}

func (v NullableCreateApplicationRequestConfigurationScan) Get() *CreateApplicationRequestConfigurationScan {
	return v.value
}

func (v *NullableCreateApplicationRequestConfigurationScan) Set(val *CreateApplicationRequestConfigurationScan) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequestConfigurationScan) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequestConfigurationScan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequestConfigurationScan(val *CreateApplicationRequestConfigurationScan) *NullableCreateApplicationRequestConfigurationScan {
	return &NullableCreateApplicationRequestConfigurationScan{value: val, isSet: true}
}

func (v NullableCreateApplicationRequestConfigurationScan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequestConfigurationScan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


