/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumB2ba5e44bc46a15fb43cda9911cf1860 the model 'EnumB2ba5e44bc46a15fb43cda9911cf1860'
type EnumB2ba5e44bc46a15fb43cda9911cf1860 string

// List of Enum_b2ba5e44bc46a15fb43cda9911cf1860
const (
	ENUMB2BA5E44BC46A15FB43CDA9911CF1860_MULTI_MODAL_OPENAI EnumB2ba5e44bc46a15fb43cda9911cf1860 = "multi_modal_openai"
	ENUMB2BA5E44BC46A15FB43CDA9911CF1860_URL_ACTION_STATE_IDENTIFIER EnumB2ba5e44bc46a15fb43cda9911cf1860 = "url_action_state_identifier"
	ENUMB2BA5E44BC46A15FB43CDA9911CF1860_URL_STATE_IDENTIFIER EnumB2ba5e44bc46a15fb43cda9911cf1860 = "url_state_identifier"
	ENUMB2BA5E44BC46A15FB43CDA9911CF1860_MULTI_MODAL_CLUSTERING_IDENTIFIER EnumB2ba5e44bc46a15fb43cda9911cf1860 = "multi_modal_clustering_identifier"
)

// All allowed values of EnumB2ba5e44bc46a15fb43cda9911cf1860 enum
var AllowedEnumB2ba5e44bc46a15fb43cda9911cf1860EnumValues = []EnumB2ba5e44bc46a15fb43cda9911cf1860{
	"multi_modal_openai",
	"url_action_state_identifier",
	"url_state_identifier",
	"multi_modal_clustering_identifier",
}

func (v *EnumB2ba5e44bc46a15fb43cda9911cf1860) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumB2ba5e44bc46a15fb43cda9911cf1860(value)
	for _, existing := range AllowedEnumB2ba5e44bc46a15fb43cda9911cf1860EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumB2ba5e44bc46a15fb43cda9911cf1860", value)
}

// NewEnumB2ba5e44bc46a15fb43cda9911cf1860FromValue returns a pointer to a valid EnumB2ba5e44bc46a15fb43cda9911cf1860
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumB2ba5e44bc46a15fb43cda9911cf1860FromValue(v string) (*EnumB2ba5e44bc46a15fb43cda9911cf1860, error) {
	ev := EnumB2ba5e44bc46a15fb43cda9911cf1860(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumB2ba5e44bc46a15fb43cda9911cf1860: valid values are %v", v, AllowedEnumB2ba5e44bc46a15fb43cda9911cf1860EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumB2ba5e44bc46a15fb43cda9911cf1860) IsValid() bool {
	for _, existing := range AllowedEnumB2ba5e44bc46a15fb43cda9911cf1860EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_b2ba5e44bc46a15fb43cda9911cf1860 value
func (v EnumB2ba5e44bc46a15fb43cda9911cf1860) Ptr() *EnumB2ba5e44bc46a15fb43cda9911cf1860 {
	return &v
}

type NullableEnumB2ba5e44bc46a15fb43cda9911cf1860 struct {
	value *EnumB2ba5e44bc46a15fb43cda9911cf1860
	isSet bool
}

func (v NullableEnumB2ba5e44bc46a15fb43cda9911cf1860) Get() *EnumB2ba5e44bc46a15fb43cda9911cf1860 {
	return v.value
}

func (v *NullableEnumB2ba5e44bc46a15fb43cda9911cf1860) Set(val *EnumB2ba5e44bc46a15fb43cda9911cf1860) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumB2ba5e44bc46a15fb43cda9911cf1860) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumB2ba5e44bc46a15fb43cda9911cf1860) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumB2ba5e44bc46a15fb43cda9911cf1860(val *EnumB2ba5e44bc46a15fb43cda9911cf1860) *NullableEnumB2ba5e44bc46a15fb43cda9911cf1860 {
	return &NullableEnumB2ba5e44bc46a15fb43cda9911cf1860{value: val, isSet: true}
}

func (v NullableEnumB2ba5e44bc46a15fb43cda9911cf1860) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumB2ba5e44bc46a15fb43cda9911cf1860) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

