/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateIntegrationRequestParametersDataOneOf13Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIntegrationRequestParametersDataOneOf13Parameters{}

// CreateIntegrationRequestParametersDataOneOf13Parameters struct for CreateIntegrationRequestParametersDataOneOf13Parameters
type CreateIntegrationRequestParametersDataOneOf13Parameters struct {
	ApiKey string `json:"api_key"`
	AdminApiUrl string `json:"admin_api_url"`
}

type _CreateIntegrationRequestParametersDataOneOf13Parameters CreateIntegrationRequestParametersDataOneOf13Parameters

// NewCreateIntegrationRequestParametersDataOneOf13Parameters instantiates a new CreateIntegrationRequestParametersDataOneOf13Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIntegrationRequestParametersDataOneOf13Parameters(apiKey string, adminApiUrl string) *CreateIntegrationRequestParametersDataOneOf13Parameters {
	this := CreateIntegrationRequestParametersDataOneOf13Parameters{}
	this.ApiKey = apiKey
	this.AdminApiUrl = adminApiUrl
	return &this
}

// NewCreateIntegrationRequestParametersDataOneOf13ParametersWithDefaults instantiates a new CreateIntegrationRequestParametersDataOneOf13Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIntegrationRequestParametersDataOneOf13ParametersWithDefaults() *CreateIntegrationRequestParametersDataOneOf13Parameters {
	this := CreateIntegrationRequestParametersDataOneOf13Parameters{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *CreateIntegrationRequestParametersDataOneOf13Parameters) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf13Parameters) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *CreateIntegrationRequestParametersDataOneOf13Parameters) SetApiKey(v string) {
	o.ApiKey = v
}

// GetAdminApiUrl returns the AdminApiUrl field value
func (o *CreateIntegrationRequestParametersDataOneOf13Parameters) GetAdminApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminApiUrl
}

// GetAdminApiUrlOk returns a tuple with the AdminApiUrl field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf13Parameters) GetAdminApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminApiUrl, true
}

// SetAdminApiUrl sets field value
func (o *CreateIntegrationRequestParametersDataOneOf13Parameters) SetAdminApiUrl(v string) {
	o.AdminApiUrl = v
}

func (o CreateIntegrationRequestParametersDataOneOf13Parameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIntegrationRequestParametersDataOneOf13Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key"] = o.ApiKey
	toSerialize["admin_api_url"] = o.AdminApiUrl
	return toSerialize, nil
}

func (o *CreateIntegrationRequestParametersDataOneOf13Parameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key",
		"admin_api_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIntegrationRequestParametersDataOneOf13Parameters := _CreateIntegrationRequestParametersDataOneOf13Parameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIntegrationRequestParametersDataOneOf13Parameters)

	if err != nil {
		return err
	}

	*o = CreateIntegrationRequestParametersDataOneOf13Parameters(varCreateIntegrationRequestParametersDataOneOf13Parameters)

	return err
}

type NullableCreateIntegrationRequestParametersDataOneOf13Parameters struct {
	value *CreateIntegrationRequestParametersDataOneOf13Parameters
	isSet bool
}

func (v NullableCreateIntegrationRequestParametersDataOneOf13Parameters) Get() *CreateIntegrationRequestParametersDataOneOf13Parameters {
	return v.value
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf13Parameters) Set(val *CreateIntegrationRequestParametersDataOneOf13Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIntegrationRequestParametersDataOneOf13Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf13Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIntegrationRequestParametersDataOneOf13Parameters(val *CreateIntegrationRequestParametersDataOneOf13Parameters) *NullableCreateIntegrationRequestParametersDataOneOf13Parameters {
	return &NullableCreateIntegrationRequestParametersDataOneOf13Parameters{value: val, isSet: true}
}

func (v NullableCreateIntegrationRequestParametersDataOneOf13Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf13Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


