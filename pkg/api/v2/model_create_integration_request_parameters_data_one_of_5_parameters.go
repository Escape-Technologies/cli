/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateIntegrationRequestParametersDataOneOf5Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIntegrationRequestParametersDataOneOf5Parameters{}

// CreateIntegrationRequestParametersDataOneOf5Parameters struct for CreateIntegrationRequestParametersDataOneOf5Parameters
type CreateIntegrationRequestParametersDataOneOf5Parameters struct {
	ApiKey string `json:"api_key"`
	WorkspaceName string `json:"workspace_name"`
	RepositoryName string `json:"repository_name"`
	Username *string `json:"username,omitempty"`
	InstanceUrl *string `json:"instance_url,omitempty"`
}

type _CreateIntegrationRequestParametersDataOneOf5Parameters CreateIntegrationRequestParametersDataOneOf5Parameters

// NewCreateIntegrationRequestParametersDataOneOf5Parameters instantiates a new CreateIntegrationRequestParametersDataOneOf5Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIntegrationRequestParametersDataOneOf5Parameters(apiKey string, workspaceName string, repositoryName string) *CreateIntegrationRequestParametersDataOneOf5Parameters {
	this := CreateIntegrationRequestParametersDataOneOf5Parameters{}
	this.ApiKey = apiKey
	this.WorkspaceName = workspaceName
	this.RepositoryName = repositoryName
	return &this
}

// NewCreateIntegrationRequestParametersDataOneOf5ParametersWithDefaults instantiates a new CreateIntegrationRequestParametersDataOneOf5Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIntegrationRequestParametersDataOneOf5ParametersWithDefaults() *CreateIntegrationRequestParametersDataOneOf5Parameters {
	this := CreateIntegrationRequestParametersDataOneOf5Parameters{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) SetApiKey(v string) {
	o.ApiKey = v
}

// GetWorkspaceName returns the WorkspaceName field value
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetWorkspaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspaceName
}

// GetWorkspaceNameOk returns a tuple with the WorkspaceName field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetWorkspaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspaceName, true
}

// SetWorkspaceName sets field value
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) SetWorkspaceName(v string) {
	o.WorkspaceName = v
}

// GetRepositoryName returns the RepositoryName field value
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetRepositoryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoryName
}

// GetRepositoryNameOk returns a tuple with the RepositoryName field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetRepositoryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoryName, true
}

// SetRepositoryName sets field value
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) SetRepositoryName(v string) {
	o.RepositoryName = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) SetUsername(v string) {
	o.Username = &v
}

// GetInstanceUrl returns the InstanceUrl field value if set, zero value otherwise.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetInstanceUrl() string {
	if o == nil || IsNil(o.InstanceUrl) {
		var ret string
		return ret
	}
	return *o.InstanceUrl
}

// GetInstanceUrlOk returns a tuple with the InstanceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) GetInstanceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceUrl) {
		return nil, false
	}
	return o.InstanceUrl, true
}

// HasInstanceUrl returns a boolean if a field has been set.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) HasInstanceUrl() bool {
	if o != nil && !IsNil(o.InstanceUrl) {
		return true
	}

	return false
}

// SetInstanceUrl gets a reference to the given string and assigns it to the InstanceUrl field.
func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) SetInstanceUrl(v string) {
	o.InstanceUrl = &v
}

func (o CreateIntegrationRequestParametersDataOneOf5Parameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIntegrationRequestParametersDataOneOf5Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key"] = o.ApiKey
	toSerialize["workspace_name"] = o.WorkspaceName
	toSerialize["repository_name"] = o.RepositoryName
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.InstanceUrl) {
		toSerialize["instance_url"] = o.InstanceUrl
	}
	return toSerialize, nil
}

func (o *CreateIntegrationRequestParametersDataOneOf5Parameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key",
		"workspace_name",
		"repository_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIntegrationRequestParametersDataOneOf5Parameters := _CreateIntegrationRequestParametersDataOneOf5Parameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIntegrationRequestParametersDataOneOf5Parameters)

	if err != nil {
		return err
	}

	*o = CreateIntegrationRequestParametersDataOneOf5Parameters(varCreateIntegrationRequestParametersDataOneOf5Parameters)

	return err
}

type NullableCreateIntegrationRequestParametersDataOneOf5Parameters struct {
	value *CreateIntegrationRequestParametersDataOneOf5Parameters
	isSet bool
}

func (v NullableCreateIntegrationRequestParametersDataOneOf5Parameters) Get() *CreateIntegrationRequestParametersDataOneOf5Parameters {
	return v.value
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf5Parameters) Set(val *CreateIntegrationRequestParametersDataOneOf5Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIntegrationRequestParametersDataOneOf5Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf5Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIntegrationRequestParametersDataOneOf5Parameters(val *CreateIntegrationRequestParametersDataOneOf5Parameters) *NullableCreateIntegrationRequestParametersDataOneOf5Parameters {
	return &NullableCreateIntegrationRequestParametersDataOneOf5Parameters{value: val, isSet: true}
}

func (v NullableCreateIntegrationRequestParametersDataOneOf5Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf5Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


