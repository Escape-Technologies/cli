/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// Enum40fee81f148ca254301e1d4e8470e9cd the model 'Enum40fee81f148ca254301e1d4e8470e9cd'
type Enum40fee81f148ca254301e1d4e8470e9cd string

// List of Enum_40fee81f148ca254301e1d4e8470e9cd
const (
	ENUM40FEE81F148CA254301E1D4E8470E9CD_ACCESS_CONTROL Enum40fee81f148ca254301e1d4e8470e9cd = "ACCESS_CONTROL"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_CONFIGURATION Enum40fee81f148ca254301e1d4e8470e9cd = "CONFIGURATION"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_INFORMATION_DISCLOSURE Enum40fee81f148ca254301e1d4e8470e9cd = "INFORMATION_DISCLOSURE"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_INJECTION Enum40fee81f148ca254301e1d4e8470e9cd = "INJECTION"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_PROTOCOL Enum40fee81f148ca254301e1d4e8470e9cd = "PROTOCOL"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_REQUEST_FORGERY Enum40fee81f148ca254301e1d4e8470e9cd = "REQUEST_FORGERY"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_RESOURCE_LIMITATION Enum40fee81f148ca254301e1d4e8470e9cd = "RESOURCE_LIMITATION"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_SCHEMA Enum40fee81f148ca254301e1d4e8470e9cd = "SCHEMA"
	ENUM40FEE81F148CA254301E1D4E8470E9CD_CUSTOM Enum40fee81f148ca254301e1d4e8470e9cd = "CUSTOM"
)

// All allowed values of Enum40fee81f148ca254301e1d4e8470e9cd enum
var AllowedEnum40fee81f148ca254301e1d4e8470e9cdEnumValues = []Enum40fee81f148ca254301e1d4e8470e9cd{
	"ACCESS_CONTROL",
	"CONFIGURATION",
	"INFORMATION_DISCLOSURE",
	"INJECTION",
	"PROTOCOL",
	"REQUEST_FORGERY",
	"RESOURCE_LIMITATION",
	"SCHEMA",
	"CUSTOM",
}

func (v *Enum40fee81f148ca254301e1d4e8470e9cd) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum40fee81f148ca254301e1d4e8470e9cd(value)
	for _, existing := range AllowedEnum40fee81f148ca254301e1d4e8470e9cdEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum40fee81f148ca254301e1d4e8470e9cd", value)
}

// NewEnum40fee81f148ca254301e1d4e8470e9cdFromValue returns a pointer to a valid Enum40fee81f148ca254301e1d4e8470e9cd
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum40fee81f148ca254301e1d4e8470e9cdFromValue(v string) (*Enum40fee81f148ca254301e1d4e8470e9cd, error) {
	ev := Enum40fee81f148ca254301e1d4e8470e9cd(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum40fee81f148ca254301e1d4e8470e9cd: valid values are %v", v, AllowedEnum40fee81f148ca254301e1d4e8470e9cdEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum40fee81f148ca254301e1d4e8470e9cd) IsValid() bool {
	for _, existing := range AllowedEnum40fee81f148ca254301e1d4e8470e9cdEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_40fee81f148ca254301e1d4e8470e9cd value
func (v Enum40fee81f148ca254301e1d4e8470e9cd) Ptr() *Enum40fee81f148ca254301e1d4e8470e9cd {
	return &v
}

type NullableEnum40fee81f148ca254301e1d4e8470e9cd struct {
	value *Enum40fee81f148ca254301e1d4e8470e9cd
	isSet bool
}

func (v NullableEnum40fee81f148ca254301e1d4e8470e9cd) Get() *Enum40fee81f148ca254301e1d4e8470e9cd {
	return v.value
}

func (v *NullableEnum40fee81f148ca254301e1d4e8470e9cd) Set(val *Enum40fee81f148ca254301e1d4e8470e9cd) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum40fee81f148ca254301e1d4e8470e9cd) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum40fee81f148ca254301e1d4e8470e9cd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum40fee81f148ca254301e1d4e8470e9cd(val *Enum40fee81f148ca254301e1d4e8470e9cd) *NullableEnum40fee81f148ca254301e1d4e8470e9cd {
	return &NullableEnum40fee81f148ca254301e1d4e8470e9cd{value: val, isSet: true}
}

func (v NullableEnum40fee81f148ca254301e1d4e8470e9cd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum40fee81f148ca254301e1d4e8470e9cd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

