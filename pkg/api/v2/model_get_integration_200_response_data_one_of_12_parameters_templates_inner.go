/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// checks if the GetIntegration200ResponseDataOneOf12ParametersTemplatesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegration200ResponseDataOneOf12ParametersTemplatesInner{}

// GetIntegration200ResponseDataOneOf12ParametersTemplatesInner struct for GetIntegration200ResponseDataOneOf12ParametersTemplatesInner
type GetIntegration200ResponseDataOneOf12ParametersTemplatesInner struct {
	Name string `json:"name"`
	ProjectId string `json:"project_id"`
	IssueType string `json:"issue_type"`
	PropertiesMapping []GetIntegration200ResponseDataOneOf12ParametersTemplatesInnerPropertiesMappingInner `json:"properties_mapping,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetIntegration200ResponseDataOneOf12ParametersTemplatesInner GetIntegration200ResponseDataOneOf12ParametersTemplatesInner

// NewGetIntegration200ResponseDataOneOf12ParametersTemplatesInner instantiates a new GetIntegration200ResponseDataOneOf12ParametersTemplatesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegration200ResponseDataOneOf12ParametersTemplatesInner(name string, projectId string, issueType string) *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner {
	this := GetIntegration200ResponseDataOneOf12ParametersTemplatesInner{}
	this.Name = name
	this.ProjectId = projectId
	this.IssueType = issueType
	return &this
}

// NewGetIntegration200ResponseDataOneOf12ParametersTemplatesInnerWithDefaults instantiates a new GetIntegration200ResponseDataOneOf12ParametersTemplatesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegration200ResponseDataOneOf12ParametersTemplatesInnerWithDefaults() *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner {
	this := GetIntegration200ResponseDataOneOf12ParametersTemplatesInner{}
	return &this
}

// GetName returns the Name field value
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) SetName(v string) {
	o.Name = v
}

// GetProjectId returns the ProjectId field value
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) SetProjectId(v string) {
	o.ProjectId = v
}

// GetIssueType returns the IssueType field value
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetIssueType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssueType
}

// GetIssueTypeOk returns a tuple with the IssueType field value
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetIssueTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssueType, true
}

// SetIssueType sets field value
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) SetIssueType(v string) {
	o.IssueType = v
}

// GetPropertiesMapping returns the PropertiesMapping field value if set, zero value otherwise.
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetPropertiesMapping() []GetIntegration200ResponseDataOneOf12ParametersTemplatesInnerPropertiesMappingInner {
	if o == nil || IsNil(o.PropertiesMapping) {
		var ret []GetIntegration200ResponseDataOneOf12ParametersTemplatesInnerPropertiesMappingInner
		return ret
	}
	return o.PropertiesMapping
}

// GetPropertiesMappingOk returns a tuple with the PropertiesMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) GetPropertiesMappingOk() ([]GetIntegration200ResponseDataOneOf12ParametersTemplatesInnerPropertiesMappingInner, bool) {
	if o == nil || IsNil(o.PropertiesMapping) {
		return nil, false
	}
	return o.PropertiesMapping, true
}

// HasPropertiesMapping returns a boolean if a field has been set.
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) HasPropertiesMapping() bool {
	if o != nil && !IsNil(o.PropertiesMapping) {
		return true
	}

	return false
}

// SetPropertiesMapping gets a reference to the given []GetIntegration200ResponseDataOneOf12ParametersTemplatesInnerPropertiesMappingInner and assigns it to the PropertiesMapping field.
func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) SetPropertiesMapping(v []GetIntegration200ResponseDataOneOf12ParametersTemplatesInnerPropertiesMappingInner) {
	o.PropertiesMapping = v
}

func (o GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["project_id"] = o.ProjectId
	toSerialize["issue_type"] = o.IssueType
	if !IsNil(o.PropertiesMapping) {
		toSerialize["properties_mapping"] = o.PropertiesMapping
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"project_id",
		"issue_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetIntegration200ResponseDataOneOf12ParametersTemplatesInner := _GetIntegration200ResponseDataOneOf12ParametersTemplatesInner{}

	err = json.Unmarshal(data, &varGetIntegration200ResponseDataOneOf12ParametersTemplatesInner)

	if err != nil {
		return err
	}

	*o = GetIntegration200ResponseDataOneOf12ParametersTemplatesInner(varGetIntegration200ResponseDataOneOf12ParametersTemplatesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "issue_type")
		delete(additionalProperties, "properties_mapping")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner struct {
	value *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner
	isSet bool
}

func (v NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner) Get() *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner {
	return v.value
}

func (v *NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner) Set(val *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner(val *GetIntegration200ResponseDataOneOf12ParametersTemplatesInner) *NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner {
	return &NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner{value: val, isSet: true}
}

func (v NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegration200ResponseDataOneOf12ParametersTemplatesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


