/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateApplicationRequestSchemaAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationRequestSchemaAnyOf1{}

// CreateApplicationRequestSchemaAnyOf1 struct for CreateApplicationRequestSchemaAnyOf1
type CreateApplicationRequestSchemaAnyOf1 struct {
	// The ID of the signed URL of the schema to upload (from the /upload/signed-url endpoint)
	Id string `json:"id"`
}

type _CreateApplicationRequestSchemaAnyOf1 CreateApplicationRequestSchemaAnyOf1

// NewCreateApplicationRequestSchemaAnyOf1 instantiates a new CreateApplicationRequestSchemaAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationRequestSchemaAnyOf1(id string) *CreateApplicationRequestSchemaAnyOf1 {
	this := CreateApplicationRequestSchemaAnyOf1{}
	this.Id = id
	return &this
}

// NewCreateApplicationRequestSchemaAnyOf1WithDefaults instantiates a new CreateApplicationRequestSchemaAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationRequestSchemaAnyOf1WithDefaults() *CreateApplicationRequestSchemaAnyOf1 {
	this := CreateApplicationRequestSchemaAnyOf1{}
	return &this
}

// GetId returns the Id field value
func (o *CreateApplicationRequestSchemaAnyOf1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestSchemaAnyOf1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateApplicationRequestSchemaAnyOf1) SetId(v string) {
	o.Id = v
}

func (o CreateApplicationRequestSchemaAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationRequestSchemaAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *CreateApplicationRequestSchemaAnyOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApplicationRequestSchemaAnyOf1 := _CreateApplicationRequestSchemaAnyOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApplicationRequestSchemaAnyOf1)

	if err != nil {
		return err
	}

	*o = CreateApplicationRequestSchemaAnyOf1(varCreateApplicationRequestSchemaAnyOf1)

	return err
}

type NullableCreateApplicationRequestSchemaAnyOf1 struct {
	value *CreateApplicationRequestSchemaAnyOf1
	isSet bool
}

func (v NullableCreateApplicationRequestSchemaAnyOf1) Get() *CreateApplicationRequestSchemaAnyOf1 {
	return v.value
}

func (v *NullableCreateApplicationRequestSchemaAnyOf1) Set(val *CreateApplicationRequestSchemaAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequestSchemaAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequestSchemaAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequestSchemaAnyOf1(val *CreateApplicationRequestSchemaAnyOf1) *NullableCreateApplicationRequestSchemaAnyOf1 {
	return &NullableCreateApplicationRequestSchemaAnyOf1{value: val, isSet: true}
}

func (v NullableCreateApplicationRequestSchemaAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequestSchemaAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


