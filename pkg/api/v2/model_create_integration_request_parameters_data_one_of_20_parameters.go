/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateIntegrationRequestParametersDataOneOf20Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIntegrationRequestParametersDataOneOf20Parameters{}

// CreateIntegrationRequestParametersDataOneOf20Parameters struct for CreateIntegrationRequestParametersDataOneOf20Parameters
type CreateIntegrationRequestParametersDataOneOf20Parameters struct {
	ClientId string `json:"client_id"`
	ClientSecret string `json:"client_secret"`
	TokenUri string `json:"token_uri"`
	ApiEndpoint string `json:"api_endpoint"`
}

type _CreateIntegrationRequestParametersDataOneOf20Parameters CreateIntegrationRequestParametersDataOneOf20Parameters

// NewCreateIntegrationRequestParametersDataOneOf20Parameters instantiates a new CreateIntegrationRequestParametersDataOneOf20Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIntegrationRequestParametersDataOneOf20Parameters(clientId string, clientSecret string, tokenUri string, apiEndpoint string) *CreateIntegrationRequestParametersDataOneOf20Parameters {
	this := CreateIntegrationRequestParametersDataOneOf20Parameters{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.TokenUri = tokenUri
	this.ApiEndpoint = apiEndpoint
	return &this
}

// NewCreateIntegrationRequestParametersDataOneOf20ParametersWithDefaults instantiates a new CreateIntegrationRequestParametersDataOneOf20Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIntegrationRequestParametersDataOneOf20ParametersWithDefaults() *CreateIntegrationRequestParametersDataOneOf20Parameters {
	this := CreateIntegrationRequestParametersDataOneOf20Parameters{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetTokenUri returns the TokenUri field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetTokenUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenUri
}

// GetTokenUriOk returns a tuple with the TokenUri field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetTokenUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenUri, true
}

// SetTokenUri sets field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) SetTokenUri(v string) {
	o.TokenUri = v
}

// GetApiEndpoint returns the ApiEndpoint field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetApiEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiEndpoint
}

// GetApiEndpointOk returns a tuple with the ApiEndpoint field value
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) GetApiEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiEndpoint, true
}

// SetApiEndpoint sets field value
func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) SetApiEndpoint(v string) {
	o.ApiEndpoint = v
}

func (o CreateIntegrationRequestParametersDataOneOf20Parameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIntegrationRequestParametersDataOneOf20Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["token_uri"] = o.TokenUri
	toSerialize["api_endpoint"] = o.ApiEndpoint
	return toSerialize, nil
}

func (o *CreateIntegrationRequestParametersDataOneOf20Parameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"client_secret",
		"token_uri",
		"api_endpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIntegrationRequestParametersDataOneOf20Parameters := _CreateIntegrationRequestParametersDataOneOf20Parameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIntegrationRequestParametersDataOneOf20Parameters)

	if err != nil {
		return err
	}

	*o = CreateIntegrationRequestParametersDataOneOf20Parameters(varCreateIntegrationRequestParametersDataOneOf20Parameters)

	return err
}

type NullableCreateIntegrationRequestParametersDataOneOf20Parameters struct {
	value *CreateIntegrationRequestParametersDataOneOf20Parameters
	isSet bool
}

func (v NullableCreateIntegrationRequestParametersDataOneOf20Parameters) Get() *CreateIntegrationRequestParametersDataOneOf20Parameters {
	return v.value
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf20Parameters) Set(val *CreateIntegrationRequestParametersDataOneOf20Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIntegrationRequestParametersDataOneOf20Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf20Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIntegrationRequestParametersDataOneOf20Parameters(val *CreateIntegrationRequestParametersDataOneOf20Parameters) *NullableCreateIntegrationRequestParametersDataOneOf20Parameters {
	return &NullableCreateIntegrationRequestParametersDataOneOf20Parameters{value: val, isSet: true}
}

func (v NullableCreateIntegrationRequestParametersDataOneOf20Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf20Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


