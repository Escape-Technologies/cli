/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ListDomains200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDomains200ResponseInner{}

// ListDomains200ResponseInner struct for ListDomains200ResponseInner
type ListDomains200ResponseInner struct {
	// The domain ID.
	Id *string `json:"id,omitempty"`
	// The domain name.
	Fqdn *string `json:"fqdn,omitempty"`
	// The date and time the domain was created.
	CreatedAt time.Time `json:"createdAt"`
	// The number of services associated with the domain.
	ServicesCount *int `json:"servicesCount,omitempty"`
	// If the domain is deleting
	ScheduledForDeletion *bool `json:"scheduledForDeletion,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListDomains200ResponseInner ListDomains200ResponseInner

// NewListDomains200ResponseInner instantiates a new ListDomains200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDomains200ResponseInner(createdAt time.Time) *ListDomains200ResponseInner {
	this := ListDomains200ResponseInner{}
	var id string = "00000000-0000-0000-0000-000000000000"
	this.Id = &id
	var fqdn string = "example.com"
	this.Fqdn = &fqdn
	this.CreatedAt = createdAt
	var servicesCount int = 1
	this.ServicesCount = &servicesCount
	var scheduledForDeletion bool = false
	this.ScheduledForDeletion = &scheduledForDeletion
	return &this
}

// NewListDomains200ResponseInnerWithDefaults instantiates a new ListDomains200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDomains200ResponseInnerWithDefaults() *ListDomains200ResponseInner {
	this := ListDomains200ResponseInner{}
	var id string = "00000000-0000-0000-0000-000000000000"
	this.Id = &id
	var fqdn string = "example.com"
	this.Fqdn = &fqdn
	var servicesCount int = 1
	this.ServicesCount = &servicesCount
	var scheduledForDeletion bool = false
	this.ScheduledForDeletion = &scheduledForDeletion
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListDomains200ResponseInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListDomains200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListDomains200ResponseInner) SetId(v string) {
	o.Id = &v
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *ListDomains200ResponseInner) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *ListDomains200ResponseInner) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *ListDomains200ResponseInner) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ListDomains200ResponseInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ListDomains200ResponseInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetServicesCount returns the ServicesCount field value if set, zero value otherwise.
func (o *ListDomains200ResponseInner) GetServicesCount() int {
	if o == nil || IsNil(o.ServicesCount) {
		var ret int
		return ret
	}
	return *o.ServicesCount
}

// GetServicesCountOk returns a tuple with the ServicesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetServicesCountOk() (*int, bool) {
	if o == nil || IsNil(o.ServicesCount) {
		return nil, false
	}
	return o.ServicesCount, true
}

// HasServicesCount returns a boolean if a field has been set.
func (o *ListDomains200ResponseInner) HasServicesCount() bool {
	if o != nil && !IsNil(o.ServicesCount) {
		return true
	}

	return false
}

// SetServicesCount gets a reference to the given int and assigns it to the ServicesCount field.
func (o *ListDomains200ResponseInner) SetServicesCount(v int) {
	o.ServicesCount = &v
}

// GetScheduledForDeletion returns the ScheduledForDeletion field value if set, zero value otherwise.
func (o *ListDomains200ResponseInner) GetScheduledForDeletion() bool {
	if o == nil || IsNil(o.ScheduledForDeletion) {
		var ret bool
		return ret
	}
	return *o.ScheduledForDeletion
}

// GetScheduledForDeletionOk returns a tuple with the ScheduledForDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetScheduledForDeletionOk() (*bool, bool) {
	if o == nil || IsNil(o.ScheduledForDeletion) {
		return nil, false
	}
	return o.ScheduledForDeletion, true
}

// HasScheduledForDeletion returns a boolean if a field has been set.
func (o *ListDomains200ResponseInner) HasScheduledForDeletion() bool {
	if o != nil && !IsNil(o.ScheduledForDeletion) {
		return true
	}

	return false
}

// SetScheduledForDeletion gets a reference to the given bool and assigns it to the ScheduledForDeletion field.
func (o *ListDomains200ResponseInner) SetScheduledForDeletion(v bool) {
	o.ScheduledForDeletion = &v
}

func (o ListDomains200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDomains200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.ServicesCount) {
		toSerialize["servicesCount"] = o.ServicesCount
	}
	if !IsNil(o.ScheduledForDeletion) {
		toSerialize["scheduledForDeletion"] = o.ScheduledForDeletion
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListDomains200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListDomains200ResponseInner := _ListDomains200ResponseInner{}

	err = json.Unmarshal(data, &varListDomains200ResponseInner)

	if err != nil {
		return err
	}

	*o = ListDomains200ResponseInner(varListDomains200ResponseInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "fqdn")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "servicesCount")
		delete(additionalProperties, "scheduledForDeletion")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListDomains200ResponseInner struct {
	value *ListDomains200ResponseInner
	isSet bool
}

func (v NullableListDomains200ResponseInner) Get() *ListDomains200ResponseInner {
	return v.value
}

func (v *NullableListDomains200ResponseInner) Set(val *ListDomains200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListDomains200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListDomains200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDomains200ResponseInner(val *ListDomains200ResponseInner) *NullableListDomains200ResponseInner {
	return &NullableListDomains200ResponseInner{value: val, isSet: true}
}

func (v NullableListDomains200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDomains200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


