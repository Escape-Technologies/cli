/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// EnumF49ae39eda8cba01ff7b96b9a5961c05 the model 'EnumF49ae39eda8cba01ff7b96b9a5961c05'
type EnumF49ae39eda8cba01ff7b96b9a5961c05 string

// List of Enum_f49ae39eda8cba01ff7b96b9a5961c05
const (
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__16 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "16"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__20 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "20"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__22 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "22"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__78 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "78"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__79 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "79"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__89 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "89"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__93 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "93"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__94 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "94"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__116 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "116"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__119 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "119"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__200 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "200"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__209 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "209"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__215 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "215"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__264 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "264"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__284 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "284"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__285 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "285"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__287 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "287"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__295 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "295"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__306 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "306"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__307 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "307"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__319 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "319"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__326 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "326"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__330 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "330"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__346 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "346"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__347 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "347"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__352 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "352"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__354 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "354"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__400 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "400"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__444 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "444"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__453 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "453"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__489 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "489"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__502 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "502"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__522 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "522"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__523 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "523"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__524 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "524"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__548 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "548"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__551 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "551"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__573 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "573"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__601 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "601"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__611 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "611"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__614 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "614"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__676 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "676"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__704 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "704"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__710 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "710"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__730 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "730"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__732 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "732"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__758 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "758"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__770 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "770"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__829 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "829"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__862 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "862"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__863 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "863"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__915 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "915"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__918 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "918"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__942 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "942"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__943 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "943"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__1029 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "1029"
	ENUMF49AE39EDA8CBA01FF7B96B9A5961C05__1195 EnumF49ae39eda8cba01ff7b96b9a5961c05 = "1195"
)

// All allowed values of EnumF49ae39eda8cba01ff7b96b9a5961c05 enum
var AllowedEnumF49ae39eda8cba01ff7b96b9a5961c05EnumValues = []EnumF49ae39eda8cba01ff7b96b9a5961c05{
	"16",
	"20",
	"22",
	"78",
	"79",
	"89",
	"93",
	"94",
	"116",
	"119",
	"200",
	"209",
	"215",
	"264",
	"284",
	"285",
	"287",
	"295",
	"306",
	"307",
	"319",
	"326",
	"330",
	"346",
	"347",
	"352",
	"354",
	"400",
	"444",
	"453",
	"489",
	"502",
	"522",
	"523",
	"524",
	"548",
	"551",
	"573",
	"601",
	"611",
	"614",
	"676",
	"704",
	"710",
	"730",
	"732",
	"758",
	"770",
	"829",
	"862",
	"863",
	"915",
	"918",
	"942",
	"943",
	"1029",
	"1195",
}

func (v *EnumF49ae39eda8cba01ff7b96b9a5961c05) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumF49ae39eda8cba01ff7b96b9a5961c05(value)
	for _, existing := range AllowedEnumF49ae39eda8cba01ff7b96b9a5961c05EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumF49ae39eda8cba01ff7b96b9a5961c05", value)
}

// NewEnumF49ae39eda8cba01ff7b96b9a5961c05FromValue returns a pointer to a valid EnumF49ae39eda8cba01ff7b96b9a5961c05
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumF49ae39eda8cba01ff7b96b9a5961c05FromValue(v string) (*EnumF49ae39eda8cba01ff7b96b9a5961c05, error) {
	ev := EnumF49ae39eda8cba01ff7b96b9a5961c05(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumF49ae39eda8cba01ff7b96b9a5961c05: valid values are %v", v, AllowedEnumF49ae39eda8cba01ff7b96b9a5961c05EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumF49ae39eda8cba01ff7b96b9a5961c05) IsValid() bool {
	for _, existing := range AllowedEnumF49ae39eda8cba01ff7b96b9a5961c05EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_f49ae39eda8cba01ff7b96b9a5961c05 value
func (v EnumF49ae39eda8cba01ff7b96b9a5961c05) Ptr() *EnumF49ae39eda8cba01ff7b96b9a5961c05 {
	return &v
}

type NullableEnumF49ae39eda8cba01ff7b96b9a5961c05 struct {
	value *EnumF49ae39eda8cba01ff7b96b9a5961c05
	isSet bool
}

func (v NullableEnumF49ae39eda8cba01ff7b96b9a5961c05) Get() *EnumF49ae39eda8cba01ff7b96b9a5961c05 {
	return v.value
}

func (v *NullableEnumF49ae39eda8cba01ff7b96b9a5961c05) Set(val *EnumF49ae39eda8cba01ff7b96b9a5961c05) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumF49ae39eda8cba01ff7b96b9a5961c05) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumF49ae39eda8cba01ff7b96b9a5961c05) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumF49ae39eda8cba01ff7b96b9a5961c05(val *EnumF49ae39eda8cba01ff7b96b9a5961c05) *NullableEnumF49ae39eda8cba01ff7b96b9a5961c05 {
	return &NullableEnumF49ae39eda8cba01ff7b96b9a5961c05{value: val, isSet: true}
}

func (v NullableEnumF49ae39eda8cba01ff7b96b9a5961c05) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumF49ae39eda8cba01ff7b96b9a5961c05) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

