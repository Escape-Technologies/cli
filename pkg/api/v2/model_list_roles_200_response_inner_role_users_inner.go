/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListRoles200ResponseInnerRoleUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRoles200ResponseInnerRoleUsersInner{}

// ListRoles200ResponseInnerRoleUsersInner struct for ListRoles200ResponseInnerRoleUsersInner
type ListRoles200ResponseInnerRoleUsersInner struct {
	User ListRoles200ResponseInnerRoleUsersInnerUser `json:"user"`
}

type _ListRoles200ResponseInnerRoleUsersInner ListRoles200ResponseInnerRoleUsersInner

// NewListRoles200ResponseInnerRoleUsersInner instantiates a new ListRoles200ResponseInnerRoleUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRoles200ResponseInnerRoleUsersInner(user ListRoles200ResponseInnerRoleUsersInnerUser) *ListRoles200ResponseInnerRoleUsersInner {
	this := ListRoles200ResponseInnerRoleUsersInner{}
	this.User = user
	return &this
}

// NewListRoles200ResponseInnerRoleUsersInnerWithDefaults instantiates a new ListRoles200ResponseInnerRoleUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRoles200ResponseInnerRoleUsersInnerWithDefaults() *ListRoles200ResponseInnerRoleUsersInner {
	this := ListRoles200ResponseInnerRoleUsersInner{}
	return &this
}

// GetUser returns the User field value
func (o *ListRoles200ResponseInnerRoleUsersInner) GetUser() ListRoles200ResponseInnerRoleUsersInnerUser {
	if o == nil {
		var ret ListRoles200ResponseInnerRoleUsersInnerUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *ListRoles200ResponseInnerRoleUsersInner) GetUserOk() (*ListRoles200ResponseInnerRoleUsersInnerUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *ListRoles200ResponseInnerRoleUsersInner) SetUser(v ListRoles200ResponseInnerRoleUsersInnerUser) {
	o.User = v
}

func (o ListRoles200ResponseInnerRoleUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRoles200ResponseInnerRoleUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	return toSerialize, nil
}

func (o *ListRoles200ResponseInnerRoleUsersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListRoles200ResponseInnerRoleUsersInner := _ListRoles200ResponseInnerRoleUsersInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListRoles200ResponseInnerRoleUsersInner)

	if err != nil {
		return err
	}

	*o = ListRoles200ResponseInnerRoleUsersInner(varListRoles200ResponseInnerRoleUsersInner)

	return err
}

type NullableListRoles200ResponseInnerRoleUsersInner struct {
	value *ListRoles200ResponseInnerRoleUsersInner
	isSet bool
}

func (v NullableListRoles200ResponseInnerRoleUsersInner) Get() *ListRoles200ResponseInnerRoleUsersInner {
	return v.value
}

func (v *NullableListRoles200ResponseInnerRoleUsersInner) Set(val *ListRoles200ResponseInnerRoleUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListRoles200ResponseInnerRoleUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListRoles200ResponseInnerRoleUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRoles200ResponseInnerRoleUsersInner(val *ListRoles200ResponseInnerRoleUsersInner) *NullableListRoles200ResponseInnerRoleUsersInner {
	return &NullableListRoles200ResponseInnerRoleUsersInner{value: val, isSet: true}
}

func (v NullableListRoles200ResponseInnerRoleUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRoles200ResponseInnerRoleUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


