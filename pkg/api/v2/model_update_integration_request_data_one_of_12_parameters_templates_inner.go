/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner{}

// UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner struct for UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner
type UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner struct {
	Name string `json:"name"`
	ProjectId string `json:"project_id"`
	IssueType string `json:"issue_type"`
	PropertiesMapping []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerPropertiesMappingInner `json:"properties_mapping,omitempty"`
}

type _UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner

// NewUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner instantiates a new UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner(name string, projectId string, issueType string) *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner {
	this := UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner{}
	this.Name = name
	this.ProjectId = projectId
	this.IssueType = issueType
	return &this
}

// NewUpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerWithDefaults instantiates a new UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerWithDefaults() *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner {
	this := UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) SetName(v string) {
	o.Name = v
}

// GetProjectId returns the ProjectId field value
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) SetProjectId(v string) {
	o.ProjectId = v
}

// GetIssueType returns the IssueType field value
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetIssueType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssueType
}

// GetIssueTypeOk returns a tuple with the IssueType field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetIssueTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssueType, true
}

// SetIssueType sets field value
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) SetIssueType(v string) {
	o.IssueType = v
}

// GetPropertiesMapping returns the PropertiesMapping field value if set, zero value otherwise.
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetPropertiesMapping() []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerPropertiesMappingInner {
	if o == nil || IsNil(o.PropertiesMapping) {
		var ret []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerPropertiesMappingInner
		return ret
	}
	return o.PropertiesMapping
}

// GetPropertiesMappingOk returns a tuple with the PropertiesMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) GetPropertiesMappingOk() ([]UpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerPropertiesMappingInner, bool) {
	if o == nil || IsNil(o.PropertiesMapping) {
		return nil, false
	}
	return o.PropertiesMapping, true
}

// HasPropertiesMapping returns a boolean if a field has been set.
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) HasPropertiesMapping() bool {
	if o != nil && !IsNil(o.PropertiesMapping) {
		return true
	}

	return false
}

// SetPropertiesMapping gets a reference to the given []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerPropertiesMappingInner and assigns it to the PropertiesMapping field.
func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) SetPropertiesMapping(v []UpdateIntegrationRequestDataOneOf12ParametersTemplatesInnerPropertiesMappingInner) {
	o.PropertiesMapping = v
}

func (o UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["project_id"] = o.ProjectId
	toSerialize["issue_type"] = o.IssueType
	if !IsNil(o.PropertiesMapping) {
		toSerialize["properties_mapping"] = o.PropertiesMapping
	}
	return toSerialize, nil
}

func (o *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"project_id",
		"issue_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner := _UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner)

	if err != nil {
		return err
	}

	*o = UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner(varUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner)

	return err
}

type NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner struct {
	value *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner
	isSet bool
}

func (v NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) Get() *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner {
	return v.value
}

func (v *NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) Set(val *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner(val *UpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) *NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner {
	return &NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner{value: val, isSet: true}
}

func (v NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIntegrationRequestDataOneOf12ParametersTemplatesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


