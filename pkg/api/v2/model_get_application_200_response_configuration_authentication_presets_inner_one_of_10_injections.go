/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)


// GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections struct for GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections
type GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections struct {
	ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner *[]GetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner
	ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 *[]GetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	// try to unmarshal JSON data into ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner
	err = json.Unmarshal(data, &dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner);
	if err == nil {
		jsonArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner, _ := json.Marshal(dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner)
		if string(jsonArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner) == "{}" { // empty struct
			dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner = nil
		} else {
			return nil // data stored in dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner, return on the first match
		}
	} else {
		dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner = nil
	}

	// try to unmarshal JSON data into ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1
	err = json.Unmarshal(data, &dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1);
	if err == nil {
		jsonArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1, _ := json.Marshal(dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1)
		if string(jsonArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1) == "{}" { // empty struct
			dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 = nil
		} else {
			return nil // data stored in dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1, return on the first match
		}
	} else {
		dst.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) MarshalJSON() ([]byte, error) {
	if src.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner != nil {
		return json.Marshal(&src.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner)
	}

	if src.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 != nil {
		return json.Marshal(&src.ArrayOfGetApplication200ResponseConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections struct {
	value *GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections
	isSet bool
}

func (v NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) Get() *GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections {
	return v.value
}

func (v *NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) Set(val *GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections(val *GetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) *NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections {
	return &NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections{value: val, isSet: true}
}

func (v NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApplication200ResponseConfigurationAuthenticationPresetsInnerOneOf10Injections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


