/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist{}

// CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist struct for CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist
type CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist struct {
	Namespaces []string `json:"namespaces,omitempty"`
}

// NewCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist instantiates a new CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist() *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist {
	this := CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist{}
	return &this
}

// NewCreateIntegrationRequestParametersDataOneOf15ParametersBlacklistWithDefaults instantiates a new CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIntegrationRequestParametersDataOneOf15ParametersBlacklistWithDefaults() *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist {
	this := CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist{}
	return &this
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) GetNamespaces() []string {
	if o == nil || IsNil(o.Namespaces) {
		var ret []string
		return ret
	}
	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) GetNamespacesOk() ([]string, bool) {
	if o == nil || IsNil(o.Namespaces) {
		return nil, false
	}
	return o.Namespaces, true
}

// HasNamespaces returns a boolean if a field has been set.
func (o *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) HasNamespaces() bool {
	if o != nil && !IsNil(o.Namespaces) {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given []string and assigns it to the Namespaces field.
func (o *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) SetNamespaces(v []string) {
	o.Namespaces = v
}

func (o CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Namespaces) {
		toSerialize["namespaces"] = o.Namespaces
	}
	return toSerialize, nil
}

type NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist struct {
	value *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist
	isSet bool
}

func (v NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) Get() *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist {
	return v.value
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) Set(val *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist(val *CreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) *NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist {
	return &NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist{value: val, isSet: true}
}

func (v NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIntegrationRequestParametersDataOneOf15ParametersBlacklist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


