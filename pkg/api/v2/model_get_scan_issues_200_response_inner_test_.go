/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetScanIssues200ResponseInnerTest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetScanIssues200ResponseInnerTest{}

// GetScanIssues200ResponseInnerTest struct for GetScanIssues200ResponseInnerTest
type GetScanIssues200ResponseInnerTest struct {
	Category string `json:"category"`
	SecurityTestUid string `json:"securityTestUid"`
	Meta GetScanIssues200ResponseInnerTestMeta `json:"meta"`
}

type _GetScanIssues200ResponseInnerTest GetScanIssues200ResponseInnerTest

// NewGetScanIssues200ResponseInnerTest instantiates a new GetScanIssues200ResponseInnerTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetScanIssues200ResponseInnerTest(category string, securityTestUid string, meta GetScanIssues200ResponseInnerTestMeta) *GetScanIssues200ResponseInnerTest {
	this := GetScanIssues200ResponseInnerTest{}
	this.Category = category
	this.SecurityTestUid = securityTestUid
	this.Meta = meta
	return &this
}

// NewGetScanIssues200ResponseInnerTestWithDefaults instantiates a new GetScanIssues200ResponseInnerTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetScanIssues200ResponseInnerTestWithDefaults() *GetScanIssues200ResponseInnerTest {
	this := GetScanIssues200ResponseInnerTest{}
	return &this
}

// GetCategory returns the Category field value
func (o *GetScanIssues200ResponseInnerTest) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *GetScanIssues200ResponseInnerTest) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *GetScanIssues200ResponseInnerTest) SetCategory(v string) {
	o.Category = v
}

// GetSecurityTestUid returns the SecurityTestUid field value
func (o *GetScanIssues200ResponseInnerTest) GetSecurityTestUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityTestUid
}

// GetSecurityTestUidOk returns a tuple with the SecurityTestUid field value
// and a boolean to check if the value has been set.
func (o *GetScanIssues200ResponseInnerTest) GetSecurityTestUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityTestUid, true
}

// SetSecurityTestUid sets field value
func (o *GetScanIssues200ResponseInnerTest) SetSecurityTestUid(v string) {
	o.SecurityTestUid = v
}

// GetMeta returns the Meta field value
func (o *GetScanIssues200ResponseInnerTest) GetMeta() GetScanIssues200ResponseInnerTestMeta {
	if o == nil {
		var ret GetScanIssues200ResponseInnerTestMeta
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *GetScanIssues200ResponseInnerTest) GetMetaOk() (*GetScanIssues200ResponseInnerTestMeta, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *GetScanIssues200ResponseInnerTest) SetMeta(v GetScanIssues200ResponseInnerTestMeta) {
	o.Meta = v
}

func (o GetScanIssues200ResponseInnerTest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetScanIssues200ResponseInnerTest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["securityTestUid"] = o.SecurityTestUid
	toSerialize["meta"] = o.Meta
	return toSerialize, nil
}

func (o *GetScanIssues200ResponseInnerTest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category",
		"securityTestUid",
		"meta",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetScanIssues200ResponseInnerTest := _GetScanIssues200ResponseInnerTest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetScanIssues200ResponseInnerTest)

	if err != nil {
		return err
	}

	*o = GetScanIssues200ResponseInnerTest(varGetScanIssues200ResponseInnerTest)

	return err
}

type NullableGetScanIssues200ResponseInnerTest struct {
	value *GetScanIssues200ResponseInnerTest
	isSet bool
}

func (v NullableGetScanIssues200ResponseInnerTest) Get() *GetScanIssues200ResponseInnerTest {
	return v.value
}

func (v *NullableGetScanIssues200ResponseInnerTest) Set(val *GetScanIssues200ResponseInnerTest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScanIssues200ResponseInnerTest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScanIssues200ResponseInnerTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScanIssues200ResponseInnerTest(val *GetScanIssues200ResponseInnerTest) *NullableGetScanIssues200ResponseInnerTest {
	return &NullableGetScanIssues200ResponseInnerTest{value: val, isSet: true}
}

func (v NullableGetScanIssues200ResponseInnerTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScanIssues200ResponseInnerTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


