/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// Enum80229dc8a40727ab101f9b3e03267361 the model 'Enum80229dc8a40727ab101f9b3e03267361'
type Enum80229dc8a40727ab101f9b3e03267361 string

// List of Enum_80229dc8a40727ab101f9b3e03267361
const (
	ENUM80229DC8A40727AB101F9B3E03267361_LLM01 Enum80229dc8a40727ab101f9b3e03267361 = "LLM01"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM02 Enum80229dc8a40727ab101f9b3e03267361 = "LLM02"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM03 Enum80229dc8a40727ab101f9b3e03267361 = "LLM03"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM04 Enum80229dc8a40727ab101f9b3e03267361 = "LLM04"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM05 Enum80229dc8a40727ab101f9b3e03267361 = "LLM05"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM06 Enum80229dc8a40727ab101f9b3e03267361 = "LLM06"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM07 Enum80229dc8a40727ab101f9b3e03267361 = "LLM07"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM08 Enum80229dc8a40727ab101f9b3e03267361 = "LLM08"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM09 Enum80229dc8a40727ab101f9b3e03267361 = "LLM09"
	ENUM80229DC8A40727AB101F9B3E03267361_LLM10 Enum80229dc8a40727ab101f9b3e03267361 = "LLM10"
)

// All allowed values of Enum80229dc8a40727ab101f9b3e03267361 enum
var AllowedEnum80229dc8a40727ab101f9b3e03267361EnumValues = []Enum80229dc8a40727ab101f9b3e03267361{
	"LLM01",
	"LLM02",
	"LLM03",
	"LLM04",
	"LLM05",
	"LLM06",
	"LLM07",
	"LLM08",
	"LLM09",
	"LLM10",
}

func (v *Enum80229dc8a40727ab101f9b3e03267361) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum80229dc8a40727ab101f9b3e03267361(value)
	for _, existing := range AllowedEnum80229dc8a40727ab101f9b3e03267361EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum80229dc8a40727ab101f9b3e03267361", value)
}

// NewEnum80229dc8a40727ab101f9b3e03267361FromValue returns a pointer to a valid Enum80229dc8a40727ab101f9b3e03267361
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum80229dc8a40727ab101f9b3e03267361FromValue(v string) (*Enum80229dc8a40727ab101f9b3e03267361, error) {
	ev := Enum80229dc8a40727ab101f9b3e03267361(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum80229dc8a40727ab101f9b3e03267361: valid values are %v", v, AllowedEnum80229dc8a40727ab101f9b3e03267361EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum80229dc8a40727ab101f9b3e03267361) IsValid() bool {
	for _, existing := range AllowedEnum80229dc8a40727ab101f9b3e03267361EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_80229dc8a40727ab101f9b3e03267361 value
func (v Enum80229dc8a40727ab101f9b3e03267361) Ptr() *Enum80229dc8a40727ab101f9b3e03267361 {
	return &v
}

type NullableEnum80229dc8a40727ab101f9b3e03267361 struct {
	value *Enum80229dc8a40727ab101f9b3e03267361
	isSet bool
}

func (v NullableEnum80229dc8a40727ab101f9b3e03267361) Get() *Enum80229dc8a40727ab101f9b3e03267361 {
	return v.value
}

func (v *NullableEnum80229dc8a40727ab101f9b3e03267361) Set(val *Enum80229dc8a40727ab101f9b3e03267361) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum80229dc8a40727ab101f9b3e03267361) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum80229dc8a40727ab101f9b3e03267361) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum80229dc8a40727ab101f9b3e03267361(val *Enum80229dc8a40727ab101f9b3e03267361) *NullableEnum80229dc8a40727ab101f9b3e03267361 {
	return &NullableEnum80229dc8a40727ab101f9b3e03267361{value: val, isSet: true}
}

func (v NullableEnum80229dc8a40727ab101f9b3e03267361) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum80229dc8a40727ab101f9b3e03267361) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

