/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the FrontendConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrontendConfiguration{}

// FrontendConfiguration struct for FrontendConfiguration
type FrontendConfiguration struct {
	Authentication *FrontendConfigurationAuthentication `json:"authentication,omitempty"`
	Client *FrontendConfigurationClient `json:"client,omitempty"`
	Scan *FrontendConfigurationScan `json:"scan,omitempty"`
	Internal *FrontendConfigurationInternal `json:"internal,omitempty"`
	CustomRules []FrontendConfigurationCustomRulesInner `json:"custom_rules,omitempty"`
	Checks map[string]interface{} `json:"checks,omitempty"`
	Url *string `json:"url,omitempty"`
	UndefinedBlobStr *string `json:"undefined_blob_str,omitempty"`
	AuthenticationId *string `json:"authentication_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FrontendConfiguration FrontendConfiguration

// NewFrontendConfiguration instantiates a new FrontendConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrontendConfiguration() *FrontendConfiguration {
	this := FrontendConfiguration{}
	return &this
}

// NewFrontendConfigurationWithDefaults instantiates a new FrontendConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrontendConfigurationWithDefaults() *FrontendConfiguration {
	this := FrontendConfiguration{}
	return &this
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetAuthentication() FrontendConfigurationAuthentication {
	if o == nil || IsNil(o.Authentication) {
		var ret FrontendConfigurationAuthentication
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetAuthenticationOk() (*FrontendConfigurationAuthentication, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given FrontendConfigurationAuthentication and assigns it to the Authentication field.
func (o *FrontendConfiguration) SetAuthentication(v FrontendConfigurationAuthentication) {
	o.Authentication = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetClient() FrontendConfigurationClient {
	if o == nil || IsNil(o.Client) {
		var ret FrontendConfigurationClient
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetClientOk() (*FrontendConfigurationClient, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given FrontendConfigurationClient and assigns it to the Client field.
func (o *FrontendConfiguration) SetClient(v FrontendConfigurationClient) {
	o.Client = &v
}

// GetScan returns the Scan field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetScan() FrontendConfigurationScan {
	if o == nil || IsNil(o.Scan) {
		var ret FrontendConfigurationScan
		return ret
	}
	return *o.Scan
}

// GetScanOk returns a tuple with the Scan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetScanOk() (*FrontendConfigurationScan, bool) {
	if o == nil || IsNil(o.Scan) {
		return nil, false
	}
	return o.Scan, true
}

// HasScan returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasScan() bool {
	if o != nil && !IsNil(o.Scan) {
		return true
	}

	return false
}

// SetScan gets a reference to the given FrontendConfigurationScan and assigns it to the Scan field.
func (o *FrontendConfiguration) SetScan(v FrontendConfigurationScan) {
	o.Scan = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetInternal() FrontendConfigurationInternal {
	if o == nil || IsNil(o.Internal) {
		var ret FrontendConfigurationInternal
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetInternalOk() (*FrontendConfigurationInternal, bool) {
	if o == nil || IsNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasInternal() bool {
	if o != nil && !IsNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given FrontendConfigurationInternal and assigns it to the Internal field.
func (o *FrontendConfiguration) SetInternal(v FrontendConfigurationInternal) {
	o.Internal = &v
}

// GetCustomRules returns the CustomRules field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetCustomRules() []FrontendConfigurationCustomRulesInner {
	if o == nil || IsNil(o.CustomRules) {
		var ret []FrontendConfigurationCustomRulesInner
		return ret
	}
	return o.CustomRules
}

// GetCustomRulesOk returns a tuple with the CustomRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetCustomRulesOk() ([]FrontendConfigurationCustomRulesInner, bool) {
	if o == nil || IsNil(o.CustomRules) {
		return nil, false
	}
	return o.CustomRules, true
}

// HasCustomRules returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasCustomRules() bool {
	if o != nil && !IsNil(o.CustomRules) {
		return true
	}

	return false
}

// SetCustomRules gets a reference to the given []FrontendConfigurationCustomRulesInner and assigns it to the CustomRules field.
func (o *FrontendConfiguration) SetCustomRules(v []FrontendConfigurationCustomRulesInner) {
	o.CustomRules = v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetChecks() map[string]interface{} {
	if o == nil || IsNil(o.Checks) {
		var ret map[string]interface{}
		return ret
	}
	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetChecksOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Checks) {
		return map[string]interface{}{}, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasChecks() bool {
	if o != nil && !IsNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given map[string]interface{} and assigns it to the Checks field.
func (o *FrontendConfiguration) SetChecks(v map[string]interface{}) {
	o.Checks = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FrontendConfiguration) SetUrl(v string) {
	o.Url = &v
}

// GetUndefinedBlobStr returns the UndefinedBlobStr field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetUndefinedBlobStr() string {
	if o == nil || IsNil(o.UndefinedBlobStr) {
		var ret string
		return ret
	}
	return *o.UndefinedBlobStr
}

// GetUndefinedBlobStrOk returns a tuple with the UndefinedBlobStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetUndefinedBlobStrOk() (*string, bool) {
	if o == nil || IsNil(o.UndefinedBlobStr) {
		return nil, false
	}
	return o.UndefinedBlobStr, true
}

// HasUndefinedBlobStr returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasUndefinedBlobStr() bool {
	if o != nil && !IsNil(o.UndefinedBlobStr) {
		return true
	}

	return false
}

// SetUndefinedBlobStr gets a reference to the given string and assigns it to the UndefinedBlobStr field.
func (o *FrontendConfiguration) SetUndefinedBlobStr(v string) {
	o.UndefinedBlobStr = &v
}

// GetAuthenticationId returns the AuthenticationId field value if set, zero value otherwise.
func (o *FrontendConfiguration) GetAuthenticationId() string {
	if o == nil || IsNil(o.AuthenticationId) {
		var ret string
		return ret
	}
	return *o.AuthenticationId
}

// GetAuthenticationIdOk returns a tuple with the AuthenticationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontendConfiguration) GetAuthenticationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationId) {
		return nil, false
	}
	return o.AuthenticationId, true
}

// HasAuthenticationId returns a boolean if a field has been set.
func (o *FrontendConfiguration) HasAuthenticationId() bool {
	if o != nil && !IsNil(o.AuthenticationId) {
		return true
	}

	return false
}

// SetAuthenticationId gets a reference to the given string and assigns it to the AuthenticationId field.
func (o *FrontendConfiguration) SetAuthenticationId(v string) {
	o.AuthenticationId = &v
}

func (o FrontendConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrontendConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !IsNil(o.Scan) {
		toSerialize["scan"] = o.Scan
	}
	if !IsNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	if !IsNil(o.CustomRules) {
		toSerialize["custom_rules"] = o.CustomRules
	}
	if !IsNil(o.Checks) {
		toSerialize["checks"] = o.Checks
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UndefinedBlobStr) {
		toSerialize["undefined_blob_str"] = o.UndefinedBlobStr
	}
	if !IsNil(o.AuthenticationId) {
		toSerialize["authentication_id"] = o.AuthenticationId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FrontendConfiguration) UnmarshalJSON(data []byte) (err error) {
	varFrontendConfiguration := _FrontendConfiguration{}

	err = json.Unmarshal(data, &varFrontendConfiguration)

	if err != nil {
		return err
	}

	*o = FrontendConfiguration(varFrontendConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authentication")
		delete(additionalProperties, "client")
		delete(additionalProperties, "scan")
		delete(additionalProperties, "internal")
		delete(additionalProperties, "custom_rules")
		delete(additionalProperties, "checks")
		delete(additionalProperties, "url")
		delete(additionalProperties, "undefined_blob_str")
		delete(additionalProperties, "authentication_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFrontendConfiguration struct {
	value *FrontendConfiguration
	isSet bool
}

func (v NullableFrontendConfiguration) Get() *FrontendConfiguration {
	return v.value
}

func (v *NullableFrontendConfiguration) Set(val *FrontendConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableFrontendConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableFrontendConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrontendConfiguration(val *FrontendConfiguration) *NullableFrontendConfiguration {
	return &NullableFrontendConfiguration{value: val, isSet: true}
}

func (v NullableFrontendConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrontendConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


