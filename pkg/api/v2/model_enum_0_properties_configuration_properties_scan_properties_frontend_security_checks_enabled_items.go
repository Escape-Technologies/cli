/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS the model 'ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS'
type ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS string

// List of ENUM_0_PROPERTIES_CONFIGURATION_PROPERTIES_SCAN_PROPERTIES_FRONTEND_SECURITY_CHECKS_ENABLED_ITEMS
const (
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS_ALL ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS = "ALL"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS_NONE ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS = "NONE"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS_API_CHECKS ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS = "API_CHECKS"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS_ACTIVE_PAGE_CHECKS ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS = "ACTIVE_PAGE_CHECKS"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS_PASSIVE_PAGE_CHECKS ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS = "PASSIVE_PAGE_CHECKS"
	ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS_NETWORK_CHECKS ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS = "NETWORK_CHECKS"
)

// All allowed values of ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS enum
var AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMSEnumValues = []ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS{
	"ALL",
	"NONE",
	"API_CHECKS",
	"ACTIVE_PAGE_CHECKS",
	"PASSIVE_PAGE_CHECKS",
	"NETWORK_CHECKS",
}

func (v *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS(value)
	for _, existing := range AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMSEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS", value)
}

// NewENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMSFromValue returns a pointer to a valid ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMSFromValue(v string) (*ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS, error) {
	ev := ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS: valid values are %v", v, AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMSEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) IsValid() bool {
	for _, existing := range AllowedENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMSEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ENUM_0_PROPERTIES_CONFIGURATION_PROPERTIES_SCAN_PROPERTIES_FRONTEND_SECURITY_CHECKS_ENABLED_ITEMS value
func (v ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) Ptr() *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS {
	return &v
}

type NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS struct {
	value *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS
	isSet bool
}

func (v NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) Get() *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS {
	return v.value
}

func (v *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) Set(val *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) {
	v.value = val
	v.isSet = true
}

func (v NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) IsSet() bool {
	return v.isSet
}

func (v *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS(val *ENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS {
	return &NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS{value: val, isSet: true}
}

func (v NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableENUM0PROPERTIESCONFIGURATIONPROPERTIESSCANPROPERTIESFRONTENDSECURITYCHECKSENABLEDITEMS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

