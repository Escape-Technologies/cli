/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)


// CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections struct for CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections
type CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections struct {
	ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner *[]CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner
	ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 *[]CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner
	err = json.Unmarshal(data, &dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner);
	if err == nil {
		jsonArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner, _ := json.Marshal(dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner)
		if string(jsonArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner) == "{}" { // empty struct
			dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner = nil
		} else {
			return nil // data stored in dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner, return on the first match
		}
	} else {
		dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner = nil
	}

	// try to unmarshal JSON data into ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1
	err = json.Unmarshal(data, &dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1);
	if err == nil {
		jsonArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1, _ := json.Marshal(dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1)
		if string(jsonArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1) == "{}" { // empty struct
			dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 = nil
		} else {
			return nil // data stored in dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1, return on the first match
		}
	} else {
		dst.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) MarshalJSON() ([]byte, error) {
	if src.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner != nil {
		return json.Marshal(&src.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner)
	}

	if src.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1 != nil {
		return json.Marshal(&src.ArrayOfCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjectionsAnyOfInner1)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections struct {
	value *CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections
	isSet bool
}

func (v NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) Get() *CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections {
	return v.value
}

func (v *NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) Set(val *CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections(val *CreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) *NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections {
	return &NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections{value: val, isSet: true}
}

func (v NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequestAnyOfConfigurationAuthenticationProceduresInnerInjections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


