/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"fmt"
)

// Enum5240b1e44488028e2fb125a667a7a4bd the model 'Enum5240b1e44488028e2fb125a667a7a4bd'
type Enum5240b1e44488028e2fb125a667a7a4bd string

// List of Enum_5240b1e44488028e2fb125a667a7a4bd
const (
	ENUM5240B1E44488028E2FB125A667A7A4BD_ARTICLE_5 Enum5240b1e44488028e2fb125a667a7a4bd = "Article-5"
	ENUM5240B1E44488028E2FB125A667A7A4BD_ARTICLE_25 Enum5240b1e44488028e2fb125a667a7a4bd = "Article-25"
	ENUM5240B1E44488028E2FB125A667A7A4BD_ARTICLE_32 Enum5240b1e44488028e2fb125a667a7a4bd = "Article-32"
	ENUM5240B1E44488028E2FB125A667A7A4BD_ARTICLE_33 Enum5240b1e44488028e2fb125a667a7a4bd = "Article-33"
)

// All allowed values of Enum5240b1e44488028e2fb125a667a7a4bd enum
var AllowedEnum5240b1e44488028e2fb125a667a7a4bdEnumValues = []Enum5240b1e44488028e2fb125a667a7a4bd{
	"Article-5",
	"Article-25",
	"Article-32",
	"Article-33",
}

func (v *Enum5240b1e44488028e2fb125a667a7a4bd) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Enum5240b1e44488028e2fb125a667a7a4bd(value)
	for _, existing := range AllowedEnum5240b1e44488028e2fb125a667a7a4bdEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Enum5240b1e44488028e2fb125a667a7a4bd", value)
}

// NewEnum5240b1e44488028e2fb125a667a7a4bdFromValue returns a pointer to a valid Enum5240b1e44488028e2fb125a667a7a4bd
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnum5240b1e44488028e2fb125a667a7a4bdFromValue(v string) (*Enum5240b1e44488028e2fb125a667a7a4bd, error) {
	ev := Enum5240b1e44488028e2fb125a667a7a4bd(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Enum5240b1e44488028e2fb125a667a7a4bd: valid values are %v", v, AllowedEnum5240b1e44488028e2fb125a667a7a4bdEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Enum5240b1e44488028e2fb125a667a7a4bd) IsValid() bool {
	for _, existing := range AllowedEnum5240b1e44488028e2fb125a667a7a4bdEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum_5240b1e44488028e2fb125a667a7a4bd value
func (v Enum5240b1e44488028e2fb125a667a7a4bd) Ptr() *Enum5240b1e44488028e2fb125a667a7a4bd {
	return &v
}

type NullableEnum5240b1e44488028e2fb125a667a7a4bd struct {
	value *Enum5240b1e44488028e2fb125a667a7a4bd
	isSet bool
}

func (v NullableEnum5240b1e44488028e2fb125a667a7a4bd) Get() *Enum5240b1e44488028e2fb125a667a7a4bd {
	return v.value
}

func (v *NullableEnum5240b1e44488028e2fb125a667a7a4bd) Set(val *Enum5240b1e44488028e2fb125a667a7a4bd) {
	v.value = val
	v.isSet = true
}

func (v NullableEnum5240b1e44488028e2fb125a667a7a4bd) IsSet() bool {
	return v.isSet
}

func (v *NullableEnum5240b1e44488028e2fb125a667a7a4bd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnum5240b1e44488028e2fb125a667a7a4bd(val *Enum5240b1e44488028e2fb125a667a7a4bd) *NullableEnum5240b1e44488028e2fb125a667a7a4bd {
	return &NullableEnum5240b1e44488028e2fb125a667a7a4bd{value: val, isSet: true}
}

func (v NullableEnum5240b1e44488028e2fb125a667a7a4bd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnum5240b1e44488028e2fb125a667a7a4bd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

