/*
Escape Public API

This API enables you to operate [Escape](https://escape.tech/) programmatically.  All requests must be authenticated with a valid API key, provided in the `Authorization` header. For example: `Authorization: Key YOUR_API_KEY`.  You can find your API key in the [Escape dashboard](http://app.escape.tech/user/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetRoles200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRoles200ResponseInner{}

// GetRoles200ResponseInner struct for GetRoles200ResponseInner
type GetRoles200ResponseInner struct {
	// The ID of the role.
	Id string `json:"id"`
	// The name of the role.
	Name string `json:"name"`
	// Access level for applications.
	ApplicationAccessLevel string `json:"applicationAccessLevel"`
	// Whether the role has reporting administrator privileges.
	ReportingAdministrator bool `json:"reportingAdministrator"`
	// Access level for inventory.
	InventoryAccessLevel string `json:"inventoryAccessLevel"`
	// Whether the role has integration administrator privileges.
	IntegrationAdministrator bool `json:"integrationAdministrator"`
	// Access level for workflows.
	WorkflowsAccessLevel string `json:"workflowsAccessLevel"`
	// The users associated with the role.
	RoleUsers []GetRoles200ResponseInnerRoleUsersInner `json:"roleUsers"`
}

type _GetRoles200ResponseInner GetRoles200ResponseInner

// NewGetRoles200ResponseInner instantiates a new GetRoles200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRoles200ResponseInner(id string, name string, applicationAccessLevel string, reportingAdministrator bool, inventoryAccessLevel string, integrationAdministrator bool, workflowsAccessLevel string, roleUsers []GetRoles200ResponseInnerRoleUsersInner) *GetRoles200ResponseInner {
	this := GetRoles200ResponseInner{}
	this.Id = id
	this.Name = name
	this.ApplicationAccessLevel = applicationAccessLevel
	this.ReportingAdministrator = reportingAdministrator
	this.InventoryAccessLevel = inventoryAccessLevel
	this.IntegrationAdministrator = integrationAdministrator
	this.WorkflowsAccessLevel = workflowsAccessLevel
	this.RoleUsers = roleUsers
	return &this
}

// NewGetRoles200ResponseInnerWithDefaults instantiates a new GetRoles200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRoles200ResponseInnerWithDefaults() *GetRoles200ResponseInner {
	this := GetRoles200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetRoles200ResponseInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetRoles200ResponseInner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GetRoles200ResponseInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetRoles200ResponseInner) SetName(v string) {
	o.Name = v
}

// GetApplicationAccessLevel returns the ApplicationAccessLevel field value
func (o *GetRoles200ResponseInner) GetApplicationAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationAccessLevel
}

// GetApplicationAccessLevelOk returns a tuple with the ApplicationAccessLevel field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetApplicationAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationAccessLevel, true
}

// SetApplicationAccessLevel sets field value
func (o *GetRoles200ResponseInner) SetApplicationAccessLevel(v string) {
	o.ApplicationAccessLevel = v
}

// GetReportingAdministrator returns the ReportingAdministrator field value
func (o *GetRoles200ResponseInner) GetReportingAdministrator() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReportingAdministrator
}

// GetReportingAdministratorOk returns a tuple with the ReportingAdministrator field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetReportingAdministratorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportingAdministrator, true
}

// SetReportingAdministrator sets field value
func (o *GetRoles200ResponseInner) SetReportingAdministrator(v bool) {
	o.ReportingAdministrator = v
}

// GetInventoryAccessLevel returns the InventoryAccessLevel field value
func (o *GetRoles200ResponseInner) GetInventoryAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InventoryAccessLevel
}

// GetInventoryAccessLevelOk returns a tuple with the InventoryAccessLevel field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetInventoryAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InventoryAccessLevel, true
}

// SetInventoryAccessLevel sets field value
func (o *GetRoles200ResponseInner) SetInventoryAccessLevel(v string) {
	o.InventoryAccessLevel = v
}

// GetIntegrationAdministrator returns the IntegrationAdministrator field value
func (o *GetRoles200ResponseInner) GetIntegrationAdministrator() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IntegrationAdministrator
}

// GetIntegrationAdministratorOk returns a tuple with the IntegrationAdministrator field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetIntegrationAdministratorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationAdministrator, true
}

// SetIntegrationAdministrator sets field value
func (o *GetRoles200ResponseInner) SetIntegrationAdministrator(v bool) {
	o.IntegrationAdministrator = v
}

// GetWorkflowsAccessLevel returns the WorkflowsAccessLevel field value
func (o *GetRoles200ResponseInner) GetWorkflowsAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowsAccessLevel
}

// GetWorkflowsAccessLevelOk returns a tuple with the WorkflowsAccessLevel field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetWorkflowsAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowsAccessLevel, true
}

// SetWorkflowsAccessLevel sets field value
func (o *GetRoles200ResponseInner) SetWorkflowsAccessLevel(v string) {
	o.WorkflowsAccessLevel = v
}

// GetRoleUsers returns the RoleUsers field value
func (o *GetRoles200ResponseInner) GetRoleUsers() []GetRoles200ResponseInnerRoleUsersInner {
	if o == nil {
		var ret []GetRoles200ResponseInnerRoleUsersInner
		return ret
	}

	return o.RoleUsers
}

// GetRoleUsersOk returns a tuple with the RoleUsers field value
// and a boolean to check if the value has been set.
func (o *GetRoles200ResponseInner) GetRoleUsersOk() ([]GetRoles200ResponseInnerRoleUsersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleUsers, true
}

// SetRoleUsers sets field value
func (o *GetRoles200ResponseInner) SetRoleUsers(v []GetRoles200ResponseInnerRoleUsersInner) {
	o.RoleUsers = v
}

func (o GetRoles200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoles200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["applicationAccessLevel"] = o.ApplicationAccessLevel
	toSerialize["reportingAdministrator"] = o.ReportingAdministrator
	toSerialize["inventoryAccessLevel"] = o.InventoryAccessLevel
	toSerialize["integrationAdministrator"] = o.IntegrationAdministrator
	toSerialize["workflowsAccessLevel"] = o.WorkflowsAccessLevel
	toSerialize["roleUsers"] = o.RoleUsers
	return toSerialize, nil
}

func (o *GetRoles200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"applicationAccessLevel",
		"reportingAdministrator",
		"inventoryAccessLevel",
		"integrationAdministrator",
		"workflowsAccessLevel",
		"roleUsers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRoles200ResponseInner := _GetRoles200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRoles200ResponseInner)

	if err != nil {
		return err
	}

	*o = GetRoles200ResponseInner(varGetRoles200ResponseInner)

	return err
}

type NullableGetRoles200ResponseInner struct {
	value *GetRoles200ResponseInner
	isSet bool
}

func (v NullableGetRoles200ResponseInner) Get() *GetRoles200ResponseInner {
	return v.value
}

func (v *NullableGetRoles200ResponseInner) Set(val *GetRoles200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoles200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoles200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoles200ResponseInner(val *GetRoles200ResponseInner) *NullableGetRoles200ResponseInner {
	return &NullableGetRoles200ResponseInner{value: val, isSet: true}
}

func (v NullableGetRoles200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoles200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


